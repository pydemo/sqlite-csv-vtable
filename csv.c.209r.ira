
;; Function csv_reader_init (csv_reader_init, funcdef_no=2, decl_uid=5523, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 23(l0): point = 0
   Insn 22(l0): point = 2
   Insn 21(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 6(l0): point = 34
   Insn 2(l0): point = 36
 a0(r67): [1..2]
 a1(r66): [5..6]
 a2(r65): [9..10]
 a3(r64): [13..14]
 a4(r63): [17..18]
 a5(r62): [21..22]
 a6(r61): [25..26]
 a7(r60): [29..30]
 a8(r59): [33..34]
Compressing live ranges: from 39 to 18 - 46%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r66): [2..3]
 a2(r65): [4..5]
 a3(r64): [6..7]
 a4(r63): [8..9]
 a5(r62): [10..11]
 a6(r61): [12..13]
 a7(r60): [14..15]
 a8(r59): [16..17]
  regions=1, blocks=3, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r59  l0     0    7:r60  l0     0    6:r61  l0     0    5:r62  l0     0
    4:r63  l0     0    3:r64  l0     0    2:r65  l0     0    1:r66  l0     0
    0:r67  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_reader_init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,12u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} 
;;    total ref usage 55{28d,27u,0e} in 19{19 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 60 61 62 63 64 65 66 67
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 59)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:90 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:DI (reg/f:DI 59) [0 p_1(D)->in+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:90 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 60)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:91 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 60)
                (const_int 8 [0x8])) [0 p_1(D)->z+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:91 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 61)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/j:SI (plus:DI (reg/f:DI 61)
                (const_int 16 [0x10])) [0 p_1(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:92 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 61)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:93 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j:SI (plus:DI (reg/f:DI 62)
                (const_int 20 [0x14])) [0 p_1(D)->nAlloc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:93 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 62)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:94 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (mem/j:SI (plus:DI (reg/f:DI 63)
                (const_int 24 [0x18])) [0 p_1(D)->nLine+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:94 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (mem/j:SI (plus:DI (reg/f:DI 64)
                (const_int 28 [0x1c])) [0 p_1(D)->bNotFirst+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:95 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (mem/j:DI (plus:DI (reg/f:DI 65)
                (const_int 48 [0x30])) [0 p_1(D)->nIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:97 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 66)
                (const_int 56 [0x38])) [0 p_1(D)->zIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:97 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:98 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 0 2 (set (mem/j:QI (plus:DI (reg/f:DI 67)
                (const_int 64 [0x40])) [0 p_1(D)->zErr+0 S1 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:98 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_reader_reset (csv_reader_reset, funcdef_no=3, decl_uid=5526, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r63,l0) best DIREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 31(l0): point = 4
   Insn 30(l0): point = 6
   Insn 29(l0): point = 8
   Insn 28(l0): point = 10
   Insn 27(l0): point = 12
   Insn 26(l0): point = 14
   Insn 25(l0): point = 16
   Insn 24(l0): point = 18
   Insn 21(l0): point = 21
   Insn 20(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 17(l0): point = 29
   Insn 16(l0): point = 31
   Insn 15(l0): point = 33
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 6(l0): point = 50
   Insn 2(l0): point = 52
 a0(r73): [3..4]
 a1(r65): [7..14]
 a2(r66): [9..10]
 a3(r72): [11..12]
 a4(r64): [15..16]
 a5(r71): [17..18]
 a6(r62): [22..29]
 a7(r63): [24..25]
 a8(r70): [26..27]
 a9(r61): [30..31]
 a10(r69): [32..33]
 a11(r60): [38..39]
 a12(r68): [40..41]
 a13(r59): [47..48]
 a14(r67): [49..50]
Compressing live ranges: from 55 to 26 - 47%
Ranges after the compression:
 a0(r73): [0..1]
 a1(r65): [2..5]
 a2(r66): [2..3]
 a3(r72): [4..5]
 a4(r64): [6..7]
 a5(r71): [8..9]
 a6(r62): [10..13]
 a7(r63): [10..11]
 a8(r70): [12..13]
 a9(r61): [14..15]
 a10(r69): [16..17]
 a11(r60): [18..19]
 a12(r68): [20..21]
 a13(r59): [22..23]
 a14(r67): [24..25]
  regions=1, blocks=5, points=26
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   13:r59  l0     0   11:r60  l0     0    9:r61  l0     0    6:r62  l0     0
    7:r63  l0     1    4:r64  l0     0    1:r65  l0     0    2:r66  l0     1
   14:r67  l0     0   12:r68  l0     0   10:r69  l0     0    8:r70  l0     1
    5:r71  l0     0    3:r72  l0     1    0:r73  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_reader_reset

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={5d,1u} r18={4d} r19={4d} r20={1d,10u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} 
;;    total ref usage 261{215d,46u,0e} in 26{22 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 67
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:102 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:103 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 59 [ D.6520 ])
        (mem/f/j:DI (reg/f:DI 67) [0 p_1(D)->in+0 S8 A64])) ./ext/misc/csv.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.6520 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:103 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6520 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ./ext/misc/csv.c:103 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 68 69 70
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ D.6520 ])
        (mem/f/j:DI (reg/f:DI 68) [0 p_1(D)->in+0 S8 A64])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 60 [ D.6520 ])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6520 ])
        (nil)))
(call_insn 14 13 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fbdb47a9900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 61 [ sqlite3_api.0 ])
        (mem/f/c:DI (reg/f:DI 69) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 62 [ D.6521 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 61 [ sqlite3_api.0 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.0_4->free+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ sqlite3_api.0 ])
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 63 [ D.6522 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 70)
                (const_int 56 [0x38])) [0 p_1(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.6522 ])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6522 ])
        (nil)))
(call_insn 21 20 22 3 (call (mem:QI (reg/f:DI 62 [ D.6521 ]) [0 *_5 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:105 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.6521 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 66 71 72 73
(code_label 22 21 23 4 3 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 71)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 64 [ sqlite3_api.1 ])
        (mem/f/c:DI (reg/f:DI 71) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 65 [ D.6521 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 64 [ sqlite3_api.1 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.1_7->free+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ sqlite3_api.1 ])
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 66 [ D.6522 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72)
                (const_int 8 [0x8])) [0 p_1(D)->z+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 66 [ D.6522 ])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6522 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (reg/f:DI 65 [ D.6521 ]) [0 *_8 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:107 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6521 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:108 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 73)) ./ext/misc/csv.c:108 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(call_insn 33 32 0 4 (call (mem:QI (symbol_ref:DI ("csv_reader_init") [flags 0x3]  <function_decl 0x7fbdb47cdf00 csv_reader_init>) [0 csv_reader_init S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:108 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_errmsg (csv_errmsg, funcdef_no=4, decl_uid=5530, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r66: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best DREG, allocno GENERAL_REGS
    r65: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r65,l0) best CREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best SIREG, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a2(r66,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r65,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 36(l0): point = 4
   Insn 35(l0): point = 6
   Insn 34(l0): point = 8
   Insn 33(l0): point = 10
   Insn 32(l0): point = 12
   Insn 31(l0): point = 14
   Insn 30(l0): point = 16
   Insn 29(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 18(l0): point = 32
   Insn 16(l0): point = 35
   Insn 15(l0): point = 37
   Insn 14(l0): point = 39
   Insn 13(l0): point = 41
   Insn 12(l0): point = 43
   Insn 11(l0): point = 45
   Insn 10(l0): point = 47
   Insn 9(l0): point = 49
   Insn 8(l0): point = 52
   Insn 7(l0): point = 54
   Insn 6(l0): point = 56
   Insn 5(l0): point = 58
   Insn 4(l0): point = 60
   Insn 3(l0): point = 62
   Insn 2(l0): point = 64
 a0(r60): [1..18]
 a1(r61): [5..14]
 a2(r66): [7..10]
 a3(r65): [9..12]
 a4(r64): [15..16]
 a5(r59): [19..20]
 a6(r63): [21..22]
Compressing live ranges: from 67 to 8 - 11%
Ranges after the compression:
 a0(r60): [0..3]
 a1(r61): [0..1]
 a2(r66): [0..1]
 a3(r65): [0..1]
 a4(r64): [2..3]
 a5(r59): [4..5]
 a6(r63): [6..7]
  regions=1, blocks=5, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r59  l0     0    0:r60  l0     0    1:r61  l0     4    6:r63  l0     0
    4:r64  l0     1    3:r65  l0     2    2:r66  l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_errmsg

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={4d,1u} r18={1d} r19={1d} r20={1d,26u,1e} r21={2d,1u} r22={2d,1u} r23={2d,1u} r24={2d,1u} r25={2d,1u} r26={2d,1u} r27={2d,1u} r28={2d,1u} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 144{77d,66u,1e} in 32{31 regular + 1 call} insns.
(note 1 0 20 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags]
(note 20 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 20 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 16 [0x10])) [0  S8 A8])
        (reg:DI 1 dx)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx)
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 24 [0x18])) [0  S8 A8])
        (reg:DI 2 cx)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 32 [0x20])) [0  S8 A8])
        (reg:DI 37 r8)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 40 [0x28])) [0  S8 A8])
        (reg:DI 38 r9)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax)
            (const_int 0 [0]))) ./ext/misc/csv.c:112 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(jump_insn 8 7 41 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:112 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  def 	
(note 41 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 41 10 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:V4SF 21 xmm0)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0)
        (nil)))
(insn 10 9 11 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:V4SF 22 xmm1)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 22 xmm1)
        (nil)))
(insn 11 10 12 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:V4SF 23 xmm2)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 23 xmm2)
        (nil)))
(insn 12 11 13 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 96 [0x60])) [0  S16 A128])
        (reg:V4SF 24 xmm3)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 24 xmm3)
        (nil)))
(insn 13 12 14 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 112 [0x70])) [0  S16 A128])
        (reg:V4SF 25 xmm4)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 25 xmm4)
        (nil)))
(insn 14 13 15 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 128 [0x80])) [0  S16 A128])
        (reg:V4SF 26 xmm5)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 26 xmm5)
        (nil)))
(insn 15 14 16 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 144 [0x90])) [0  S16 A128])
        (reg:V4SF 27 xmm6)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 27 xmm6)
        (nil)))
(insn 16 15 17 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 160 [0xa0])) [0  S16 A128])
        (reg:V4SF 28 xmm7)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 28 xmm7)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 63 64 65 66
(code_label 17 16 42 4 5 "" [1 uses])
(note 42 17 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 42 19 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 zFormat+0 S8 A64])
        (reg:DI 4 si [ zFormat ])) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zFormat ])
        (nil)))
(note 19 18 23 4 NOTE_INSN_FUNCTION_BEG)
(insn 23 19 24 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 MEM[(struct [1] *)&ap].gp_offset+0 S4 A64])
        (const_int 16 [0x10])) ./ext/misc/csv.c:114 89 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 MEM[(struct [1] *)&ap].fp_offset+0 S4 A32])
        (const_int 48 [0x30])) ./ext/misc/csv.c:114 89 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 MEM[(struct [1] *)&ap].overflow_arg_area+0 S8 A64])
        (reg/f:DI 16 argp)) ./ext/misc/csv.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 MEM[(struct [1] *)&ap].reg_save_area+0 S8 A64])
        (reg/f:DI 20 frame)) ./ext/misc/csv.c:114 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 59 [ sqlite3_api.2 ])
        (mem/f/c:DI (reg/f:DI 63) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 60 [ D.6523 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 59 [ sqlite3_api.2 ])
                (const_int 1520 [0x5f0])) [0 sqlite3_api.2_1->xvsnprintf+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ sqlite3_api.2 ])
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg/f:DI 61 [ D.6524 ])
                (plus:DI (reg/f:DI 64)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 65)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:115 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 4 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 zFormat+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 4 (set (reg:DI 2 cx)
        (reg:DI 65)) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 1 dx)
        (reg:DI 66)) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(insn 36 35 37 4 (set (reg:DI 4 si)
        (reg/f:DI 61 [ D.6524 ])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6524 ])
        (nil)))
(insn 37 36 38 4 (set (reg:SI 5 di)
        (const_int 200 [0xc8])) ./ext/misc/csv.c:115 89 {*movsi_internal}
     (nil))
(call_insn 38 37 0 4 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 60 [ D.6523 ]) [0 *_2 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:115 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6523 ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_reader_open (csv_reader_open, funcdef_no=5, decl_uid=5536, cgraph_uid=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 86.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r82,l0) best DREG, allocno GENERAL_REGS
    r81: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r81,l0) best DIREG, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r76,l0) best DIREG, allocno GENERAL_REGS
    r75: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r75,l0) best DIREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r71,l0) best AREG, allocno GENERAL_REGS
    r70: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r70,l0) best AREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r68,l0) best DIREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r64,l0) best AREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r71,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:15
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r70,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r82,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a19(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r64,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a26(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 102(l0): point = 0
   Insn 99(l0): point = 2
   Insn 95(l0): point = 4
   Insn 92(l0): point = 7
   Insn 89(l0): point = 10
   Insn 88(l0): point = 12
   Insn 87(l0): point = 14
   Insn 86(l0): point = 16
   Insn 85(l0): point = 18
   Insn 84(l0): point = 20
   Insn 83(l0): point = 22
   Insn 82(l0): point = 24
   Insn 81(l0): point = 26
   Insn 77(l0): point = 29
   Insn 76(l0): point = 31
   Insn 75(l0): point = 33
   Insn 74(l0): point = 35
   Insn 73(l0): point = 37
   Insn 71(l0): point = 40
   Insn 70(l0): point = 42
   Insn 69(l0): point = 44
   Insn 68(l0): point = 46
   Insn 107(l0): point = 49
   Insn 63(l0): point = 51
   Insn 62(l0): point = 53
   Insn 61(l0): point = 55
   Insn 60(l0): point = 57
   Insn 59(l0): point = 59
   Insn 58(l0): point = 61
   Insn 57(l0): point = 63
   Insn 56(l0): point = 65
   Insn 55(l0): point = 67
   Insn 54(l0): point = 69
   Insn 53(l0): point = 71
   Insn 52(l0): point = 73
   Insn 51(l0): point = 75
   Insn 50(l0): point = 77
   Insn 49(l0): point = 79
   Insn 48(l0): point = 81
   Insn 47(l0): point = 83
   Insn 46(l0): point = 85
   Insn 44(l0): point = 88
   Insn 43(l0): point = 90
   Insn 42(l0): point = 92
   Insn 41(l0): point = 94
   Insn 40(l0): point = 96
   Insn 39(l0): point = 98
   Insn 38(l0): point = 100
   Insn 37(l0): point = 102
   Insn 36(l0): point = 104
   Insn 35(l0): point = 106
   Insn 34(l0): point = 108
   Insn 105(l0): point = 111
   Insn 29(l0): point = 113
   Insn 28(l0): point = 115
   Insn 27(l0): point = 117
   Insn 26(l0): point = 119
   Insn 25(l0): point = 121
   Insn 24(l0): point = 123
   Insn 22(l0): point = 126
   Insn 21(l0): point = 128
   Insn 20(l0): point = 130
   Insn 19(l0): point = 132
   Insn 18(l0): point = 134
   Insn 17(l0): point = 136
   Insn 16(l0): point = 138
   Insn 15(l0): point = 140
   Insn 14(l0): point = 142
   Insn 13(l0): point = 144
   Insn 12(l0): point = 146
   Insn 11(l0): point = 148
   Insn 9(l0): point = 151
   Insn 8(l0): point = 153
   Insn 4(l0): point = 155
   Insn 3(l0): point = 157
   Insn 2(l0): point = 159
 a0(r71): [3..4]
 a1(r59): [111..113] [49..51] [5..7]
 a2(r88): [11..12]
 a3(r70): [11..14]
 a4(r87): [19..20]
 a5(r85): [23..26]
 a6(r86): [23..24]
 a7(r69): [43..44]
 a8(r84): [45..46]
 a9(r83): [58..63]
 a10(r82): [62..65]
 a11(r81): [70..71]
 a12(r67): [74..81]
 a13(r68): [76..77]
 a14(r80): [78..79]
 a15(r66): [82..83]
 a16(r79): [84..85]
 a17(r65): [91..92]
 a18(r78): [93..94]
 a19(r77): [97..98]
 a20(r64): [97..100]
 a21(r76): [105..108]
 a22(r75): [120..123]
 a23(r63): [129..130]
 a24(r74): [131..132]
 a25(r73): [135..136]
 a26(r62): [135..138]
 a27(r61): [141..144]
 a28(r60): [145..146]
 a29(r72): [147..148]
Compressing live ranges: from 162 to 52 - 32%
Ranges after the compression:
 a0(r71): [0..1]
 a1(r59): [36..37] [14..15] [2..3]
 a2(r88): [4..5]
 a3(r70): [4..5]
 a4(r87): [6..7]
 a5(r85): [8..9]
 a6(r86): [8..9]
 a7(r69): [10..11]
 a8(r84): [12..13]
 a9(r83): [16..17]
 a10(r82): [16..17]
 a11(r81): [18..19]
 a12(r67): [20..23]
 a13(r68): [20..21]
 a14(r80): [22..23]
 a15(r66): [24..25]
 a16(r79): [26..27]
 a17(r65): [28..29]
 a18(r78): [30..31]
 a19(r77): [32..33]
 a20(r64): [32..33]
 a21(r76): [34..35]
 a22(r75): [38..39]
 a23(r63): [40..41]
 a24(r74): [42..43]
 a25(r73): [44..45]
 a26(r62): [44..45]
 a27(r61): [46..47]
 a28(r60): [48..49]
 a29(r72): [50..51]
  regions=1, blocks=12, points=52
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=32
Disposition:
    1:r59  l0     0   28:r60  l0     0   27:r61  l0     0   26:r62  l0     0
   23:r63  l0     0   20:r64  l0     0   17:r65  l0     0   15:r66  l0     0
   12:r67  l0     0   13:r68  l0     1    7:r69  l0     0    3:r70  l0     0
    0:r71  l0     0   29:r72  l0     0   25:r73  l0     1   24:r74  l0     0
   22:r75  l0     0   21:r76  l0     0   19:r77  l0     1   18:r78  l0     0
   16:r79  l0     0   14:r80  l0     1   11:r81  l0     0   10:r82  l0     1
    9:r83  l0     0    8:r84  l0     0    5:r85  l0     0    6:r86  l0     1
    4:r87  l0     0    2:r88  l0     1
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_reader_open

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,7u} r1={11d,3u} r2={10d,1u} r4={13d,5u} r5={17d,9u} r6={1d,11u} r7={1d,19u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,10u} r17={12d,4u} r18={8d} r19={8d} r20={1d,30u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 554{425d,129u,0e} in 76{68 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])
        (reg:DI 4 si [ zFilename ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zFilename ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])
        (reg:DI 1 dx [ zData ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ zData ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:127 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ./ext/misc/csv.c:127 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 66)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 72 73 74
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 60 [ sqlite3_api.3 ])
        (mem/f/c:DI (reg/f:DI 72) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 13 12 14 3 (set (reg/f:DI 61 [ D.6528 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ sqlite3_api.3 ])
                (const_int 544 [0x220])) [0 sqlite3_api.3_3->malloc+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ sqlite3_api.3 ])
        (nil)))
(insn 14 13 15 3 (set (reg:SI 5 di)
        (const_int 1024 [0x400])) ./ext/misc/csv.c:128 89 {*movsi_internal}
     (nil))
(call_insn 15 14 16 3 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 61 [ D.6528 ]) [0 *_4 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:128 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6528 ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 62 [ D.6529 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 73)
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])
        (reg/f:DI 62 [ D.6529 ])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_DEAD (reg/f:DI 62 [ D.6529 ])
            (nil))))
(insn 19 18 20 3 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 63 [ D.6530 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 74)
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 63 [ D.6530 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:129 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6530 ])
        (nil)))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ./ext/misc/csv.c:129 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 75
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 75)) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (nil)))
(insn 27 26 28 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:130 91 {*movqi_internal}
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:130 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 105 4 (set (reg:SI 59 [ D.6527 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:131 89 {*movsi_internal}
     (nil))
(jump_insn 105 29 106 4 (set (pc)
        (label_ref 93)) ./ext/misc/csv.c:131 650 {jump}
     (nil)
 -> 93)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 106 105 32)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 76 77 78
(code_label 32 106 33 5 8 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fbdb44bf688 *.LC1>)) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 76)) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(call_insn 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fbdb47a9c00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:133 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 5 (set (reg/f:DI 64 [ D.6531 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 5 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (mem/f/j:DI (reg/f:DI 77) [0 p_6(D)->in+0 S8 A64])
        (reg/f:DI 64 [ D.6531 ])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_DEAD (reg/f:DI 64 [ D.6531 ])
            (nil))))
(insn 41 40 42 5 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:134 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 65 [ D.6531 ])
        (mem/f/j:DI (reg/f:DI 78) [0 p_6(D)->in+0 S8 A64])) ./ext/misc/csv.c:134 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 65 [ D.6531 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:134 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6531 ])
        (nil)))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) ./ext/misc/csv.c:134 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 90)
;;  succ:       6 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 66 67 68 79 80 81 82 83
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:DI 79)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 66 [ sqlite3_api.4 ])
        (mem/f/c:DI (reg/f:DI 79) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (nil)))
(insn 48 47 49 6 (set (reg/f:DI 67 [ D.6532 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ sqlite3_api.4 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.4_11->free+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ sqlite3_api.4 ])
        (nil)))
(insn 49 48 50 6 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 68 [ D.6530 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80)
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg/f:DI 68 [ D.6530 ])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.6530 ])
        (nil)))
(call_insn 52 51 53 6 (call (mem:QI (reg/f:DI 67 [ D.6532 ]) [0 *_12 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:135 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.6532 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 6 (set (reg:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:136 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg:DI 81)) ./ext/misc/csv.c:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 81)
        (nil)))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:136 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 6 (set (reg:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 6 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 6 (set (reg:DI 1 dx)
        (reg:DI 82)) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 59 58 60 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbdb44bf720 *.LC2>)) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 6 (set (reg:DI 5 di)
        (reg:DI 83)) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 61 60 62 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:137 91 {*movqi_internal}
     (nil))
(call_insn 62 61 63 6 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:137 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 63 62 107 6 (set (reg:SI 59 [ D.6527 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:138 89 {*movsi_internal}
     (nil))
(jump_insn 107 63 108 6 (set (pc)
        (label_ref 93)) ./ext/misc/csv.c:138 650 {jump}
     (nil)
 -> 93)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 108 107 66)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 84
(code_label 66 108 67 7 7 "" [1 uses])
(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 7 (set (reg/f:DI 69 [ D.6531 ])
        (mem/f/j:DI (reg/f:DI 84) [0 p_6(D)->in+0 S8 A64])) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 69 [ D.6531 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:141 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.6531 ])
        (nil)))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ./ext/misc/csv.c:141 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5538") [flags 0x2]  <var_decl 0x7fbdb47c2980 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 8 (set (reg:SI 1 dx)
        (const_int 141 [0x8d])) ./ext/misc/csv.c:141 89 {*movsi_internal}
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fbdb44bf850 *.LC4>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(call_insn 77 76 78 8 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:141 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 78 77 79)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 85 86 87 88
(code_label 79 78 80 9 11 "" [1 uses])
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 9 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 9 (set (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])
        (reg/f:DI 86)) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_DEAD (reg/f:DI 85)
            (nil))))
(insn 84 83 85 9 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg:DI 87)) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn/i 86 85 87 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:143 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 87 86 88 9 (set (reg:DI 70 [ D.6533 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 9 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 9 (set (mem/j:DI (plus:DI (reg/f:DI 88)
                (const_int 48 [0x30])) [0 p_6(D)->nIn+0 S8 A64])
        (reg:DI 70 [ D.6533 ])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg:DI 70 [ D.6533 ])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 90 89 91 10 10 "" [1 uses])
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 10 (set (reg:SI 59 [ D.6527 ])
        (const_int 0 [0])) ./ext/misc/csv.c:145 89 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              4 [100.0%] 
;;              6 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 71
(code_label 93 92 94 11 9 "" [2 uses])
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 99 11 (set (reg:SI 71 [ <retval> ])
        (reg:SI 59 [ D.6527 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6527 ])
        (nil)))
(insn 99 95 102 11 (set (reg/i:SI 0 ax)
        (reg:SI 71 [ <retval> ])) ./ext/misc/csv.c:146 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 71 [ <retval> ])
        (nil)))
(insn 102 99 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:146 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_getc_refill (csv_getc_refill, funcdef_no=6, decl_uid=5540, cgraph_uid=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r67,l0) best AREG, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r64,l0) best DIREG, allocno GENERAL_REGS
    r63: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r63,l0) best CREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r67,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r63,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 71(l0): point = 0
   Insn 68(l0): point = 2
   Insn 64(l0): point = 4
   Insn 61(l0): point = 7
   Insn 60(l0): point = 9
   Insn 59(l0): point = 11
   Insn 58(l0): point = 13
   Insn 57(l0): point = 15
   Insn 56(l0): point = 17
   Insn 55(l0): point = 19
   Insn 54(l0): point = 21
   Insn 53(l0): point = 23
   Insn 74(l0): point = 26
   Insn 48(l0): point = 28
   Insn 46(l0): point = 31
   Insn 45(l0): point = 33
   Insn 44(l0): point = 35
   Insn 43(l0): point = 37
   Insn 42(l0): point = 39
   Insn 41(l0): point = 41
   Insn 40(l0): point = 43
   Insn 39(l0): point = 45
   Insn 38(l0): point = 47
   Insn 37(l0): point = 49
   Insn 36(l0): point = 51
   Insn 35(l0): point = 53
   Insn 34(l0): point = 55
   Insn 30(l0): point = 58
   Insn 29(l0): point = 60
   Insn 28(l0): point = 62
   Insn 27(l0): point = 64
   Insn 26(l0): point = 66
   Insn 24(l0): point = 69
   Insn 23(l0): point = 71
   Insn 22(l0): point = 73
   Insn 21(l0): point = 75
   Insn 17(l0): point = 78
   Insn 16(l0): point = 80
   Insn 15(l0): point = 82
   Insn 14(l0): point = 84
   Insn 13(l0): point = 86
   Insn 11(l0): point = 89
   Insn 10(l0): point = 91
   Insn 9(l0): point = 93
   Insn 8(l0): point = 95
   Insn 7(l0): point = 97
   Insn 6(l0): point = 99
   Insn 2(l0): point = 101
 a0(r67): [3..4]
 a1(r59): [26..28] [5..7]
 a2(r66): [8..9]
 a3(r65): [10..11]
 a4(r77): [12..13]
 a5(r76): [16..17]
 a6(r74): [20..23]
 a7(r75): [20..21]
 a8(r73): [36..37]
 a9(r64): [42..49]
 a10(r63): [48..53]
 a11(r72): [50..51]
 a12(r71): [54..55]
 a13(r62): [72..73]
 a14(r70): [74..75]
 a15(r61): [92..93]
 a16(r60): [92..97]
 a17(r69): [94..95]
 a18(r68): [98..99]
Compressing live ranges: from 104 to 34 - 32%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r59): [14..15] [2..3]
 a2(r66): [4..5]
 a3(r65): [6..7]
 a4(r77): [8..9]
 a5(r76): [10..11]
 a6(r74): [12..13]
 a7(r75): [12..13]
 a8(r73): [16..17]
 a9(r64): [18..19]
 a10(r63): [18..21]
 a11(r72): [20..21]
 a12(r71): [22..23]
 a13(r62): [24..25]
 a14(r70): [26..27]
 a15(r61): [28..29]
 a16(r60): [28..31]
 a17(r69): [30..31]
 a18(r68): [32..33]
  regions=1, blocks=10, points=34
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
    1:r59  l0     0   16:r60  l0     1   15:r61  l0     0   13:r62  l0     0
   10:r63  l0     1    9:r64  l0     0    3:r65  l0     0    2:r66  l0     0
    0:r67  l0     0   18:r68  l0     0   17:r69  l0     0   14:r70  l0     0
   12:r71  l0     0   11:r72  l0     0    8:r73  l0     0    6:r74  l0     0
    7:r75  l0     1    5:r76  l0     0    4:r77  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_getc_refill

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={7d,3u} r2={7d,3u} r4={7d,3u} r5={7d,4u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={6d,3u} r18={3d} r19={3d} r20={1d,21u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} 
;;    total ref usage 275{187d,88u,0e} in 48{45 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 68 69
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:151 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 60 [ D.6540 ])
        (mem/j:DI (plus:DI (reg/f:DI 68)
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 61 [ D.6540 ])
        (mem/j:DI (plus:DI (reg/f:DI 69)
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (nil)))
(insn 10 9 11 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 60 [ D.6540 ])
            (reg:DI 61 [ D.6540 ]))) ./ext/misc/csv.c:154 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.6540 ])
        (expr_list:REG_DEAD (reg:DI 60 [ D.6540 ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ./ext/misc/csv.c:154 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5543") [flags 0x2]  <var_decl 0x7fbdb47c2ab0 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 dx)
        (const_int 154 [0x9a])) ./ext/misc/csv.c:154 89 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fbdb44c6558 *.LC5>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:154 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 70
(code_label 19 18 20 4 13 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 62 [ D.6541 ])
        (mem/f/j:DI (reg/f:DI 70) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.6541 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:155 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.6541 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ./ext/misc/csv.c:155 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5543") [flags 0x2]  <var_decl 0x7fbdb47c2ab0 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 1 dx)
        (const_int 155 [0x9b])) ./ext/misc/csv.c:155 89 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fbdb44c65f0 *.LC6>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(call_insn 30 29 31 5 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:155 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 31 30 32)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 71 72 73
(code_label 32 31 33 6 14 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 63 [ D.6541 ])
        (mem/f/j:DI (reg/f:DI 71) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 36 35 37 6 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 64 [ D.6542 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72)
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 38 37 39 6 (set (reg:DI 2 cx)
        (reg/f:DI 63 [ D.6541 ])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6541 ])
        (nil)))
(insn 39 38 40 6 (set (reg:DI 1 dx)
        (const_int 1024 [0x400])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 6 (set (reg:DI 5 di)
        (reg/f:DI 64 [ D.6542 ])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6542 ])
        (nil)))
(call_insn 42 41 43 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7fbdb47c5500 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:157 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 43 42 44 6 (set (reg:DI 73)
        (reg:DI 0 ax)) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 6 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])
        (reg:DI 73)) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) ./ext/misc/csv.c:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 74 7 (set (reg:SI 59 [ D.6539 ])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:158 89 {*movsi_internal}
     (nil))
(jump_insn 74 48 75 7 (set (pc)
        (label_ref 62)) ./ext/misc/csv.c:158 650 {jump}
     (nil)
 -> 62)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 75 74 51)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 65 66 74 75 76 77
(code_label 51 75 52 8 15 "" [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 8 (set (reg:DI 75)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 8 (set (mem/j:DI (plus:DI (reg/f:DI 74)
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])
        (reg:DI 75)) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (expr_list:REG_DEAD (reg/f:DI 74)
            (nil))))
(insn 56 55 57 8 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 8 (set (mem/j:DI (plus:DI (reg/f:DI 76)
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])
        (const_int 1 [0x1])) ./ext/misc/csv.c:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 58 57 59 8 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:161 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 8 (set (reg/f:DI 65 [ D.6542 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 60 59 61 8 (set (reg:QI 66 [ D.6543 ])
        (mem:QI (reg/f:DI 65 [ D.6542 ]) [0 *_10+0 S1 A8])) ./ext/misc/csv.c:161 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6542 ])
        (nil)))
(insn 61 60 62 8 (set (reg:SI 59 [ D.6539 ])
        (sign_extend:SI (reg:QI 66 [ D.6543 ]))) ./ext/misc/csv.c:161 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 66 [ D.6543 ])
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 67
(code_label 62 61 63 9 16 "" [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 68 9 (set (reg:SI 67 [ <retval> ])
        (reg:SI 59 [ D.6539 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6539 ])
        (nil)))
(insn 68 64 71 9 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) ./ext/misc/csv.c:162 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ <retval> ])
        (nil)))
(insn 71 68 0 9 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:162 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_getc (csv_getc, funcdef_no=7, decl_uid=5545, cgraph_uid=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r72,l0) best DIREG, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r68,l0) best AREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r68,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:15
  a2(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a5(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 50(l0): point = 0
   Insn 47(l0): point = 2
   Insn 43(l0): point = 4
   Insn 40(l0): point = 7
   Insn 39(l0): point = 9
   Insn 38(l0): point = 11
   Insn 37(l0): point = 13
   Insn 36(l0): point = 15
   Insn 35(l0): point = 17
   Insn 34(l0): point = 19
   Insn 33(l0): point = 21
   Insn 32(l0): point = 23
   Insn 31(l0): point = 25
   Insn 55(l0): point = 28
   Insn 26(l0): point = 30
   Insn 53(l0): point = 33
   Insn 21(l0): point = 35
   Insn 20(l0): point = 37
   Insn 19(l0): point = 39
   Insn 18(l0): point = 41
   Insn 16(l0): point = 44
   Insn 15(l0): point = 46
   Insn 14(l0): point = 48
   Insn 13(l0): point = 50
   Insn 11(l0): point = 53
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 8(l0): point = 59
   Insn 7(l0): point = 61
   Insn 6(l0): point = 63
   Insn 2(l0): point = 65
 a0(r68): [3..4]
 a1(r59): [33..35] [28..30] [5..7]
 a2(r67): [8..9]
 a3(r66): [10..11]
 a4(r64): [12..19]
 a5(r63): [12..23]
 a6(r75): [14..15]
 a7(r65): [14..17]
 a8(r74): [20..21]
 a9(r73): [24..25]
 a10(r72): [40..41]
 a11(r62): [47..48]
 a12(r71): [49..50]
 a13(r61): [56..57]
 a14(r60): [56..61]
 a15(r70): [58..59]
 a16(r69): [62..63]
Compressing live ranges: from 68 to 30 - 44%
Ranges after the compression:
 a0(r68): [0..1]
 a1(r59): [14..17] [2..3]
 a2(r67): [4..5]
 a3(r66): [6..7]
 a4(r64): [8..9]
 a5(r63): [8..11]
 a6(r75): [8..9]
 a7(r65): [8..9]
 a8(r74): [10..11]
 a9(r73): [12..13]
 a10(r72): [18..19]
 a11(r62): [20..21]
 a12(r71): [22..23]
 a13(r61): [24..25]
 a14(r60): [24..27]
 a15(r70): [26..27]
 a16(r69): [28..29]
  regions=1, blocks=8, points=30
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
    1:r59  l0     0   14:r60  l0     1   13:r61  l0     0   11:r62  l0     0
    5:r63  l0     4    4:r64  l0     0    7:r65  l0     2    3:r66  l0     0
    2:r67  l0     0    0:r68  l0     0   16:r69  l0     0   15:r70  l0     0
   12:r71  l0     0   10:r72  l0     0    9:r73  l0     0    8:r74  l0     0
    6:r75  l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_getc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,7u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,6u} r17={5d,2u} r18={1d} r19={1d} r20={1d,15u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,2u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} 
;;    total ref usage 149{88d,61u,0e} in 31{30 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 69 70
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 60 [ D.6547 ])
        (mem/j:DI (plus:DI (reg/f:DI 69)
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 61 [ D.6547 ])
        (mem/j:DI (plus:DI (reg/f:DI 70)
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))
(insn 10 9 11 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 60 [ D.6547 ])
            (reg:DI 61 [ D.6547 ]))) ./ext/misc/csv.c:166 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.6547 ])
        (expr_list:REG_DEAD (reg:DI 60 [ D.6547 ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ./ext/misc/csv.c:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 71
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 62 [ D.6548 ])
        (mem/f/j:DI (reg/f:DI 71) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.6548 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:167 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.6548 ])
        (nil)))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:167 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 72
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (reg:DI 72)) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc_refill") [flags 0x3]  <function_decl 0x7fbdb47d2700 csv_getc_refill>) [0 csv_getc_refill S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 20 53 4 (set (reg:SI 59 [ D.6546 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 53 21 54 4 (set (pc)
        (label_ref 41)) ./ext/misc/csv.c:167 650 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 54 53 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 24 54 25 5 19 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 55 5 (set (reg:SI 59 [ D.6546 ])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:168 89 {*movsi_internal}
     (nil))
(jump_insn 55 26 56 5 (set (pc)
        (label_ref 41)) ./ext/misc/csv.c:168 650 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 56 55 29)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 63 64 65 66 67 73 74 75
(code_label 29 56 30 6 18 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 63 [ D.6549 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 73)
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))
(insn 33 32 34 6 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:DI 64 [ D.6547 ])
        (mem/j:DI (plus:DI (reg/f:DI 74)
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 65 [ D.6547 ])
                (plus:DI (reg:DI 64 [ D.6547 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:170 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 37 6 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 6 (set (mem/j:DI (plus:DI (reg/f:DI 75)
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])
        (reg:DI 65 [ D.6547 ])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (expr_list:REG_DEAD (reg:DI 65 [ D.6547 ])
            (nil))))
(insn 38 37 39 6 (parallel [
            (set (reg/f:DI 66 [ D.6550 ])
                (plus:DI (reg/f:DI 63 [ D.6549 ])
                    (reg:DI 64 [ D.6547 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:170 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.6547 ])
        (expr_list:REG_DEAD (reg/f:DI 63 [ D.6549 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 39 38 40 6 (set (reg:QI 67 [ D.6551 ])
        (mem:QI (reg/f:DI 66 [ D.6550 ]) [0 *_12+0 S1 A8])) ./ext/misc/csv.c:170 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6550 ])
        (nil)))
(insn 40 39 41 6 (set (reg:SI 59 [ D.6546 ])
        (zero_extend:SI (reg:QI 67 [ D.6551 ]))) ./ext/misc/csv.c:170 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 67 [ D.6551 ])
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              4 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 68
(code_label 41 40 42 7 20 "" [2 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 47 7 (set (reg:SI 68 [ <retval> ])
        (reg:SI 59 [ D.6546 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6546 ])
        (nil)))
(insn 47 43 50 7 (set (reg/i:SI 0 ax)
        (reg:SI 68 [ <retval> ])) ./ext/misc/csv.c:171 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 68 [ <retval> ])
        (nil)))
(insn 50 47 0 7 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_resize_and_append (csv_resize_and_append, funcdef_no=8, decl_uid=5549, cgraph_uid=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r78,l0) best AREG, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r72,l0) best SIREG, allocno GENERAL_REGS
    r71: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r71,l0) best AREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r64,l0) best SIREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r71,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r78,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a26(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:8

   Insn 65(l0): point = 0
   Insn 62(l0): point = 2
   Insn 58(l0): point = 4
   Insn 55(l0): point = 7
   Insn 54(l0): point = 9
   Insn 53(l0): point = 11
   Insn 52(l0): point = 13
   Insn 51(l0): point = 15
   Insn 50(l0): point = 17
   Insn 68(l0): point = 20
   Insn 45(l0): point = 22
   Insn 44(l0): point = 24
   Insn 43(l0): point = 26
   Insn 42(l0): point = 28
   Insn 41(l0): point = 30
   Insn 40(l0): point = 32
   Insn 39(l0): point = 34
   Insn 38(l0): point = 36
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 32(l0): point = 48
   Insn 31(l0): point = 50
   Insn 30(l0): point = 52
   Insn 29(l0): point = 54
   Insn 28(l0): point = 56
   Insn 26(l0): point = 59
   Insn 25(l0): point = 61
   Insn 24(l0): point = 63
   Insn 23(l0): point = 65
   Insn 22(l0): point = 67
   Insn 21(l0): point = 69
   Insn 20(l0): point = 71
   Insn 19(l0): point = 73
   Insn 18(l0): point = 75
   Insn 17(l0): point = 77
   Insn 16(l0): point = 79
   Insn 15(l0): point = 81
   Insn 14(l0): point = 83
   Insn 13(l0): point = 85
   Insn 12(l0): point = 87
   Insn 11(l0): point = 89
   Insn 10(l0): point = 91
   Insn 9(l0): point = 93
   Insn 8(l0): point = 95
   Insn 4(l0): point = 97
   Insn 3(l0): point = 99
   Insn 2(l0): point = 101
 a0(r71): [3..4]
 a1(r59): [20..22] [5..7]
 a2(r87): [14..17]
 a3(r70): [25..28]
 a4(r86): [25..26]
 a5(r69): [29..30]
 a6(r66): [29..42]
 a7(r67): [31..38]
 a8(r85): [33..34]
 a9(r68): [33..36]
 a10(r84): [39..40]
 a11(r83): [43..44]
 a12(r81): [47..50]
 a13(r82): [47..48]
 a14(r79): [53..56]
 a15(r80): [53..54]
 a16(r78): [64..65]
 a17(r63): [68..81]
 a18(r65): [70..73]
 a19(r64): [72..77]
 a20(r77): [74..75]
 a21(r76): [78..79]
 a22(r62): [82..83]
 a23(r75): [84..85]
 a24(r74): [88..89]
 a25(r61): [90..91]
 a26(r60): [92..93]
 a27(r73): [94..95]
 a28(r72): [98..99]
Compressing live ranges: from 104 to 44 - 42%
Ranges after the compression:
 a0(r71): [0..1]
 a1(r59): [6..7] [2..3]
 a2(r87): [4..5]
 a3(r70): [8..9]
 a4(r86): [8..9]
 a5(r69): [10..11]
 a6(r66): [10..15]
 a7(r67): [12..13]
 a8(r85): [12..13]
 a9(r68): [12..13]
 a10(r84): [14..15]
 a11(r83): [16..17]
 a12(r81): [18..19]
 a13(r82): [18..19]
 a14(r79): [20..21]
 a15(r80): [20..21]
 a16(r78): [22..23]
 a17(r63): [24..29]
 a18(r65): [24..25]
 a19(r64): [24..27]
 a20(r77): [26..27]
 a21(r76): [28..29]
 a22(r62): [30..31]
 a23(r75): [32..33]
 a24(r74): [34..35]
 a25(r61): [36..37]
 a26(r60): [38..39]
 a27(r73): [40..41]
 a28(r72): [42..43]
  regions=1, blocks=6, points=44
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
    1:r59  l0     0   26:r60  l0     0   25:r61  l0     0   22:r62  l0     0
   17:r63  l0     0   19:r64  l0     2   18:r65  l0     1    6:r66  l0     4
    7:r67  l0     0    9:r68  l0     2    5:r69  l0     0    3:r70  l0     1
    0:r71  l0     0   28:r72  l0     0   27:r73  l0     0   24:r74  l0     0
   23:r75  l0     0   21:r76  l0     1   20:r77  l0     1   16:r78  l0     0
   14:r79  l0     0   15:r80  l0     1   12:r81  l0     0   13:r82  l0     1
   11:r83  l0     0   10:r84  l0     0    8:r85  l0     1    4:r86  l0     0
    2:r87  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_resize_and_append

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,4u} r1={3d} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={7d,1u} r18={2d} r19={2d} r20={1d,22u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,2u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 227{148d,79u,0e} in 50{48 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 72 73 74 75 76 77 78
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 72)
        (reg:SI 4 si [ c ])) ./ext/misc/csv.c:175 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ c ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 c+0 S1 A8])
        (subreg:QI (reg:SI 72) 0)) ./ext/misc/csv.c:175 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 72)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 60 [ D.6552 ])
        (mem/j:SI (plus:DI (reg/f:DI 73)
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])) ./ext/misc/csv.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 61 [ D.6552 ])
                (plus:SI (reg:SI 60 [ D.6552 ])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:177 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6552 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 74)
                (ashift:SI (reg:SI 61 [ D.6552 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:177 512 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6552 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])
        (reg:SI 74)) ./ext/misc/csv.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 74)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 75)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 62 [ sqlite3_api.5 ])
        (mem/f/c:DI (reg/f:DI 75) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 63 [ D.6553 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 62 [ sqlite3_api.5 ])
                (const_int 1592 [0x638])) [0 sqlite3_api.5_6->realloc64+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ sqlite3_api.5 ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 76)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])) ./ext/misc/csv.c:178 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 64 [ D.6554 ])
        (sign_extend:DI (reg:SI 76))) ./ext/misc/csv.c:178 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 76)
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 65 [ D.6555 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 64 [ D.6554 ])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 64 [ D.6554 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.6555 ])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6555 ])
        (nil)))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 63 [ D.6553 ]) [0 *_7 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:178 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6553 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 2 (set (reg:DI 78)
        (reg:DI 0 ax)) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
        (reg:DI 78)) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:179 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) ./ext/misc/csv.c:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 66 67 68 69 70 79 80 81 82 83 84 85 86
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 79)
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])
        (reg/f:DI 80)) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_DEAD (reg/f:DI 79)
            (nil))))
(insn 31 30 32 3 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 3 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])) ./ext/misc/csv.c:181 89 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (mem/j:SI (plus:DI (reg/f:DI 81)
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])
        (reg:SI 82)) ./ext/misc/csv.c:181 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_DEAD (reg/f:DI 81)
            (nil))))
(insn 34 33 35 3 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 66 [ D.6555 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 83)
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (nil)))
(insn 36 35 37 3 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 3 (set (reg:SI 67 [ D.6552 ])
        (mem/j:SI (plus:DI (reg/f:DI 84)
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:182 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (reg:SI 68 [ D.6552 ])
                (plus:SI (reg:SI 67 [ D.6552 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:182 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 3 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 3 (set (mem/j:SI (plus:DI (reg/f:DI 85)
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])
        (reg:SI 68 [ D.6552 ])) ./ext/misc/csv.c:182 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (expr_list:REG_DEAD (reg:SI 68 [ D.6552 ])
            (nil))))
(insn 41 40 42 3 (set (reg:DI 69 [ D.6556 ])
        (sign_extend:DI (reg:SI 67 [ D.6552 ]))) ./ext/misc/csv.c:182 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6552 ])
        (nil)))
(insn 42 41 43 3 (parallel [
            (set (reg/f:DI 70 [ D.6555 ])
                (plus:DI (reg/f:DI 66 [ D.6555 ])
                    (reg:DI 69 [ D.6556 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:182 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.6556 ])
        (expr_list:REG_DEAD (reg/f:DI 66 [ D.6555 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 3 (set (reg:QI 86)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 c+0 S1 A8])) ./ext/misc/csv.c:182 91 {*movqi_internal}
     (nil))
(insn 44 43 45 3 (set (mem:QI (reg/f:DI 70 [ D.6555 ]) [0 *_16+0 S1 A8])
        (reg:QI 86)) ./ext/misc/csv.c:182 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86)
        (expr_list:REG_DEAD (reg/f:DI 70 [ D.6555 ])
            (nil))))
(insn 45 44 68 3 (set (reg:SI 59 [ D.6552 ])
        (const_int 0 [0])) ./ext/misc/csv.c:183 89 {*movsi_internal}
     (nil))
(jump_insn 68 45 69 3 (set (pc)
        (label_ref 56)) ./ext/misc/csv.c:183 650 {jump}
     (nil)
 -> 56)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 69 68 48)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 87
(code_label 48 69 49 4 22 "" [1 uses])
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg:DI 87)) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 53 52 54 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:185 91 {*movqi_internal}
     (nil))
(call_insn 54 53 55 4 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:185 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 55 54 56 4 (set (reg:SI 59 [ D.6552 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:186 89 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 71
(code_label 56 55 57 5 23 "" [1 uses])
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 5 (set (reg:SI 71 [ <retval> ])
        (reg:SI 59 [ D.6552 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6552 ])
        (nil)))
(insn 62 58 65 5 (set (reg/i:SI 0 ax)
        (reg:SI 71 [ <retval> ])) ./ext/misc/csv.c:188 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 71 [ <retval> ])
        (nil)))
(insn 65 62 0 5 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:188 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_append (csv_append, funcdef_no=9, decl_uid=5555, cgraph_uid=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r73,l0) best DIREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r70,l0) best SIREG, allocno GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r69,l0) best AREG, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r63,l0) best SIREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r69,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a7(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a14(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:8

   Insn 47(l0): point = 0
   Insn 44(l0): point = 2
   Insn 40(l0): point = 4
   Insn 37(l0): point = 7
   Insn 36(l0): point = 9
   Insn 35(l0): point = 11
   Insn 34(l0): point = 13
   Insn 33(l0): point = 15
   Insn 32(l0): point = 17
   Insn 31(l0): point = 19
   Insn 30(l0): point = 21
   Insn 29(l0): point = 23
   Insn 28(l0): point = 25
   Insn 27(l0): point = 27
   Insn 26(l0): point = 29
   Insn 50(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 14(l0): point = 47
   Insn 13(l0): point = 49
   Insn 12(l0): point = 51
   Insn 11(l0): point = 53
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 8(l0): point = 59
   Insn 4(l0): point = 61
   Insn 3(l0): point = 63
   Insn 2(l0): point = 65
 a0(r69): [3..4]
 a1(r59): [32..34] [5..7]
 a2(r68): [10..13]
 a3(r77): [10..11]
 a4(r67): [14..15]
 a5(r64): [14..27]
 a6(r65): [16..23]
 a7(r76): [18..19]
 a8(r66): [18..21]
 a9(r75): [24..25]
 a10(r74): [28..29]
 a11(r73): [39..42]
 a12(r63): [41..44]
 a13(r62): [50..51]
 a14(r60): [50..57]
 a15(r61): [52..53]
 a16(r72): [54..55]
 a17(r71): [58..59]
 a18(r70): [62..63]
Compressing live ranges: from 68 to 28 - 41%
Ranges after the compression:
 a0(r69): [0..1]
 a1(r59): [14..15] [2..3]
 a2(r68): [4..5]
 a3(r77): [4..5]
 a4(r67): [6..7]
 a5(r64): [6..11]
 a6(r65): [8..9]
 a7(r76): [8..9]
 a8(r66): [8..9]
 a9(r75): [10..11]
 a10(r74): [12..13]
 a11(r73): [16..17]
 a12(r63): [16..17]
 a13(r62): [18..19]
 a14(r60): [18..23]
 a15(r61): [20..21]
 a16(r72): [22..23]
 a17(r71): [24..25]
 a18(r70): [26..27]
  regions=1, blocks=6, points=28
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
    1:r59  l0     0   14:r60  l0     1   15:r61  l0     0   13:r62  l0     0
   12:r63  l0     1    5:r64  l0     4    6:r65  l0     0    8:r66  l0     2
    4:r67  l0     0    2:r68  l0     1    0:r69  l0     0   18:r70  l0     0
   17:r71  l0     0   16:r72  l0     0   11:r73  l0     0   10:r74  l0     0
    9:r75  l0     0    7:r76  l0     1    3:r77  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_append

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={5d,1u} r18={1d} r19={1d} r20={1d,15u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={2d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,2u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} 
;;    total ref usage 148{90d,58u,0e} in 32{31 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 70 71 72
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 70)
        (reg:SI 4 si [ c ])) ./ext/misc/csv.c:192 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ c ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8])
        (subreg:QI (reg:SI 70) 0)) ./ext/misc/csv.c:192 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 70)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 60 [ D.6557 ])
        (mem/j:SI (plus:DI (reg/f:DI 71)
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:SI 61 [ D.6557 ])
        (mem/j:SI (plus:DI (reg/f:DI 72)
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 62 [ D.6557 ])
                (plus:SI (reg:SI 61 [ D.6557 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:193 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6557 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 60 [ D.6557 ])
            (reg:SI 62 [ D.6557 ]))) ./ext/misc/csv.c:193 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6557 ])
        (expr_list:REG_DEAD (reg:SI 60 [ D.6557 ])
            (nil))))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:193 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 73
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 63 [ D.6557 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8]))) ./ext/misc/csv.c:193 155 {extendqisi2}
     (nil))
(insn 17 16 18 3 (set (reg:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:SI 4 si)
        (reg:SI 63 [ D.6557 ])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 63 [ D.6557 ])
        (nil)))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 73)) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_resize_and_append") [flags 0x3]  <function_decl 0x7fbdb47d2b00 csv_resize_and_append>) [0 csv_resize_and_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:193 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 21 20 50 3 (set (reg:SI 59 [ D.6557 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 50 21 51 3 (set (pc)
        (label_ref 38)) ./ext/misc/csv.c:193 650 {jump}
     (nil)
 -> 38)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 51 50 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 64 65 66 67 68 74 75 76 77
(code_label 24 51 25 4 25 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 64 [ D.6558 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 74)
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (set (reg:SI 65 [ D.6557 ])
        (mem/j:SI (plus:DI (reg/f:DI 75)
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:SI 66 [ D.6557 ])
                (plus:SI (reg:SI 65 [ D.6557 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:194 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (mem/j:SI (plus:DI (reg/f:DI 76)
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])
        (reg:SI 66 [ D.6557 ])) ./ext/misc/csv.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_DEAD (reg:SI 66 [ D.6557 ])
            (nil))))
(insn 33 32 34 4 (set (reg:DI 67 [ D.6559 ])
        (sign_extend:DI (reg:SI 65 [ D.6557 ]))) ./ext/misc/csv.c:194 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6557 ])
        (nil)))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 68 [ D.6558 ])
                (plus:DI (reg/f:DI 64 [ D.6558 ])
                    (reg:DI 67 [ D.6559 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:194 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 67 [ D.6559 ])
        (expr_list:REG_DEAD (reg/f:DI 64 [ D.6558 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 35 34 36 4 (set (reg:QI 77)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8])) ./ext/misc/csv.c:194 91 {*movqi_internal}
     (nil))
(insn 36 35 37 4 (set (mem:QI (reg/f:DI 68 [ D.6558 ]) [0 *_14+0 S1 A8])
        (reg:QI 77)) ./ext/misc/csv.c:194 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 77)
        (expr_list:REG_DEAD (reg/f:DI 68 [ D.6558 ])
            (nil))))
(insn 37 36 38 4 (set (reg:SI 59 [ D.6557 ])
        (const_int 0 [0])) ./ext/misc/csv.c:195 89 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 69
(code_label 38 37 39 5 26 "" [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 44 5 (set (reg:SI 69 [ <retval> ])
        (reg:SI 59 [ D.6557 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6557 ])
        (nil)))
(insn 44 40 47 5 (set (reg/i:SI 0 ax)
        (reg:SI 69 [ <retval> ])) ./ext/misc/csv.c:196 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 69 [ <retval> ])
        (nil)))
(insn 47 44 0 5 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:196 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_read_one_field (csv_read_one_field, funcdef_no=10, decl_uid=5558, cgraph_uid=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 55 n_edges 88 count 55 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 210.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 256.
verify found no changes in insn with uid = 268.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r152,l0) best AREG, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r143,l0) best DIREG, allocno GENERAL_REGS
    r142: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r142,l0) best DIREG, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r138,l0) best DIREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r126,l0) best DREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a99 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r83,l0) best SIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r80,l0) best SIREG, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r76,l0) best AREG, allocno GENERAL_REGS
    r75: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r75,l0) best SIREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r62,l0) best DREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:78 SSE_REGS:78 MMX_REGS:78 FP_TOP_SSE_REGS:393210 FP_SECOND_SSE_REGS:393210 FLOAT_SSE_REGS:393210 FLOAT_INT_REGS:393210 INT_SSE_REGS:78 FLOAT_INT_SSE_REGS:393210 ALL_REGS:393210 MEM:23
  a2(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a16(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a23(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a30(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a34(r152,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a35(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a36(r100,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a41(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a42(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a43(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a44(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a46(r144,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a47(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a48(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a49(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a50(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a51(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a52(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a53(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a54(r139,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a55(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a56(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a57(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a58(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a59(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a60(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a61(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a62(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a64(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a65(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a66(r76,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a67(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a68(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a69(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a70(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a71(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a72(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a73(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a74(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a75(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a76(r126,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a77(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a78(r62,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a79(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a80(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a81(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a82(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a83(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a84(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a85(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a86(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a87(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a88(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a89(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a90(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a91(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a92(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a93(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a94(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a95(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a96(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a97(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a98(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a99(r115,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a100(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a101(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a102(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a103(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a104(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a105(r109,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a106(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a107(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 352(l0): point = 0
   Insn 349(l0): point = 2
   Insn 345(l0): point = 4
   Insn 342(l0): point = 7
   Insn 341(l0): point = 9
   Insn 340(l0): point = 11
   Insn 339(l0): point = 13
   Insn 336(l0): point = 16
   Insn 335(l0): point = 18
   Insn 334(l0): point = 20
   Insn 333(l0): point = 22
   Insn 332(l0): point = 24
   Insn 331(l0): point = 26
   Insn 330(l0): point = 28
   Insn 328(l0): point = 31
   Insn 327(l0): point = 33
   Insn 326(l0): point = 35
   Insn 325(l0): point = 37
   Insn 322(l0): point = 40
   Insn 321(l0): point = 42
   Insn 320(l0): point = 44
   Insn 319(l0): point = 46
   Insn 318(l0): point = 48
   Insn 315(l0): point = 51
   Insn 314(l0): point = 53
   Insn 313(l0): point = 55
   Insn 312(l0): point = 57
   Insn 311(l0): point = 59
   Insn 309(l0): point = 62
   Insn 308(l0): point = 64
   Insn 307(l0): point = 66
   Insn 306(l0): point = 68
   Insn 305(l0): point = 70
   Insn 304(l0): point = 72
   Insn 303(l0): point = 74
   Insn 302(l0): point = 76
   Insn 301(l0): point = 78
   Insn 300(l0): point = 80
   Insn 298(l0): point = 83
   Insn 297(l0): point = 85
   Insn 296(l0): point = 87
   Insn 295(l0): point = 89
   Insn 294(l0): point = 91
   Insn 293(l0): point = 93
   Insn 292(l0): point = 95
   Insn 291(l0): point = 97
   Insn 290(l0): point = 99
   Insn 288(l0): point = 102
   Insn 287(l0): point = 104
   Insn 376(l0): point = 107
   Insn 261(l0): point = 109
   Insn 259(l0): point = 112
   Insn 258(l0): point = 114
   Insn 257(l0): point = 116
   Insn 256(l0): point = 118
   Insn 255(l0): point = 120
   Insn 254(l0): point = 122
   Insn 253(l0): point = 124
   Insn 252(l0): point = 126
   Insn 251(l0): point = 128
   Insn 250(l0): point = 130
   Insn 275(l0): point = 133
   Insn 274(l0): point = 135
   Insn 270(l0): point = 138
   Insn 269(l0): point = 140
   Insn 268(l0): point = 142
   Insn 267(l0): point = 144
   Insn 266(l0): point = 146
   Insn 284(l0): point = 149
   Insn 283(l0): point = 151
   Insn 281(l0): point = 154
   Insn 280(l0): point = 156
   Insn 278(l0): point = 159
   Insn 277(l0): point = 161
   Insn 374(l0): point = 164
   Insn 372(l0): point = 167
   Insn 242(l0): point = 169
   Insn 241(l0): point = 171
   Insn 240(l0): point = 173
   Insn 239(l0): point = 175
   Insn 238(l0): point = 177
   Insn 237(l0): point = 179
   Insn 236(l0): point = 181
   Insn 235(l0): point = 183
   Insn 233(l0): point = 186
   Insn 232(l0): point = 188
   Insn 231(l0): point = 190
   Insn 230(l0): point = 192
   Insn 229(l0): point = 194
   Insn 228(l0): point = 196
   Insn 227(l0): point = 198
   Insn 226(l0): point = 200
   Insn 225(l0): point = 202
   Insn 224(l0): point = 204
   Insn 223(l0): point = 206
   Insn 222(l0): point = 208
   Insn 221(l0): point = 210
   Insn 220(l0): point = 212
   Insn 219(l0): point = 214
   Insn 218(l0): point = 216
   Insn 216(l0): point = 219
   Insn 215(l0): point = 221
   Insn 214(l0): point = 223
   Insn 213(l0): point = 225
   Insn 212(l0): point = 227
   Insn 211(l0): point = 229
   Insn 210(l0): point = 231
   Insn 209(l0): point = 233
   Insn 208(l0): point = 235
   Insn 207(l0): point = 237
   Insn 206(l0): point = 239
   Insn 205(l0): point = 241
   Insn 204(l0): point = 243
   Insn 203(l0): point = 245
   Insn 202(l0): point = 247
   Insn 201(l0): point = 249
   Insn 199(l0): point = 252
   Insn 198(l0): point = 254
   Insn 197(l0): point = 256
   Insn 196(l0): point = 258
   Insn 194(l0): point = 261
   Insn 193(l0): point = 263
   Insn 192(l0): point = 265
   Insn 191(l0): point = 267
   Insn 370(l0): point = 270
   Insn 366(l0): point = 273
   Insn 171(l0): point = 275
   Insn 364(l0): point = 278
   Insn 155(l0): point = 280
   Insn 154(l0): point = 282
   Insn 153(l0): point = 284
   Insn 152(l0): point = 286
   Insn 151(l0): point = 288
   Insn 150(l0): point = 290
   Insn 149(l0): point = 292
   Insn 148(l0): point = 294
   Insn 147(l0): point = 296
   Insn 146(l0): point = 298
   Insn 145(l0): point = 300
   Insn 144(l0): point = 302
   Insn 143(l0): point = 304
   Insn 362(l0): point = 307
   Insn 135(l0): point = 309
   Insn 134(l0): point = 311
   Insn 133(l0): point = 313
   Insn 132(l0): point = 315
   Insn 131(l0): point = 317
   Insn 130(l0): point = 319
   Insn 129(l0): point = 321
   Insn 128(l0): point = 323
   Insn 127(l0): point = 325
   Insn 360(l0): point = 328
   Insn 116(l0): point = 330
   Insn 115(l0): point = 332
   Insn 114(l0): point = 334
   Insn 113(l0): point = 336
   Insn 112(l0): point = 338
   Insn 110(l0): point = 341
   Insn 109(l0): point = 343
   Insn 108(l0): point = 345
   Insn 107(l0): point = 347
   Insn 106(l0): point = 349
   Insn 105(l0): point = 351
   Insn 104(l0): point = 353
   Insn 103(l0): point = 355
   Insn 102(l0): point = 357
   Insn 101(l0): point = 359
   Insn 100(l0): point = 361
   Insn 99(l0): point = 363
   Insn 98(l0): point = 365
   Insn 97(l0): point = 367
   Insn 39(l0): point = 370
   Insn 38(l0): point = 372
   Insn 37(l0): point = 374
   Insn 36(l0): point = 376
   Insn 35(l0): point = 378
   Insn 34(l0): point = 380
   Insn 33(l0): point = 382
   Insn 358(l0): point = 385
   Insn 355(l0): point = 387
   Insn 61(l0): point = 389
   Insn 368(l0): point = 392
   Insn 179(l0): point = 394
   Insn 178(l0): point = 396
   Insn 177(l0): point = 398
   Insn 176(l0): point = 400
   Insn 169(l0): point = 403
   Insn 168(l0): point = 405
   Insn 167(l0): point = 407
   Insn 166(l0): point = 409
   Insn 165(l0): point = 411
   Insn 164(l0): point = 413
   Insn 163(l0): point = 415
   Insn 162(l0): point = 417
   Insn 161(l0): point = 419
   Insn 160(l0): point = 421
   Insn 42(l0): point = 424
   Insn 41(l0): point = 426
   Insn 141(l0): point = 429
   Insn 140(l0): point = 431
   Insn 122(l0): point = 434
   Insn 121(l0): point = 436
   Insn 91(l0): point = 439
   Insn 90(l0): point = 441
   Insn 81(l0): point = 444
   Insn 80(l0): point = 446
   Insn 74(l0): point = 449
   Insn 73(l0): point = 451
   Insn 67(l0): point = 454
   Insn 66(l0): point = 456
   Insn 56(l0): point = 459
   Insn 55(l0): point = 461
   Insn 46(l0): point = 464
   Insn 45(l0): point = 466
   Insn 52(l0): point = 469
   Insn 51(l0): point = 471
   Insn 50(l0): point = 473
   Insn 49(l0): point = 475
   Insn 48(l0): point = 477
   Insn 59(l0): point = 480
   Insn 58(l0): point = 482
   Insn 70(l0): point = 485
   Insn 69(l0): point = 487
   Insn 77(l0): point = 490
   Insn 76(l0): point = 492
   Insn 84(l0): point = 495
   Insn 83(l0): point = 497
   Insn 87(l0): point = 500
   Insn 86(l0): point = 502
   Insn 94(l0): point = 505
   Insn 93(l0): point = 507
   Insn 125(l0): point = 510
   Insn 124(l0): point = 512
   Insn 31(l0): point = 515
   Insn 30(l0): point = 517
   Insn 29(l0): point = 519
   Insn 28(l0): point = 521
   Insn 27(l0): point = 523
   Insn 26(l0): point = 525
   Insn 24(l0): point = 528
   Insn 23(l0): point = 530
   Insn 356(l0): point = 533
   Insn 18(l0): point = 535
   Insn 17(l0): point = 537
   Insn 16(l0): point = 539
   Insn 14(l0): point = 542
   Insn 13(l0): point = 544
   Insn 12(l0): point = 546
   Insn 11(l0): point = 548
   Insn 10(l0): point = 550
   Insn 9(l0): point = 552
   Insn 8(l0): point = 554
   Insn 7(l0): point = 556
   Insn 6(l0): point = 558
   Insn 2(l0): point = 560
 a0(r106): [3..4]
 a1(r59): [533..535] [273..275] [167..169] [107..109] [5..7]
 a2(r166): [8..9]
 a3(r165): [12..13]
 a4(r105): [17..18]
 a5(r104): [19..20]
 a6(r102): [19..26]
 a7(r103): [21..22]
 a8(r164): [23..24]
 a9(r163): [27..28]
 a10(r101): [34..35]
 a11(r162): [36..37]
 a12(r161): [41..42]
 a13(r97): [41..44]
 a14(r96): [45..46]
 a15(r160): [47..48]
 a16(r159): [52..53]
 a17(r95): [52..55]
 a18(r94): [56..57]
 a19(r158): [58..59]
 a20(r93): [65..66]
 a21(r92): [67..68]
 a22(r91): [69..70]
 a23(r88): [69..78]
 a24(r90): [71..72]
 a25(r89): [73..74]
 a26(r157): [75..76]
 a27(r156): [79..80]
 a28(r87): [86..87]
 a29(r155): [88..89]
 a30(r154): [92..93]
 a31(r86): [92..95]
 a32(r85): [96..97]
 a33(r153): [98..99]
 a34(r152): [139..140]
 a35(r151): [145..146]
 a36(r100): [115..116]
 a37(r150): [121..124]
 a38(r99): [123..126]
 a39(r98): [127..128]
 a40(r149): [129..130]
 a41(r148): [174..175]
 a42(r147): [178..179]
 a43(r146): [182..183]
 a44(r84): [189..190]
 a45(r145): [191..192]
 a46(r144): [195..196]
 a47(r143): [201..202]
 a48(r142): [207..210]
 a49(r83): [209..212]
 a50(r82): [213..214]
 a51(r141): [215..216]
 a52(r81): [222..223]
 a53(r140): [224..225]
 a54(r139): [228..229]
 a55(r138): [234..235]
 a56(r137): [240..243]
 a57(r80): [242..245]
 a58(r79): [246..247]
 a59(r136): [248..249]
 a60(r78): [255..256]
 a61(r135): [257..258]
 a62(r77): [264..265]
 a63(r134): [266..267]
 a64(r133): [395..396]
 a65(r132): [399..400]
 a66(r76): [406..407]
 a67(r131): [412..415]
 a68(r75): [414..417]
 a69(r74): [418..419]
 a70(r130): [420..421]
 a71(r129): [281..282]
 a72(r64): [281..284]
 a73(r63): [285..286]
 a74(r128): [287..288]
 a75(r127): [295..302]
 a76(r126): [299..304]
 a77(r125): [314..321]
 a78(r62): [318..323]
 a79(r124): [324..325]
 a80(r123): [331..332]
 a81(r73): [331..334]
 a82(r72): [335..336]
 a83(r122): [337..338]
 a84(r71): [344..345]
 a85(r70): [346..347]
 a86(r69): [348..349]
 a87(r67): [348..355]
 a88(r68): [350..351]
 a89(r121): [352..353]
 a90(r120): [356..357]
 a91(r119): [360..361]
 a92(r66): [360..363]
 a93(r65): [364..365]
 a94(r118): [366..367]
 a95(r117): [470..471]
 a96(r61): [470..473]
 a97(r60): [474..475]
 a98(r116): [476..477]
 a99(r115): [375..376]
 a100(r114): [381..382]
 a101(r113): [516..517]
 a102(r112): [522..523]
 a103(r111): [524..525]
 a104(r110): [538..539]
 a105(r109): [547..548]
 a106(r108): [553..554]
 a107(r107): [557..558]
Compressing live ranges: from 563 to 192 - 34%
Ranges after the compression:
 a0(r106): [0..1]
 a1(r59): [182..183] [116..117] [72..73] [58..59] [2..3]
 a2(r166): [4..5]
 a3(r165): [6..7]
 a4(r105): [8..9]
 a5(r104): [10..11]
 a6(r102): [10..15]
 a7(r103): [12..13]
 a8(r164): [14..15]
 a9(r163): [16..17]
 a10(r101): [18..19]
 a11(r162): [20..21]
 a12(r161): [22..23]
 a13(r97): [22..23]
 a14(r96): [24..25]
 a15(r160): [26..27]
 a16(r159): [28..29]
 a17(r95): [28..29]
 a18(r94): [30..31]
 a19(r158): [32..33]
 a20(r93): [34..35]
 a21(r92): [36..37]
 a22(r91): [38..39]
 a23(r88): [38..45]
 a24(r90): [40..41]
 a25(r89): [42..43]
 a26(r157): [44..45]
 a27(r156): [46..47]
 a28(r87): [48..49]
 a29(r155): [50..51]
 a30(r154): [52..53]
 a31(r86): [52..53]
 a32(r85): [54..55]
 a33(r153): [56..57]
 a34(r152): [68..69]
 a35(r151): [70..71]
 a36(r100): [60..61]
 a37(r150): [62..63]
 a38(r99): [62..63]
 a39(r98): [64..65]
 a40(r149): [66..67]
 a41(r148): [74..75]
 a42(r147): [76..77]
 a43(r146): [78..79]
 a44(r84): [80..81]
 a45(r145): [82..83]
 a46(r144): [84..85]
 a47(r143): [86..87]
 a48(r142): [88..89]
 a49(r83): [88..89]
 a50(r82): [90..91]
 a51(r141): [92..93]
 a52(r81): [94..95]
 a53(r140): [96..97]
 a54(r139): [98..99]
 a55(r138): [100..101]
 a56(r137): [102..103]
 a57(r80): [102..103]
 a58(r79): [104..105]
 a59(r136): [106..107]
 a60(r78): [108..109]
 a61(r135): [110..111]
 a62(r77): [112..113]
 a63(r134): [114..115]
 a64(r133): [158..159]
 a65(r132): [160..161]
 a66(r76): [162..163]
 a67(r131): [164..165]
 a68(r75): [164..165]
 a69(r74): [166..167]
 a70(r130): [168..169]
 a71(r129): [118..119]
 a72(r64): [118..119]
 a73(r63): [120..121]
 a74(r128): [122..123]
 a75(r127): [124..125]
 a76(r126): [124..125]
 a77(r125): [126..127]
 a78(r62): [126..127]
 a79(r124): [128..129]
 a80(r123): [130..131]
 a81(r73): [130..131]
 a82(r72): [132..133]
 a83(r122): [134..135]
 a84(r71): [136..137]
 a85(r70): [138..139]
 a86(r69): [140..141]
 a87(r67): [140..145]
 a88(r68): [142..143]
 a89(r121): [144..145]
 a90(r120): [146..147]
 a91(r119): [148..149]
 a92(r66): [148..149]
 a93(r65): [150..151]
 a94(r118): [152..153]
 a95(r117): [170..171]
 a96(r61): [170..171]
 a97(r60): [172..173]
 a98(r116): [174..175]
 a99(r115): [154..155]
 a100(r114): [156..157]
 a101(r113): [176..177]
 a102(r112): [178..179]
 a103(r111): [180..181]
 a104(r110): [184..185]
 a105(r109): [186..187]
 a106(r108): [188..189]
 a107(r107): [190..191]
  regions=1, blocks=55, points=192
    allocnos=108 (big 0), copies=0, conflicts=0, ranges=112
Disposition:
    1:r59  l0     0   97:r60  l0     0   96:r61  l0     1   78:r62  l0     1
   73:r63  l0     0   72:r64  l0     1   93:r65  l0     0   92:r66  l0     1
   87:r67  l0     1   88:r68  l0     0   86:r69  l0     0   85:r70  l0     0
   84:r71  l0     0   82:r72  l0     0   81:r73  l0     1   69:r74  l0     0
   68:r75  l0     1   66:r76  l0     0   62:r77  l0     0   60:r78  l0     0
   58:r79  l0     0   57:r80  l0     1   52:r81  l0     0   50:r82  l0     0
   49:r83  l0     1   44:r84  l0     0   32:r85  l0     0   31:r86  l0     1
   28:r87  l0     0   23:r88  l0     1   25:r89  l0     0   24:r90  l0     0
   22:r91  l0     0   21:r92  l0     0   20:r93  l0     0   18:r94  l0     0
   17:r95  l0     1   14:r96  l0     0   13:r97  l0     1   39:r98  l0     0
   38:r99  l0     1   36:r100 l0     0   10:r101 l0     0    6:r102 l0     1
    7:r103 l0     0    5:r104 l0     0    4:r105 l0     0    0:r106 l0     0
  107:r107 l0     0  106:r108 l0     0  105:r109 l0     0  104:r110 l0     0
  103:r111 l0     0  102:r112 l0     0  101:r113 l0     0  100:r114 l0     0
   99:r115 l0     0   98:r116 l0     0   95:r117 l0     0   94:r118 l0     0
   91:r119 l0     0   90:r120 l0     0   89:r121 l0     0   83:r122 l0     0
   80:r123 l0     0   79:r124 l0     0   77:r125 l0     0   76:r126 l0     1
   75:r127 l0     0   74:r128 l0     0   71:r129 l0     0   70:r130 l0     0
   67:r131 l0     0   65:r132 l0     0   64:r133 l0     0   63:r134 l0     0
   61:r135 l0     0   59:r136 l0     0   56:r137 l0     0   55:r138 l0     0
   54:r139 l0     0   53:r140 l0     0   51:r141 l0     0   48:r142 l0     0
   47:r143 l0     0   46:r144 l0     0   45:r145 l0     0   43:r146 l0     0
   42:r147 l0     0   41:r148 l0     0   40:r149 l0     0   37:r150 l0     0
   35:r151 l0     0   34:r152 l0     0   33:r153 l0     0   30:r154 l0     0
   29:r155 l0     0   27:r156 l0     0   26:r157 l0     0   19:r158 l0     0
   16:r159 l0     0   15:r160 l0     0   12:r161 l0     0   11:r162 l0     0
    9:r163 l0     0    8:r164 l0     0    3:r165 l0     0    2:r166 l0     0
+++Costs: overall -27, reg -27, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_read_one_field

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={16d,12u} r1={15d,2u} r2={15d,2u} r4={19d,6u} r5={25d,13u} r6={1d,54u} r7={1d,66u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,53u} r17={54d,34u} r18={12d} r19={12d} r20={1d,144u,3e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r59={5d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} 
;;    total ref usage 1223{726d,494u,3e} in 255{243 regular + 12 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107 108 109
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:211 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:213 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/j:SI (plus:DI (reg/f:DI 107)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:213 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 108)) ./ext/misc/csv.c:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 109)
        (reg:SI 0 ax)) ./ext/misc/csv.c:214 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 109)) ./ext/misc/csv.c:214 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:215 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ./ext/misc/csv.c:215 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 110
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (mem/j:SI (plus:DI (reg/f:DI 110)
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:216 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(insn 18 17 356 3 (set (reg/f:DI 59 [ D.6560 ])
        (const_int 0 [0])) ./ext/misc/csv.c:217 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 356 18 357 3 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:217 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 357 356 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 21 357 22 4 28 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:219 7 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) ./ext/misc/csv.c:219 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 189)
;;  succ:       5 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 111 112 113
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:221 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 112)
        (mem/j:SI (plus:DI (reg/f:DI 111)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:221 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 28 27 29 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 startLine+0 S4 A32])
        (reg:SI 112)) ./ext/misc/csv.c:221 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 29 28 30 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (nil))
(insn 31 30 182 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (reg:SI 113)) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              12 [100.0%] 
;;              31
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 115
(code_label 182 31 32 6 44 "" [2 uses])
(note 32 182 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:224 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg:DI 114)) ./ext/misc/csv.c:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:224 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 6 (set (reg:SI 115)
        (reg:SI 0 ax)) ./ext/misc/csv.c:224 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 38 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 115)) ./ext/misc/csv.c:224 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 38 37 39 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:225 7 {*cmpsi_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) ./ext/misc/csv.c:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 43)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:225 7 {*cmpsi_1}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) ./ext/misc/csv.c:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 158)
;;  succ:       8 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 43 42 44 8 31 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:226 7 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) ./ext/misc/csv.c:226 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 53)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 116 117
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 9 (set (reg:SI 60 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 116)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 50 49 51 9 (parallel [
            (set (reg:SI 61 [ D.6561 ])
                (plus:SI (reg:SI 60 [ D.6561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:226 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6561 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 9 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 9 (set (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])
        (reg:SI 61 [ D.6561 ])) ./ext/misc/csv.c:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (expr_list:REG_DEAD (reg:SI 61 [ D.6561 ])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 53 52 54 10 33 "" [1 uses])
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:227 7 {*cmpsi_1}
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:228 7 {*cmpsi_1}
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:228 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 355 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:229 89 {*movsi_internal}
     (nil))
(insn 355 61 358 12 (const_int 0 [0]) ./ext/misc/csv.c:230 676 {nop}
     (nil))
(jump_insn 358 355 359 12 (set (pc)
        (label_ref 182)) ./ext/misc/csv.c:256 650 {jump}
     (nil)
 -> 182)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 359 358 64)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 64 359 65 13 34 "" [2 uses])
(note 65 64 66 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:233 7 {*cmpsi_1}
     (nil))
(jump_insn 67 66 68 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) ./ext/misc/csv.c:233 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:233 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:233 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
;;  succ:       22
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 70 72 15 36 "" [1 uses])
(note 72 71 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:234 7 {*cmpsi_1}
     (nil))
(jump_insn 74 73 75 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) ./ext/misc/csv.c:234 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 78)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 75 74 76 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:234 7 {*cmpsi_1}
     (nil))
(jump_insn 77 76 78 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:234 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
;;  succ:       22
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 78 77 79 17 38 "" [1 uses])
(note 79 78 80 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 81 80 82 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 88)
;;  succ:       18 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 82 81 83 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 88)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 85 84 86 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
;;  succ:       22
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 88 87 89 20 39 "" [2 uses])
(note 89 88 90 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:236 7 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:236 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 119)
;;  succ:       21 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 92 91 93 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:236 7 {*cmpsi_1}
     (nil))
(jump_insn 94 93 95 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:236 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 119)
;;  succ:       22 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              16
;;              19
;;              21 (FALLTHRU)
;;              22 (DFS_BACK)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 66 67 68 69 70 71 118 119 120 121
(code_label 95 94 96 22 37 "" [4 uses])
(note 96 95 97 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 22 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 22 (set (reg:SI 65 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 118)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 99 98 100 22 (parallel [
            (set (reg:SI 66 [ D.6561 ])
                (plus:SI (reg:SI 65 [ D.6561 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:238 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6561 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 22 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 22 (set (mem/j:SI (plus:DI (reg/f:DI 119)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (reg:SI 66 [ D.6561 ])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (expr_list:REG_DEAD (reg:SI 66 [ D.6561 ])
            (nil))))
(insn 102 101 103 22 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 22 (set (reg/f:DI 67 [ D.6560 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 120)
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 120)
        (nil)))
(insn 104 103 105 22 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 22 (set (reg:SI 68 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 121)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
(insn 106 105 107 22 (set (reg:DI 69 [ D.6563 ])
        (sign_extend:DI (reg:SI 68 [ D.6561 ]))) ./ext/misc/csv.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6561 ])
        (nil)))
(insn 107 106 108 22 (parallel [
            (set (reg/f:DI 70 [ D.6560 ])
                (plus:DI (reg/f:DI 67 [ D.6560 ])
                    (reg:DI 69 [ D.6563 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.6563 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.6560 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 108 107 109 22 (set (reg:QI 71 [ D.6562 ])
        (mem:QI (reg/f:DI 70 [ D.6560 ]) [0 *_26+0 S1 A8])) ./ext/misc/csv.c:238 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6560 ])
        (nil)))
(insn 109 108 110 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.6562 ])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:238 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 71 [ D.6562 ])
        (nil)))
(jump_insn 110 109 111 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:238 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
;;  succ:       22 (DFS_BACK)
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 72 73 122 123
(note 111 110 112 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 23 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:239 89 {*movsi_internal}
     (nil))
(insn 113 112 114 23 (set (reg:QI 72 [ D.6562 ])
        (subreg:QI (reg:SI 122) 0)) ./ext/misc/csv.c:239 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 114 113 115 23 (set (reg:SI 73 [ D.6561 ])
        (sign_extend:SI (reg:QI 72 [ D.6562 ]))) ./ext/misc/csv.c:239 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 72 [ D.6562 ])
        (nil)))
(insn 115 114 116 23 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 360 23 (set (mem/j:SI (plus:DI (reg/f:DI 123)
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 73 [ D.6561 ])) ./ext/misc/csv.c:239 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (expr_list:REG_DEAD (reg:SI 73 [ D.6561 ])
            (nil))))
(jump_insn 360 116 361 23 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:240 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 361 360 119)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 119 361 120 24 40 "" [2 uses])
(note 120 119 121 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:242 7 {*cmpsi_1}
     (nil))
(jump_insn 122 121 123 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) ./ext/misc/csv.c:242 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 138)
;;  succ:       25 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 123 122 124 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:242 7 {*cmpsi_1}
     (nil))
(jump_insn 125 124 126 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) ./ext/misc/csv.c:242 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 138)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 124 125
(note 126 125 127 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 26 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 26 (set (reg:SI 62 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 124)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (nil)))
(insn 129 128 130 26 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 26 (set (reg:SI 2 cx)
        (const_int 34 [0x22])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (nil))
(insn 131 130 132 26 (set (reg:SI 1 dx)
        (reg:SI 62 [ D.6561 ])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6561 ])
        (nil)))
(insn 132 131 133 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fbdb44dab48 *.LC7>)) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 26 (set (reg:DI 5 di)
        (reg:DI 125)) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 134 133 135 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:243 91 {*movqi_internal}
     (nil))
(call_insn 135 134 362 26 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:243 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(jump_insn 362 135 363 26 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:244 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 363 362 138)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;;              25
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 138 363 139 27 42 "" [2 uses])
(note 139 138 140 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:246 7 {*cmpsi_1}
     (nil))
(jump_insn 141 140 142 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) ./ext/misc/csv.c:246 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 158)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 126 127 128 129
(note 142 141 143 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 28 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 startLine+0 S4 A32])) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (nil))
(insn 144 143 145 28 (set (reg:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (nil))
(insn 145 144 146 28 (set (reg:SI 2 cx)
        (const_int 34 [0x22])) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (nil))
(insn 146 145 147 28 (set (reg:SI 1 dx)
        (reg:SI 126)) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 147 146 148 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fbdb44dabe0 *.LC8>)) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 28 (set (reg:DI 5 di)
        (reg:DI 127)) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 127)
        (nil)))
(insn 149 148 150 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:247 91 {*movqi_internal}
     (nil))
(call_insn 150 149 151 28 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:247 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 151 150 152 28 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:249 89 {*movsi_internal}
     (nil))
(insn 152 151 153 28 (set (reg:QI 63 [ D.6562 ])
        (subreg:QI (reg:SI 128) 0)) ./ext/misc/csv.c:249 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 153 152 154 28 (set (reg:SI 64 [ D.6561 ])
        (sign_extend:SI (reg:QI 63 [ D.6562 ]))) ./ext/misc/csv.c:249 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 63 [ D.6562 ])
        (nil)))
(insn 154 153 155 28 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 364 28 (set (mem/j:SI (plus:DI (reg/f:DI 129)
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 64 [ D.6561 ])) ./ext/misc/csv.c:249 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (expr_list:REG_DEAD (reg:SI 64 [ D.6561 ])
            (nil))))
(jump_insn 364 155 365 28 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:250 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 365 364 158)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 130 131
(code_label 158 365 159 29 32 "" [2 uses])
(note 159 158 160 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 29 (set (reg:SI 130)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (nil))
(insn 161 160 162 29 (set (reg:QI 74 [ D.6562 ])
        (subreg:QI (reg:SI 130) 0)) ./ext/misc/csv.c:253 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 162 161 163 29 (set (reg:SI 75 [ D.6561 ])
        (sign_extend:SI (reg:QI 74 [ D.6562 ]))) ./ext/misc/csv.c:253 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 74 [ D.6562 ])
        (nil)))
(insn 163 162 164 29 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (nil))
(insn 164 163 165 29 (set (reg:SI 4 si)
        (reg:SI 75 [ D.6561 ])) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 75 [ D.6561 ])
        (nil)))
(insn 165 164 166 29 (set (reg:DI 5 di)
        (reg:DI 131)) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 166 165 167 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:253 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 167 166 168 29 (set (reg:SI 76 [ D.6561 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 168 167 169 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 76 [ D.6561 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:253 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 76 [ D.6561 ])
        (nil)))
(jump_insn 169 168 170 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) ./ext/misc/csv.c:253 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 174)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 170 169 171 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 366 30 (set (reg/f:DI 59 [ D.6560 ])
        (const_int 0 [0])) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 366 171 367 30 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:253 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 367 366 174)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132 133
(code_label 174 367 175 31 43 "" [1 uses])
(note 175 174 176 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 31 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])) ./ext/misc/csv.c:254 89 {*movsi_internal}
     (nil))
(insn 177 176 178 31 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
        (reg:SI 132)) ./ext/misc/csv.c:254 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 178 177 179 31 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:255 89 {*movsi_internal}
     (nil))
(insn 179 178 368 31 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (reg:SI 133)) ./ext/misc/csv.c:255 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(jump_insn 368 179 369 31 (set (pc)
        (label_ref 182)) ./ext/misc/csv.c:256 650 {jump}
     (nil)
 -> 182)
;;  succ:       6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 369 368 185)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%] 
;;              23 [100.0%] 
;;              28 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 185 369 186 32 41 "" [3 uses])
(note 186 185 370 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 370 186 371 32 (set (pc)
        (label_ref 323)) 650 {jump}
     (nil)
 -> 323)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 371 370 189)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 77 134
(code_label 189 371 190 33 30 "" [1 uses])
(note 190 189 191 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 33 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:260 89 {*movsi_internal}
     (nil))
(insn 192 191 193 33 (set (reg:SI 77 [ D.6561 ])
        (zero_extend:SI (subreg:QI (reg:SI 134) 0))) ./ext/misc/csv.c:260 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 193 192 194 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.6561 ])
            (const_int 239 [0xef]))) ./ext/misc/csv.c:260 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6561 ])
        (nil)))
(jump_insn 194 193 195 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:260 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 245)
;;  succ:       34 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 78 135
(note 195 194 196 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 34 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:260 87 {*movdi_internal_rex64}
     (nil))
(insn 197 196 198 34 (set (reg:SI 78 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 135)
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])) ./ext/misc/csv.c:260 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (nil)))
(insn 198 197 199 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78 [ D.6561 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:260 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 78 [ D.6561 ])
        (nil)))
(jump_insn 199 198 200 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:260 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 245)
;;  succ:       35 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79 80 81 136 137 138 139 140
(note 200 199 201 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 35 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:261 89 {*movsi_internal}
     (nil))
(insn 202 201 203 35 (set (reg:QI 79 [ D.6562 ])
        (subreg:QI (reg:SI 136) 0)) ./ext/misc/csv.c:261 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))
(insn 203 202 204 35 (set (reg:SI 80 [ D.6561 ])
        (sign_extend:SI (reg:QI 79 [ D.6562 ]))) ./ext/misc/csv.c:261 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 79 [ D.6562 ])
        (nil)))
(insn 204 203 205 35 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:261 87 {*movdi_internal_rex64}
     (nil))
(insn 205 204 206 35 (set (reg:SI 4 si)
        (reg:SI 80 [ D.6561 ])) ./ext/misc/csv.c:261 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 80 [ D.6561 ])
        (nil)))
(insn 206 205 207 35 (set (reg:DI 5 di)
        (reg:DI 137)) ./ext/misc/csv.c:261 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 207 206 208 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:261 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 208 207 209 35 (set (reg:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:262 87 {*movdi_internal_rex64}
     (nil))
(insn 209 208 210 35 (set (reg:DI 5 di)
        (reg:DI 138)) ./ext/misc/csv.c:262 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 138)
        (nil)))
(call_insn 210 209 211 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:262 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 211 210 212 35 (set (reg:SI 139)
        (reg:SI 0 ax)) ./ext/misc/csv.c:262 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 212 211 213 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 139)) ./ext/misc/csv.c:262 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 213 212 214 35 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:263 89 {*movsi_internal}
     (nil))
(insn 214 213 215 35 (set (reg:SI 81 [ D.6561 ])
        (zero_extend:SI (subreg:QI (reg:SI 140) 0))) ./ext/misc/csv.c:263 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 215 214 216 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.6561 ])
            (const_int 187 [0xbb]))) ./ext/misc/csv.c:263 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 81 [ D.6561 ])
        (nil)))
(jump_insn 216 215 217 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:263 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 245)
;;  succ:       36 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 84 141 142 143 144 145
(note 217 216 218 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 36 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:264 89 {*movsi_internal}
     (nil))
(insn 219 218 220 36 (set (reg:QI 82 [ D.6562 ])
        (subreg:QI (reg:SI 141) 0)) ./ext/misc/csv.c:264 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 141)
        (nil)))
(insn 220 219 221 36 (set (reg:SI 83 [ D.6561 ])
        (sign_extend:SI (reg:QI 82 [ D.6562 ]))) ./ext/misc/csv.c:264 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 82 [ D.6562 ])
        (nil)))
(insn 221 220 222 36 (set (reg:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:264 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 36 (set (reg:SI 4 si)
        (reg:SI 83 [ D.6561 ])) ./ext/misc/csv.c:264 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.6561 ])
        (nil)))
(insn 223 222 224 36 (set (reg:DI 5 di)
        (reg:DI 142)) ./ext/misc/csv.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(call_insn 224 223 225 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:264 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 225 224 226 36 (set (reg:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:265 87 {*movdi_internal_rex64}
     (nil))
(insn 226 225 227 36 (set (reg:DI 5 di)
        (reg:DI 143)) ./ext/misc/csv.c:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(call_insn 227 226 228 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:265 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 36 (set (reg:SI 144)
        (reg:SI 0 ax)) ./ext/misc/csv.c:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 229 228 230 36 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 144)) ./ext/misc/csv.c:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 230 229 231 36 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:266 89 {*movsi_internal}
     (nil))
(insn 231 230 232 36 (set (reg:SI 84 [ D.6561 ])
        (zero_extend:SI (subreg:QI (reg:SI 145) 0))) ./ext/misc/csv.c:266 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 232 231 233 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ D.6561 ])
            (const_int 191 [0xbf]))) ./ext/misc/csv.c:266 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.6561 ])
        (nil)))
(jump_insn 233 232 234 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:266 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 245)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 146 147 148
(note 234 233 235 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 37 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 236 235 237 37 (set (mem/j:SI (plus:DI (reg/f:DI 146)
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:267 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 146)
        (nil)))
(insn 237 236 238 37 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:268 87 {*movdi_internal_rex64}
     (nil))
(insn 238 237 239 37 (set (mem/j:SI (plus:DI (reg/f:DI 147)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:268 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147)
        (nil)))
(insn 239 238 240 37 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (nil))
(insn 240 239 241 37 (set (reg:DI 5 di)
        (reg:DI 148)) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn 241 240 242 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:269 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 242 241 372 37 (set (reg/f:DI 59 [ D.6560 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 372 242 373 37 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:269 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 373 372 245)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
;;              34
;;              35
;;              36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 245 373 246 38 46 "" [4 uses])
(note 246 245 374 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 374 246 375 38 (set (pc)
        (label_ref 271)) ./ext/misc/csv.c:273 650 {jump}
     (nil)
 -> 271)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 375 374 273)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              45
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 98 99 100 149 150
(code_label 273 375 249 39 49 "" [2 uses])
(note 249 273 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 39 (set (reg:SI 149)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (nil))
(insn 251 250 252 39 (set (reg:QI 98 [ D.6562 ])
        (subreg:QI (reg:SI 149) 0)) ./ext/misc/csv.c:274 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 149)
        (nil)))
(insn 252 251 253 39 (set (reg:SI 99 [ D.6561 ])
        (sign_extend:SI (reg:QI 98 [ D.6562 ]))) ./ext/misc/csv.c:274 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 98 [ D.6562 ])
        (nil)))
(insn 253 252 254 39 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (nil))
(insn 254 253 255 39 (set (reg:SI 4 si)
        (reg:SI 99 [ D.6561 ])) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6561 ])
        (nil)))
(insn 255 254 256 39 (set (reg:DI 5 di)
        (reg:DI 150)) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 256 255 257 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:274 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 257 256 258 39 (set (reg:SI 100 [ D.6561 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 258 257 259 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.6561 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:274 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.6561 ])
        (nil)))
(jump_insn 259 258 260 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) ./ext/misc/csv.c:274 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 264)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 260 259 261 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 376 40 (set (reg/f:DI 59 [ D.6560 ])
        (const_int 0 [0])) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 376 261 377 40 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:274 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 377 376 264)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 151 152
(code_label 264 377 265 41 48 "" [1 uses])
(note 265 264 266 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 41 (set (reg:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:275 87 {*movdi_internal_rex64}
     (nil))
(insn 267 266 268 41 (set (reg:DI 5 di)
        (reg:DI 151)) ./ext/misc/csv.c:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 151)
        (nil)))
(call_insn 268 267 269 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:275 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 269 268 270 41 (set (reg:SI 152)
        (reg:SI 0 ax)) ./ext/misc/csv.c:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 270 269 271 41 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 152)) ./ext/misc/csv.c:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
;;  succ:       42 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU,DFS_BACK)
;;              38 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 271 270 272 42 47 "" [1 uses])
(note 272 271 274 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 274 272 275 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 275 274 276 42 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 273)
;;  succ:       39
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 276 275 277 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 278 277 279 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 285)
;;  succ:       44 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 279 278 280 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 281 280 282 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 285)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 282 281 283 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 284 283 285 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 273)
;;  succ:       39
;;              46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 285 284 286 46 50 "" [2 uses])
(note 286 285 287 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:277 7 {*cmpsi_1}
     (nil))
(jump_insn 288 287 289 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:277 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 316)
;;  succ:       47 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 85 86 87 153 154 155
(note 289 288 290 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 47 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:278 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 47 (set (reg:SI 85 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 153)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (nil)))
(insn 292 291 293 47 (parallel [
            (set (reg:SI 86 [ D.6561 ])
                (plus:SI (reg:SI 85 [ D.6561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:278 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ D.6561 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 293 292 294 47 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:278 87 {*movdi_internal_rex64}
     (nil))
(insn 294 293 295 47 (set (mem/j:SI (plus:DI (reg/f:DI 154)
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])
        (reg:SI 86 [ D.6561 ])) ./ext/misc/csv.c:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (expr_list:REG_DEAD (reg:SI 86 [ D.6561 ])
            (nil))))
(insn 295 294 296 47 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 296 295 297 47 (set (reg:SI 87 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 155)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (nil)))
(insn 297 296 298 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 87 [ D.6561 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:279 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6561 ])
        (nil)))
(jump_insn 298 297 299 47 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 316)
;;  succ:       48 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 91 92 93 156 157
(note 299 298 300 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 48 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 301 300 302 48 (set (reg/f:DI 88 [ D.6560 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 156)
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (nil)))
(insn 302 301 303 48 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 303 302 304 48 (set (reg:SI 89 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 157)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 304 303 305 48 (set (reg:DI 90 [ D.6563 ])
        (sign_extend:DI (reg:SI 89 [ D.6561 ]))) ./ext/misc/csv.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6561 ])
        (nil)))
(insn 305 304 306 48 (parallel [
            (set (reg:DI 91 [ D.6563 ])
                (plus:DI (reg:DI 90 [ D.6563 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.6563 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 306 305 307 48 (parallel [
            (set (reg/f:DI 92 [ D.6560 ])
                (plus:DI (reg/f:DI 88 [ D.6560 ])
                    (reg:DI 91 [ D.6563 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.6563 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.6560 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 307 306 308 48 (set (reg:QI 93 [ D.6562 ])
        (mem:QI (reg/f:DI 92 [ D.6560 ]) [0 *_54+0 S1 A8])) ./ext/misc/csv.c:279 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6560 ])
        (nil)))
(insn 308 307 309 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.6562 ])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:279 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 93 [ D.6562 ])
        (nil)))
(jump_insn 309 308 310 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:279 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 316)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 95 158 159
(note 310 309 311 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 49 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 312 311 313 49 (set (reg:SI 94 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 158)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (nil)))
(insn 313 312 314 49 (parallel [
            (set (reg:SI 95 [ D.6561 ])
                (plus:SI (reg:SI 94 [ D.6561 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.6561 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 314 313 315 49 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 315 314 316 49 (set (mem/j:SI (plus:DI (reg/f:DI 159)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (reg:SI 95 [ D.6561 ])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (expr_list:REG_DEAD (reg:SI 95 [ D.6561 ])
            (nil))))
;;  succ:       50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;;              47
;;              48
;;              49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 96 97 160 161
(code_label 316 315 317 50 51 "" [3 uses])
(note 317 316 318 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 50 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:281 89 {*movsi_internal}
     (nil))
(insn 319 318 320 50 (set (reg:QI 96 [ D.6562 ])
        (subreg:QI (reg:SI 160) 0)) ./ext/misc/csv.c:281 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 320 319 321 50 (set (reg:SI 97 [ D.6561 ])
        (sign_extend:SI (reg:QI 96 [ D.6562 ]))) ./ext/misc/csv.c:281 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 96 [ D.6562 ])
        (nil)))
(insn 321 320 322 50 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:281 87 {*movdi_internal_rex64}
     (nil))
(insn 322 321 323 50 (set (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 97 [ D.6561 ])) ./ext/misc/csv.c:281 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (expr_list:REG_DEAD (reg:SI 97 [ D.6561 ])
            (nil))))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              32 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 162
(code_label 323 322 324 51 45 "" [1 uses])
(note 324 323 325 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 51 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 326 325 327 51 (set (reg/f:DI 101 [ D.6560 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 162)
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 162)
        (nil)))
(insn 327 326 328 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ D.6560 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:283 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.6560 ])
        (nil)))
(jump_insn 328 327 329 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) ./ext/misc/csv.c:283 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 337)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 103 104 105 163 164
(note 329 328 330 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 52 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 331 330 332 52 (set (reg/f:DI 102 [ D.6560 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 163)
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (nil)))
(insn 332 331 333 52 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 333 332 334 52 (set (reg:SI 103 [ D.6561 ])
        (mem/j:SI (plus:DI (reg/f:DI 164)
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164)
        (nil)))
(insn 334 333 335 52 (set (reg:DI 104 [ D.6563 ])
        (sign_extend:DI (reg:SI 103 [ D.6561 ]))) ./ext/misc/csv.c:283 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ D.6561 ])
        (nil)))
(insn 335 334 336 52 (parallel [
            (set (reg/f:DI 105 [ D.6560 ])
                (plus:DI (reg/f:DI 102 [ D.6560 ])
                    (reg:DI 104 [ D.6563 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:283 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ D.6563 ])
        (expr_list:REG_DEAD (reg/f:DI 102 [ D.6560 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 336 335 337 52 (set (mem:QI (reg/f:DI 105 [ D.6560 ]) [0 *_69+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:283 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.6560 ])
        (nil)))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51
;;              52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 165 166
(code_label 337 336 338 53 52 "" [1 uses])
(note 338 337 339 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 53 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 340 339 341 53 (set (mem/j:SI (plus:DI (reg/f:DI 165)
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:284 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165)
        (nil)))
(insn 341 340 342 53 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 342 341 343 53 (set (reg/f:DI 59 [ D.6560 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 166)
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (nil)))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              3 [100.0%] 
;;              30 [100.0%] 
;;              37 [100.0%] 
;;              40 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 106
(code_label 343 342 344 54 29 "" [4 uses])
(note 344 343 345 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 349 54 (set (reg:DI 106 [ <retval> ])
        (reg/f:DI 59 [ D.6560 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6560 ])
        (nil)))
(insn 349 345 352 54 (set (reg/i:DI 0 ax)
        (reg:DI 106 [ <retval> ])) ./ext/misc/csv.c:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 106 [ <retval> ])
        (nil)))
(insn 352 349 0 54 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:286 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_xfer_error (csv_xfer_error, funcdef_no=11, decl_uid=5630, cgraph_uid=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r65,l0) best AREG, allocno GENERAL_REGS
    r64: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r64,l0) best SIREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r61,l0) best DIREG, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r65,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r70): [1..2]
 a1(r65): [1..4]
 a2(r63): [7..18]
 a3(r64): [13..14]
 a4(r69): [15..16]
 a5(r62): [19..20]
 a6(r68): [21..22]
 a7(r60): [25..32]
 a8(r61): [27..28]
 a9(r67): [29..30]
 a10(r59): [33..34]
 a11(r66): [35..36]
Compressing live ranges: from 43 to 18 - 41%
Ranges after the compression:
 a0(r70): [0..1]
 a1(r65): [0..1]
 a2(r63): [2..5]
 a3(r64): [2..3]
 a4(r69): [4..5]
 a5(r62): [6..7]
 a6(r68): [8..9]
 a7(r60): [10..13]
 a8(r61): [10..11]
 a9(r67): [12..13]
 a10(r59): [14..15]
 a11(r66): [16..17]
  regions=1, blocks=3, points=18
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
   10:r59  l0     0    7:r60  l0     0    8:r61  l0     1    5:r62  l0     0
    2:r63  l0     1    3:r64  l0     0    1:r65  l0     0   11:r66  l0     0
    9:r67  l0     1    6:r68  l0     0    4:r69  l0     0    0:r70  l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_xfer_error

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d} r18={2d} r19={2d} r20={1d,7u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} 
;;    total ref usage 158{124d,33u,1e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg:DI 5 di [ pTab ])) ./ext/misc/csv.c:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pTab ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])
        (reg:DI 4 si [ pRdr ])) ./ext/misc/csv.c:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pRdr ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 66)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 59 [ sqlite3_api.6 ])
        (mem/f/c:DI (reg/f:DI 66) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 60 [ D.6566 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 59 [ sqlite3_api.6 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.6_1->free+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ sqlite3_api.6 ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 61 [ D.6567 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 67)
                (const_int 16 [0x10])) [0 pTab_3(D)->base.zErrMsg+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.6567 ])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6567 ])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (reg/f:DI 60 [ D.6566 ]) [0 *_2 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:330 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6566 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 68)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 62 [ sqlite3_api.7 ])
        (mem/f/c:DI (reg/f:DI 68) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 63 [ D.6568 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 62 [ sqlite3_api.7 ])
                (const_int 552 [0x228])) [0 sqlite3_api.7_5->mprintf+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ sqlite3_api.7 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 64 [ D.6569 ])
                (plus:DI (reg/f:DI 69)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:331 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 64 [ D.6569 ])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6569 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:331 91 {*movqi_internal}
     (nil))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 63 [ D.6568 ]) [0 *_6 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:331 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6568 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 23 22 24 2 (set (reg/f:DI 65 [ D.6567 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 70)
                (const_int 16 [0x10])) [0 pTab_3(D)->base.zErrMsg+0 S8 A64])
        (reg/f:DI 65 [ D.6567 ])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.6567 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabDisconnect (csvtabDisconnect, funcdef_no=12, decl_uid=5590, cgraph_uid=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r75: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r75,l0) best DIREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r68,l0) best AREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r64,l0) best DIREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r61,l0) best DIREG, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r68,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 38(l0): point = 0
   Insn 35(l0): point = 2
   Insn 31(l0): point = 4
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 25(l0): point = 12
   Insn 24(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 11(l0): point = 40
   Insn 10(l0): point = 42
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 6(l0): point = 50
   Insn 2(l0): point = 52
 a0(r68): [3..4]
 a1(r67): [5..6]
 a2(r66): [9..14]
 a3(r75): [11..12]
 a4(r65): [15..16]
 a5(r74): [17..18]
 a6(r63): [21..28]
 a7(r64): [23..24]
 a8(r73): [25..26]
 a9(r62): [29..30]
 a10(r72): [31..32]
 a11(r60): [35..42]
 a12(r61): [37..38]
 a13(r71): [39..40]
 a14(r59): [43..44]
 a15(r70): [45..46]
 a16(r69): [49..50]
Compressing live ranges: from 55 to 28 - 50%
Ranges after the compression:
 a0(r68): [0..1]
 a1(r67): [2..3]
 a2(r66): [4..5]
 a3(r75): [4..5]
 a4(r65): [6..7]
 a5(r74): [8..9]
 a6(r63): [10..13]
 a7(r64): [10..11]
 a8(r73): [12..13]
 a9(r62): [14..15]
 a10(r72): [16..17]
 a11(r60): [18..21]
 a12(r61): [18..19]
 a13(r71): [20..21]
 a14(r59): [22..23]
 a15(r70): [24..25]
 a16(r69): [26..27]
  regions=1, blocks=3, points=28
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   14:r59  l0     0   11:r60  l0     0   12:r61  l0     1    9:r62  l0     0
    6:r63  l0     0    7:r64  l0     1    4:r65  l0     0    2:r66  l0     0
    1:r67  l0     0    0:r68  l0     0   16:r69  l0     0   15:r70  l0     0
   13:r71  l0     1   10:r72  l0     0    8:r73  l0     1    5:r74  l0     0
    3:r75  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabDisconnect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} 
;;    total ref usage 211{172d,39u,0e} in 27{24 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtab+0 S8 A64])
        (reg:DI 5 di [ pVtab ])) ./ext/misc/csv.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pVtab ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtab+0 S8 A64])) ./ext/misc/csv.c:338 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg/f:DI 69)) ./ext/misc/csv.c:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 70)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 59 [ sqlite3_api.8 ])
        (mem/f/c:DI (reg/f:DI 70) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 60 [ D.6571 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 59 [ sqlite3_api.8 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.8_3->free+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ sqlite3_api.8 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 61 [ D.6572 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 71)
                (const_int 24 [0x18])) [0 p_2->zFilename+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.6572 ])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6572 ])
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (reg/f:DI 60 [ D.6571 ]) [0 *_4 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:339 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6571 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 72)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 62 [ sqlite3_api.9 ])
        (mem/f/c:DI (reg/f:DI 72) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 63 [ D.6571 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 62 [ sqlite3_api.9 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.9_6->free+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ sqlite3_api.9 ])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 64 [ D.6572 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 73)
                (const_int 32 [0x20])) [0 p_2->zData+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 64 [ D.6572 ])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6572 ])
        (nil)))
(call_insn 21 20 22 2 (call (mem:QI (reg/f:DI 63 [ D.6571 ]) [0 *_7 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:340 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6571 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 74)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 65 [ sqlite3_api.10 ])
        (mem/f/c:DI (reg/f:DI 74) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 66 [ D.6571 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 65 [ sqlite3_api.10 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.10_9->free+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ sqlite3_api.10 ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 75)) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (nil)))
(call_insn 27 26 28 2 (call (mem:QI (reg/f:DI 66 [ D.6571 ]) [0 *_10 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:341 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6571 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 28 27 31 2 (set (reg:SI 67 [ D.6573 ])
        (const_int 0 [0])) ./ext/misc/csv.c:342 89 {*movsi_internal}
     (nil))
(insn 31 28 35 2 (set (reg:SI 68 [ <retval> ])
        (reg:SI 67 [ D.6573 ])) ./ext/misc/csv.c:342 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6573 ])
        (nil)))
(insn 35 31 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 68 [ <retval> ])) ./ext/misc/csv.c:343 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 68 [ <retval> ])
        (nil)))
(insn 38 35 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:343 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_skip_whitespace (csv_skip_whitespace, funcdef_no=13, decl_uid=5637, cgraph_uid=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r70,l0) best AREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r70,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 38(l0): point = 0
   Insn 35(l0): point = 2
   Insn 31(l0): point = 4
   Insn 28(l0): point = 6
   Insn 9(l0): point = 9
   Insn 26(l0): point = 12
   Insn 25(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 41(l0): point = 41
   Insn 2(l0): point = 43
 a0(r70): [3..4]
 a1(r69): [5..6]
 a2(r68): [15..16]
 a3(r67): [17..18]
 a4(r66): [19..20]
 a5(r65): [21..22]
 a6(r64): [23..24]
 a7(r60): [23..34]
 a8(r63): [25..26]
 a9(r62): [27..28]
 a10(r61): [29..30]
 a11(r71): [31..32]
 a12(r59): [35..36]
Compressing live ranges: from 46 to 24 - 52%
Ranges after the compression:
 a0(r70): [0..1]
 a1(r69): [2..3]
 a2(r68): [4..5]
 a3(r67): [6..7]
 a4(r66): [8..9]
 a5(r65): [10..11]
 a6(r64): [12..13]
 a7(r60): [12..21]
 a8(r63): [14..15]
 a9(r62): [16..17]
 a10(r61): [18..19]
 a11(r71): [20..21]
 a12(r59): [22..23]
  regions=1, blocks=6, points=24
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   12:r59  l0     0    7:r60  l0     1   10:r61  l0     0    9:r62  l0     0
    8:r63  l0     0    6:r64  l0     0    5:r65  l0     0    4:r66  l0     0
    3:r67  l0     0    2:r68  l0     0    1:r69  l0     0    0:r70  l0     0
   11:r71  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_skip_whitespace

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={2d,1u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={6d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} 
;;    total ref usage 125{82d,43u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 41 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 41 3 42 2 (set (pc)
        (label_ref 10)) ./ext/misc/csv.c:348 650 {jump}
     (nil)
 -> 10)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 24)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 24 42 8 3 58 "" [1 uses])
(note 8 24 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 71
(code_label 10 9 11 4 57 "" [1 uses])
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 12 11 13 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fbdb4772900 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:348 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 13 12 14 4 (set (reg/f:DI 59 [ D.6574 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 4 (set (reg/f:DI 60 [ D.6575 ])
        (mem/f:DI (reg/f:DI 59 [ D.6574 ]) [0 *_3+0 S8 A64])) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6574 ])
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 4 (set (reg:QI 61 [ D.6576 ])
        (mem:QI (reg/f:DI 71) [0 *z_1+0 S1 A8])) ./ext/misc/csv.c:348 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 71)
        (nil)))
(insn 17 16 18 4 (set (reg:QI 62 [ D.6577 ])
        (reg:QI 61 [ D.6576 ])) ./ext/misc/csv.c:348 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 61 [ D.6576 ])
        (nil)))
(insn 18 17 19 4 (set (reg:DI 63 [ D.6578 ])
        (zero_extend:DI (reg:QI 62 [ D.6577 ]))) ./ext/misc/csv.c:348 141 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 62 [ D.6577 ])
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 64 [ D.6578 ])
                (ashift:DI (reg:DI 63 [ D.6578 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.6578 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 65 [ D.6575 ])
                (plus:DI (reg/f:DI 60 [ D.6575 ])
                    (reg:DI 64 [ D.6578 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.6578 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.6575 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 21 20 22 4 (set (reg:HI 66 [ D.6579 ])
        (mem:HI (reg/f:DI 65 [ D.6575 ]) [0 *_9+0 S2 A16])) ./ext/misc/csv.c:348 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6575 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 67 [ D.6580 ])
        (zero_extend:SI (reg:HI 66 [ D.6579 ]))) ./ext/misc/csv.c:348 146 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 66 [ D.6579 ])
        (nil)))
(insn 23 22 25 4 (parallel [
            (set (reg:SI 68 [ D.6580 ])
                (and:SI (reg:SI 67 [ D.6580 ])
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 393 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6580 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 23 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 68 [ D.6580 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:348 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6580 ])
        (nil)))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:348 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 69 70
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 5 (set (reg/f:DI 69 [ D.6581 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:349 87 {*movdi_internal_rex64}
     (nil))
(insn 31 28 35 5 (set (reg:DI 70 [ <retval> ])
        (reg/f:DI 69 [ D.6581 ])) ./ext/misc/csv.c:349 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.6581 ])
        (nil)))
(insn 35 31 38 5 (set (reg/i:DI 0 ax)
        (reg:DI 70 [ <retval> ])) ./ext/misc/csv.c:350 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70 [ <retval> ])
        (nil)))
(insn 38 35 0 5 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:350 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_trim_whitespace (csv_trim_whitespace, funcdef_no=14, decl_uid=5643, cgraph_uid=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r72,l0) best AREG, allocno GENERAL_REGS
    r71: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r71,l0) best DIREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r72,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 42(l0): point = 0
   Insn 41(l0): point = 2
   Insn 40(l0): point = 4
   Insn 39(l0): point = 6
   Insn 14(l0): point = 9
   Insn 36(l0): point = 12
   Insn 35(l0): point = 14
   Insn 33(l0): point = 16
   Insn 32(l0): point = 18
   Insn 31(l0): point = 20
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 28(l0): point = 26
   Insn 27(l0): point = 28
   Insn 26(l0): point = 30
   Insn 25(l0): point = 32
   Insn 24(l0): point = 34
   Insn 23(l0): point = 36
   Insn 22(l0): point = 38
   Insn 21(l0): point = 40
   Insn 20(l0): point = 42
   Insn 18(l0): point = 45
   Insn 17(l0): point = 47
   Insn 45(l0): point = 50
   Insn 10(l0): point = 52
   Insn 9(l0): point = 54
   Insn 8(l0): point = 56
   Insn 7(l0): point = 58
   Insn 6(l0): point = 60
   Insn 2(l0): point = 62
 a0(r70): [1..2]
 a1(r75): [3..6]
 a2(r76): [3..4]
 a3(r69): [15..16]
 a4(r68): [17..18]
 a5(r67): [19..20]
 a6(r66): [21..22]
 a7(r65): [23..24]
 a8(r60): [23..38]
 a9(r64): [25..26]
 a10(r63): [27..28]
 a11(r62): [29..30]
 a12(r61): [31..32]
 a13(r73): [33..36]
 a14(r74): [33..34]
 a15(r59): [39..40]
 a16(r72): [53..54]
 a17(r71): [59..60]
Compressing live ranges: from 65 to 30 - 46%
Ranges after the compression:
 a0(r70): [0..1]
 a1(r75): [2..3]
 a2(r76): [2..3]
 a3(r69): [4..5]
 a4(r68): [6..7]
 a5(r67): [8..9]
 a6(r66): [10..11]
 a7(r65): [12..13]
 a8(r60): [12..23]
 a9(r64): [14..15]
 a10(r63): [16..17]
 a11(r62): [18..19]
 a12(r61): [20..21]
 a13(r73): [22..23]
 a14(r74): [22..23]
 a15(r59): [24..25]
 a16(r72): [26..27]
 a17(r71): [28..29]
  regions=1, blocks=7, points=30
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   15:r59  l0     0    8:r60  l0     0   12:r61  l0     1   11:r62  l0     1
   10:r63  l0     1    9:r64  l0     1    7:r65  l0     1    6:r66  l0     0
    5:r67  l0     0    4:r68  l0     0    3:r69  l0     0    0:r70  l0     0
   17:r71  l0     0   16:r72  l0     0   13:r73  l0     1   14:r74  l0     2
    1:r75  l0     0    2:r76  l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_trim_whitespace

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={3d} r5={4d,2u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={10d,2u} r18={2d} r19={2d} r20={1d,16u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 197{134d,59u,4e} in 30{28 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 71 72
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 71)) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(call_insn/i 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:354 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 72)
        (reg:DI 0 ax)) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 72)) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(jump_insn 45 10 46 2 (set (pc)
        (label_ref 15)) ./ext/misc/csv.c:355 650 {jump}
     (nil)
 -> 15)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 34 46 13 3 63 "" [1 uses])
(note 13 34 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 15 14 16 4 61 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ./ext/misc/csv.c:355 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 73 74
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 20 19 21 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fbdb4772900 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 21 20 22 5 (set (reg/f:DI 59 [ D.6582 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 21 23 5 (set (reg/f:DI 60 [ D.6583 ])
        (mem/f:DI (reg/f:DI 59 [ D.6582 ]) [0 *_4+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6582 ])
        (nil)))
(insn 23 22 24 5 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg/f:DI 61 [ D.6584 ])
                (plus:DI (reg/f:DI 74)
                    (reg:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_DEAD (reg:DI 73)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64]))
                    (nil))))))
(insn 26 25 27 5 (set (reg:QI 62 [ D.6585 ])
        (mem:QI (reg/f:DI 61 [ D.6584 ]) [0 *_6+0 S1 A8])) ./ext/misc/csv.c:355 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6584 ])
        (nil)))
(insn 27 26 28 5 (set (reg:QI 63 [ D.6586 ])
        (reg:QI 62 [ D.6585 ])) ./ext/misc/csv.c:355 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 62 [ D.6585 ])
        (nil)))
(insn 28 27 29 5 (set (reg:DI 64 [ D.6587 ])
        (zero_extend:DI (reg:QI 63 [ D.6586 ]))) ./ext/misc/csv.c:355 141 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 63 [ D.6586 ])
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 65 [ D.6587 ])
                (ashift:DI (reg:DI 64 [ D.6587 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.6587 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 66 [ D.6583 ])
                (plus:DI (reg/f:DI 60 [ D.6583 ])
                    (reg:DI 65 [ D.6587 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.6587 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.6583 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 5 (set (reg:HI 67 [ D.6588 ])
        (mem:HI (reg/f:DI 66 [ D.6583 ]) [0 *_11+0 S2 A16])) ./ext/misc/csv.c:355 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6583 ])
        (nil)))
(insn 32 31 33 5 (set (reg:SI 68 [ D.6589 ])
        (zero_extend:SI (reg:HI 67 [ D.6588 ]))) ./ext/misc/csv.c:355 146 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 67 [ D.6588 ])
        (nil)))
(insn 33 32 35 5 (parallel [
            (set (reg:SI 69 [ D.6589 ])
                (and:SI (reg:SI 68 [ D.6589 ])
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 393 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6589 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 33 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ D.6589 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 69 [ D.6589 ])
        (nil)))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ./ext/misc/csv.c:355 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 75 76
(code_label 37 36 38 6 62 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg:DI 75)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:356 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:356 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg/f:DI 70 [ D.6584 ])
                (plus:DI (reg/f:DI 76)
                    (reg:DI 75)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:356 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_DEAD (reg:DI 75)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64]))
                    (nil))))))
(insn 42 41 0 6 (set (mem:QI (reg/f:DI 70 [ D.6584 ]) [0 *_16+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:356 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6584 ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_dequote (csv_dequote, funcdef_no=15, decl_uid=5650, cgraph_uid=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 16 (    1)
Building IRA IR
verify found no changes in insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r79,l0) best AREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a19(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a30(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a31(r79,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a34(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 89(l0): point = 1
   Insn 88(l0): point = 3
   Insn 87(l0): point = 5
   Insn 86(l0): point = 7
   Insn 85(l0): point = 9
   Insn 52(l0): point = 12
   Insn 51(l0): point = 14
   Insn 50(l0): point = 16
   Insn 49(l0): point = 18
   Insn 48(l0): point = 20
   Insn 47(l0): point = 22
   Insn 83(l0): point = 25
   Insn 82(l0): point = 27
   Insn 80(l0): point = 29
   Insn 79(l0): point = 31
   Insn 76(l0): point = 34
   Insn 75(l0): point = 36
   Insn 74(l0): point = 38
   Insn 73(l0): point = 40
   Insn 72(l0): point = 42
   Insn 71(l0): point = 44
   Insn 70(l0): point = 46
   Insn 69(l0): point = 48
   Insn 68(l0): point = 50
   Insn 67(l0): point = 52
   Insn 66(l0): point = 54
   Insn 65(l0): point = 56
   Insn 60(l0): point = 59
   Insn 59(l0): point = 61
   Insn 58(l0): point = 63
   Insn 57(l0): point = 65
   Insn 56(l0): point = 67
   Insn 55(l0): point = 69
   Insn 54(l0): point = 71
   Insn 62(l0): point = 74
   Insn 98(l0): point = 77
   Insn 43(l0): point = 79
   Insn 42(l0): point = 81
   Insn 96(l0): point = 84
   Insn 35(l0): point = 87
   Insn 34(l0): point = 89
   Insn 33(l0): point = 91
   Insn 32(l0): point = 93
   Insn 31(l0): point = 95
   Insn 30(l0): point = 97
   Insn 29(l0): point = 99
   Insn 28(l0): point = 101
   Insn 27(l0): point = 103
   Insn 25(l0): point = 106
   Insn 24(l0): point = 108
   Insn 23(l0): point = 110
   Insn 22(l0): point = 112
   Insn 21(l0): point = 114
   Insn 20(l0): point = 116
   Insn 19(l0): point = 118
   Insn 94(l0): point = 121
   Insn 13(l0): point = 124
   Insn 12(l0): point = 126
   Insn 10(l0): point = 129
   Insn 9(l0): point = 131
   Insn 8(l0): point = 133
   Insn 7(l0): point = 135
   Insn 6(l0): point = 137
   Insn 2(l0): point = 139
 a0(r75): [2..3]
 a1(r93): [4..5]
 a2(r74): [4..7]
 a3(r92): [8..9]
 a4(r63): [28..29]
 a5(r91): [30..31]
 a6(r71): [37..46]
 a7(r73): [37..38]
 a8(r72): [39..40]
 a9(r89): [41..44]
 a10(r90): [41..42]
 a11(r88): [47..48]
 a12(r70): [47..50]
 a13(r69): [51..56]
 a14(r87): [53..54]
 a15(r68): [62..63]
 a16(r67): [64..65]
 a17(r86): [66..67]
 a18(r66): [66..69]
 a19(r85): [70..71]
 a20(r65): [15..16]
 a21(r64): [17..18]
 a22(r83): [19..22]
 a23(r84): [19..20]
 a24(r62): [90..91]
 a25(r61): [90..95]
 a26(r82): [92..93]
 a27(r60): [96..97]
 a28(r81): [98..99]
 a29(r59): [98..101]
 a30(r80): [102..103]
 a31(r79): [111..112]
 a32(r78): [117..118]
 a33(r77): [134..135]
 a34(r76): [136..137]
Compressing live ranges: from 142 to 52 - 36%
Ranges after the compression:
 a0(r75): [0..1]
 a1(r93): [2..3]
 a2(r74): [2..3]
 a3(r92): [4..5]
 a4(r63): [12..13]
 a5(r91): [14..15]
 a6(r71): [16..21]
 a7(r73): [16..17]
 a8(r72): [18..19]
 a9(r89): [20..21]
 a10(r90): [20..21]
 a11(r88): [22..23]
 a12(r70): [22..23]
 a13(r69): [24..25]
 a14(r87): [24..25]
 a15(r68): [26..27]
 a16(r67): [28..29]
 a17(r86): [30..31]
 a18(r66): [30..31]
 a19(r85): [32..33]
 a20(r65): [6..7]
 a21(r64): [8..9]
 a22(r83): [10..11]
 a23(r84): [10..11]
 a24(r62): [34..35]
 a25(r61): [34..37]
 a26(r82): [36..37]
 a27(r60): [38..39]
 a28(r81): [40..41]
 a29(r59): [40..41]
 a30(r80): [42..43]
 a31(r79): [44..45]
 a32(r78): [46..47]
 a33(r77): [48..49]
 a34(r76): [50..51]
  regions=1, blocks=16, points=52
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=35
Disposition:
   29:r59  l0     1   27:r60  l0     0   25:r61  l0     1   24:r62  l0     0
    4:r63  l0     0   21:r64  l0     0   20:r65  l0     0   18:r66  l0     1
   16:r67  l0     0   15:r68  l0     0   13:r69  l0     0   12:r70  l0     1
    6:r71  l0     1    8:r72  l0     0    7:r73  l0     0    2:r74  l0     1
    0:r75  l0     0   34:r76  l0     0   33:r77  l0     0   32:r78  l0     0
   31:r79  l0     0   30:r80  l0     0   28:r81  l0     0   26:r82  l0     0
   22:r83  l0     0   23:r84  l0     1   19:r85  l0     0   17:r86  l0     0
   14:r87  l0     1   11:r88  l0     0    9:r89  l0     0   10:r90  l0     2
    5:r91  l0     0    3:r92  l0     0    1:r93  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_dequote

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,15u} r7={1d,16u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={20d,7u} r18={1d} r19={1d} r20={1d,47u,11e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u,1e} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u,1e} r67={1d,1u} r68={1d,1u} r69={1d,2u,1e} r70={1d,1u,1e} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u,1e} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 272{118d,138u,16e} in 64{63 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 76 77
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:362 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:QI 77)
        (mem:QI (reg/f:DI 76) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:362 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 8 7 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
        (reg:QI 77)) ./ext/misc/csv.c:362 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 77)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
            (const_int 39 [0x27]))) ./ext/misc/csv.c:365 5 {*cmpqi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:365 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:365 5 {*cmpqi_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:365 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 14 13 94 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 94 14 95 4 (set (pc)
        (label_ref 92)) ./ext/misc/csv.c:365 650 {jump}
     (nil)
 -> 92)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 95 94 17)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79
(code_label 17 95 18 5 65 "" [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg:DI 78)) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(call_insn/i 21 20 22 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:366 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 79)
        (reg:DI 0 ax)) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 24 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 79)) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 79)
        (nil)))
(insn 24 23 25 5 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:367 8 {*cmpdi_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) ./ext/misc/csv.c:367 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 36)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 80 81 82
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 80)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 59 [ D.6590 ])
                (plus:DI (reg:DI 80)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:367 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 80)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 29 28 30 6 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 60 [ D.6591 ])
                (plus:DI (reg:DI 59 [ D.6590 ])
                    (reg/f:DI 81)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:367 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_DEAD (reg:DI 59 [ D.6590 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (reg:DI 59 [ D.6590 ]))
                    (nil))))))
(insn 31 30 32 6 (set (reg:QI 61 [ D.6592 ])
        (mem:QI (reg/f:DI 60 [ D.6591 ]) [0 *_8+0 S1 A8])) ./ext/misc/csv.c:367 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6591 ])
        (nil)))
(insn 32 31 33 6 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 6 (set (reg:QI 62 [ D.6592 ])
        (mem:QI (reg/f:DI 82) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:367 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (nil)))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.6592 ])
            (reg:QI 62 [ D.6592 ]))) ./ext/misc/csv.c:367 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 62 [ D.6592 ])
        (expr_list:REG_DEAD (reg:QI 61 [ D.6592 ])
            (nil))))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ./ext/misc/csv.c:367 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 35 37 7 67 "" [1 uses])
(note 37 36 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 37 97 7 (set (pc)
        (label_ref 92)) ./ext/misc/csv.c:367 650 {jump}
     (nil)
 -> 92)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 97 96 40)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 40 97 41 8 68 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
        (const_int 1 [0x1])) ./ext/misc/csv.c:368 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 98 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:368 89 {*movsi_internal}
     (nil))
(jump_insn 98 43 99 8 (set (pc)
        (label_ref 77)) ./ext/misc/csv.c:368 650 {jump}
     (nil)
 -> 77)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 81)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 83 84
(code_label 81 99 46 9 71 "" [1 uses])
(note 46 81 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:DI 83)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 9 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg/f:DI 64 [ D.6591 ])
                (plus:DI (reg/f:DI 84)
                    (reg:DI 83)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (expr_list:REG_DEAD (reg:DI 83)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))
                    (nil))))))
(insn 50 49 51 9 (set (reg:QI 65 [ D.6592 ])
        (mem:QI (reg/f:DI 64 [ D.6591 ]) [0 *_14+0 S1 A8])) ./ext/misc/csv.c:369 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6591 ])
        (nil)))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.6592 ])
            (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8]))) ./ext/misc/csv.c:369 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 65 [ D.6592 ])
        (nil)))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ./ext/misc/csv.c:369 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
;;  succ:       10 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68 85 86
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 10 (parallel [
            (set (reg:DI 66 [ D.6590 ])
                (plus:DI (reg:DI 85)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 56 55 57 10 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg/f:DI 67 [ D.6591 ])
                (plus:DI (reg:DI 66 [ D.6590 ])
                    (reg/f:DI 86)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_DEAD (reg:DI 66 [ D.6590 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (reg:DI 66 [ D.6590 ]))
                    (nil))))))
(insn 58 57 59 10 (set (reg:QI 68 [ D.6592 ])
        (mem:QI (reg/f:DI 67 [ D.6591 ]) [0 *_17+0 S1 A8])) ./ext/misc/csv.c:369 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.6591 ])
        (nil)))
(insn 59 58 60 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.6592 ])
            (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8]))) ./ext/misc/csv.c:369 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 68 [ D.6592 ])
        (nil)))
(jump_insn 60 59 61 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ./ext/misc/csv.c:369 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71 72 73 87 88 89 90
(code_label 63 62 64 12 70 "" [2 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:SI 69 [ j.11 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) ./ext/misc/csv.c:370 89 {*movsi_internal}
     (nil))
(insn 66 65 67 12 (parallel [
            (set (reg:SI 87)
                (plus:SI (reg:SI 69 [ j.11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (reg:SI 87)) ./ext/misc/csv.c:370 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 69 [ j.11 ])
                (const_int 1 [0x1]))
            (nil))))
(insn 68 67 69 12 (set (reg:DI 70 [ D.6590 ])
        (sign_extend:DI (reg:SI 69 [ j.11 ]))) ./ext/misc/csv.c:370 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 69 [ j.11 ])
        (nil)))
(insn 69 68 70 12 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:DI 71 [ D.6591 ])
                (plus:DI (reg:DI 70 [ D.6590 ])
                    (reg/f:DI 88)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg:DI 70 [ D.6590 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (reg:DI 70 [ D.6590 ]))
                    (nil))))))
(insn 71 70 72 12 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (reg/f:DI 72 [ D.6591 ])
                (plus:DI (reg/f:DI 90)
                    (reg:DI 89)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg:DI 89)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))
                    (nil))))))
(insn 74 73 75 12 (set (reg:QI 73 [ D.6592 ])
        (mem:QI (reg/f:DI 72 [ D.6591 ]) [0 *_24+0 S1 A8])) ./ext/misc/csv.c:370 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.6591 ])
        (nil)))
(insn 75 74 76 12 (set (mem:QI (reg/f:DI 71 [ D.6591 ]) [0 *_23+0 S1 A8])
        (reg:QI 73 [ D.6592 ])) ./ext/misc/csv.c:370 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 73 [ D.6592 ])
        (expr_list:REG_DEAD (reg/f:DI 71 [ D.6591 ])
            (nil))))
(insn 76 75 77 12 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:368 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 91
(code_label 77 76 78 13 69 "" [1 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:368 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 82 13 (parallel [
            (set (reg:DI 63 [ D.6593 ])
                (plus:DI (reg:DI 91)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:368 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 82 80 83 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 63 [ D.6593 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))) ./ext/misc/csv.c:368 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.6593 ])
        (nil)))
(jump_insn 83 82 84 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:368 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 81)
;;  succ:       9
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 75 92 93
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 14 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) ./ext/misc/csv.c:372 89 {*movsi_internal}
     (nil))
(insn 86 85 87 14 (set (reg:DI 74 [ D.6590 ])
        (sign_extend:DI (reg:SI 92))) ./ext/misc/csv.c:372 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 87 86 88 14 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:372 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg/f:DI 75 [ D.6591 ])
                (plus:DI (reg:DI 74 [ D.6590 ])
                    (reg/f:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:372 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_DEAD (reg:DI 74 [ D.6590 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (reg:DI 74 [ D.6590 ]))
                    (nil))))))
(insn 89 88 92 14 (set (mem:QI (reg/f:DI 75 [ D.6591 ]) [0 *_28+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:372 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 75 [ D.6591 ])
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              4 [100.0%] 
;;              7 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 92 89 93 15 64 "" [2 uses])
(note 93 92 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_parameter (csv_parameter, funcdef_no=16, decl_uid=5662, cgraph_uid=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r71,l0) best DIREG, allocno GENERAL_REGS
    r70: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r70,l0) best SIREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r68,l0) best AREG, allocno GENERAL_REGS
    r67: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r67,l0) best DIREG, allocno GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r66,l0) best AREG, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r63,l0) best DIREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r61,l0) best AREG, allocno GENERAL_REGS
    r60: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r60,l0) best DREG, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r66,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:15
  a2(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a3(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r61,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r60,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r68,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 62(l0): point = 0
   Insn 59(l0): point = 2
   Insn 55(l0): point = 4
   Insn 52(l0): point = 7
   Insn 51(l0): point = 9
   Insn 50(l0): point = 11
   Insn 49(l0): point = 13
   Insn 48(l0): point = 15
   Insn 67(l0): point = 18
   Insn 43(l0): point = 20
   Insn 41(l0): point = 23
   Insn 40(l0): point = 25
   Insn 39(l0): point = 27
   Insn 38(l0): point = 29
   Insn 37(l0): point = 31
   Insn 36(l0): point = 33
   Insn 35(l0): point = 35
   Insn 34(l0): point = 37
   Insn 33(l0): point = 39
   Insn 32(l0): point = 41
   Insn 31(l0): point = 43
   Insn 30(l0): point = 45
   Insn 65(l0): point = 48
   Insn 25(l0): point = 50
   Insn 23(l0): point = 53
   Insn 22(l0): point = 55
   Insn 21(l0): point = 57
   Insn 20(l0): point = 59
   Insn 19(l0): point = 61
   Insn 18(l0): point = 63
   Insn 17(l0): point = 65
   Insn 16(l0): point = 67
   Insn 15(l0): point = 69
   Insn 14(l0): point = 71
   Insn 13(l0): point = 73
   Insn 12(l0): point = 75
   Insn 11(l0): point = 77
   Insn 10(l0): point = 79
   Insn 9(l0): point = 81
   Insn 8(l0): point = 83
   Insn 4(l0): point = 85
   Insn 3(l0): point = 87
   Insn 2(l0): point = 89
 a0(r66): [3..4]
 a1(r59): [48..50] [18..20] [5..7]
 a2(r65): [12..13]
 a3(r76): [14..15]
 a4(r64): [26..27]
 a5(r75): [28..29]
 a6(r74): [32..33]
 a7(r63): [38..39]
 a8(r73): [40..41]
 a9(r62): [40..43]
 a10(r72): [44..45]
 a11(r61): [56..57]
 a12(r71): [62..67]
 a13(r70): [64..69]
 a14(r60): [66..71]
 a15(r69): [72..73]
 a16(r68): [76..77]
 a17(r67): [82..83]
Compressing live ranges: from 92 to 34 - 36%
Ranges after the compression:
 a0(r66): [0..1]
 a1(r59): [22..23] [8..9] [2..3]
 a2(r65): [4..5]
 a3(r76): [6..7]
 a4(r64): [10..11]
 a5(r75): [12..13]
 a6(r74): [14..15]
 a7(r63): [16..17]
 a8(r73): [18..19]
 a9(r62): [18..19]
 a10(r72): [20..21]
 a11(r61): [24..25]
 a12(r71): [26..27]
 a13(r70): [26..27]
 a14(r60): [26..27]
 a15(r69): [28..29]
 a16(r68): [30..31]
 a17(r67): [32..33]
  regions=1, blocks=8, points=34
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
    1:r59  l0     0   14:r60  l0     1   11:r61  l0     0    9:r62  l0     1
    7:r63  l0     0    4:r64  l0     0    2:r65  l0     0    0:r66  l0     0
   17:r67  l0     0   16:r68  l0     0   15:r69  l0     0   13:r70  l0     2
   12:r71  l0     0   10:r72  l0     0    8:r73  l0     0    6:r74  l0     0
    5:r75  l0     0    3:r76  l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,6u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={8d,2u} r18={4d} r19={4d} r20={1d,20u,2e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} 
;;    total ref usage 308{226d,79u,3e} in 43{39 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 67 68 69 70 71
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zTag+0 S8 A64])
        (reg:DI 5 di [ zTag ])) ./ext/misc/csv.c:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ zTag ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])
        (reg:SI 4 si [ nTag ])) ./ext/misc/csv.c:379 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nTag ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 1 dx [ z ])) ./ext/misc/csv.c:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ z ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 67)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 67)) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:380 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 68)
        (reg:DI 0 ax)) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 68)) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:381 89 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 60 [ D.6595 ])
        (sign_extend:DI (reg:SI 69))) ./ext/misc/csv.c:381 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 69)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zTag+0 S8 A64])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 60 [ D.6595 ])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.6595 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 70)) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 71)) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(call_insn/i 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fbdb4907e00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:381 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 22 2 (set (reg:SI 61 [ D.6596 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:381 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.6596 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:381 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6596 ])
        (nil)))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) ./ext/misc/csv.c:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 65 3 (set (reg/f:DI 59 [ D.6594 ])
        (const_int 0 [0])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 65 25 66 3 (set (pc)
        (label_ref 53)) ./ext/misc/csv.c:381 650 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 66 65 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 72 73 74 75
(code_label 28 66 29 4 73 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 72)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:382 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 62 [ D.6597 ])
        (sign_extend:DI (reg:SI 72))) ./ext/misc/csv.c:382 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 72)
        (nil)))
(insn 32 31 33 4 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 63 [ D.6594 ])
                (plus:DI (reg:DI 62 [ D.6597 ])
                    (reg/f:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:382 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (expr_list:REG_DEAD (reg:DI 62 [ D.6597 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                        (reg:DI 62 [ D.6597 ]))
                    (nil))))))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.6594 ])) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6594 ])
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:382 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 4 (set (reg:DI 74)
        (reg:DI 0 ax)) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 74)) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 74)
        (nil)))
(insn 38 37 39 4 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:383 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 4 (set (reg:QI 64 [ D.6598 ])
        (mem:QI (reg/f:DI 75) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:383 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.6598 ])
            (const_int 61 [0x3d]))) ./ext/misc/csv.c:383 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 64 [ D.6598 ])
        (nil)))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ./ext/misc/csv.c:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 46)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 67 5 (set (reg/f:DI 59 [ D.6594 ])
        (const_int 0 [0])) ./ext/misc/csv.c:383 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 67 43 68 5 (set (pc)
        (label_ref 53)) ./ext/misc/csv.c:383 650 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 68 67 46)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 65 76
(code_label 46 68 47 6 75 "" [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg/f:DI 65 [ D.6594 ])
                (plus:DI (reg/f:DI 76)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:384 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.6594 ])) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6594 ])
        (nil)))
(call_insn 51 50 52 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:384 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 6 (set (reg/f:DI 59 [ D.6594 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 66
(code_label 53 52 54 7 74 "" [2 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 7 (set (reg:DI 66 [ <retval> ])
        (reg/f:DI 59 [ D.6594 ])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6594 ])
        (nil)))
(insn 59 55 62 7 (set (reg/i:DI 0 ax)
        (reg:DI 66 [ <retval> ])) ./ext/misc/csv.c:385 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66 [ <retval> ])
        (nil)))
(insn 62 59 0 7 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:385 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_string_parameter (csv_string_parameter, funcdef_no=17, decl_uid=5668, cgraph_uid=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 82.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best DIREG, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r79,l0) best SIREG, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r76,l0) best DREG, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r72,l0) best DIREG, allocno GENERAL_REGS
    r71: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r71,l0) best DREG, allocno GENERAL_REGS
    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r69,l0) best AREG, allocno GENERAL_REGS
    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r68,l0) best DIREG, allocno GENERAL_REGS
    r67: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r67,l0) best DIREG, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r65,l0) best AREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r61,l0) best SIREG, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r69,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:65 SSE_REGS:65 MMX_REGS:65 FP_TOP_SSE_REGS:327675 FP_SECOND_SSE_REGS:327675 FLOAT_SSE_REGS:327675 FLOAT_INT_REGS:327675 INT_SSE_REGS:65 FLOAT_INT_SSE_REGS:327675 ALL_REGS:327675 MEM:19
  a2(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r65,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r76,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a19(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r71,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a25(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 93(l0): point = 0
   Insn 90(l0): point = 2
   Insn 86(l0): point = 4
   Insn 83(l0): point = 7
   Insn 82(l0): point = 9
   Insn 81(l0): point = 11
   Insn 80(l0): point = 13
   Insn 79(l0): point = 15
   Insn 78(l0): point = 17
   Insn 77(l0): point = 19
   Insn 76(l0): point = 21
   Insn 75(l0): point = 23
   Insn 100(l0): point = 26
   Insn 70(l0): point = 28
   Insn 69(l0): point = 30
   Insn 68(l0): point = 32
   Insn 67(l0): point = 34
   Insn 66(l0): point = 36
   Insn 65(l0): point = 38
   Insn 63(l0): point = 41
   Insn 62(l0): point = 43
   Insn 61(l0): point = 45
   Insn 60(l0): point = 47
   Insn 59(l0): point = 49
   Insn 58(l0): point = 51
   Insn 57(l0): point = 53
   Insn 56(l0): point = 55
   Insn 55(l0): point = 57
   Insn 54(l0): point = 59
   Insn 53(l0): point = 61
   Insn 52(l0): point = 63
   Insn 51(l0): point = 65
   Insn 50(l0): point = 67
   Insn 49(l0): point = 69
   Insn 98(l0): point = 72
   Insn 44(l0): point = 74
   Insn 43(l0): point = 76
   Insn 42(l0): point = 78
   Insn 41(l0): point = 80
   Insn 40(l0): point = 82
   Insn 39(l0): point = 84
   Insn 38(l0): point = 86
   Insn 37(l0): point = 88
   Insn 35(l0): point = 91
   Insn 34(l0): point = 93
   Insn 33(l0): point = 95
   Insn 32(l0): point = 97
   Insn 31(l0): point = 99
   Insn 30(l0): point = 101
   Insn 96(l0): point = 104
   Insn 25(l0): point = 106
   Insn 23(l0): point = 109
   Insn 22(l0): point = 111
   Insn 21(l0): point = 113
   Insn 20(l0): point = 115
   Insn 19(l0): point = 117
   Insn 18(l0): point = 119
   Insn 17(l0): point = 121
   Insn 16(l0): point = 123
   Insn 15(l0): point = 125
   Insn 14(l0): point = 127
   Insn 13(l0): point = 129
   Insn 12(l0): point = 131
   Insn 11(l0): point = 133
   Insn 10(l0): point = 135
   Insn 9(l0): point = 137
   Insn 5(l0): point = 139
   Insn 4(l0): point = 141
   Insn 3(l0): point = 143
   Insn 2(l0): point = 145
 a0(r69): [3..4]
 a1(r59): [104..106] [72..74] [26..28] [5..7]
 a2(r68): [12..13]
 a3(r84): [14..15]
 a4(r67): [20..21]
 a5(r83): [22..23]
 a6(r82): [35..38]
 a7(r66): [44..45]
 a8(r81): [46..47]
 a9(r80): [50..51]
 a10(r65): [50..53]
 a11(r64): [56..65]
 a12(r79): [62..63]
 a13(r63): [66..67]
 a14(r78): [68..69]
 a15(r77): [81..86]
 a16(r76): [85..88]
 a17(r62): [94..95]
 a18(r75): [96..97]
 a19(r74): [100..101]
 a20(r73): [114..115]
 a21(r72): [120..125]
 a22(r61): [122..129]
 a23(r71): [124..127]
 a24(r60): [130..131]
 a25(r70): [136..137]
Compressing live ranges: from 148 to 48 - 32%
Ranges after the compression:
 a0(r69): [0..1]
 a1(r59): [38..39] [28..29] [12..13] [2..3]
 a2(r68): [4..5]
 a3(r84): [6..7]
 a4(r67): [8..9]
 a5(r83): [10..11]
 a6(r82): [14..15]
 a7(r66): [16..17]
 a8(r81): [18..19]
 a9(r80): [20..21]
 a10(r65): [20..21]
 a11(r64): [22..23]
 a12(r79): [22..23]
 a13(r63): [24..25]
 a14(r78): [26..27]
 a15(r77): [30..31]
 a16(r76): [30..31]
 a17(r62): [32..33]
 a18(r75): [34..35]
 a19(r74): [36..37]
 a20(r73): [40..41]
 a21(r72): [42..43]
 a22(r61): [42..43]
 a23(r71): [42..43]
 a24(r60): [44..45]
 a25(r70): [46..47]
  regions=1, blocks=10, points=48
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=29
Disposition:
    1:r59  l0     0   24:r60  l0     0   22:r61  l0     2   17:r62  l0     0
   13:r63  l0     0   11:r64  l0     1   10:r65  l0     0    7:r66  l0     0
    4:r67  l0     0    2:r68  l0     0    0:r69  l0     0   25:r70  l0     0
   23:r71  l0     1   21:r72  l0     0   20:r73  l0     0   19:r74  l0     0
   18:r75  l0     0   16:r76  l0     1   15:r77  l0     0   14:r78  l0     0
   12:r79  l0     0    9:r80  l0     1    8:r81  l0     0    6:r82  l0     0
    5:r83  l0     0    3:r84  l0     0
+++Costs: overall -14, reg -14, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_string_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,8u} r1={10d,3u} r2={8d,1u} r4={12d,5u} r5={15d,8u} r6={1d,9u} r7={1d,16u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,8u} r17={10d,3u} r18={7d} r19={7d} r20={1d,28u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r59={4d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 491{376d,115u,0e} in 70{63 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 70 71 72 73
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])
        (reg:DI 4 si [ zParam ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zParam ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 zArg+0 S8 A64])
        (reg:DI 1 dx [ zArg ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ zArg ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])
        (reg:DI 2 cx [ pzVal ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ pzVal ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 70)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(call_insn/i 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:400 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 60 [ D.6600 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 61 [ D.6599 ])
        (subreg:SI (reg:DI 60 [ D.6600 ]) 0)) ./ext/misc/csv.c:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 60 [ D.6600 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 zArg+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 71)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (reg:SI 61 [ D.6599 ])) ./ext/misc/csv.c:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6599 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 72)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_parameter") [flags 0x3]  <function_decl 0x7fbdb43ec800 csv_parameter>) [0 csv_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:400 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 2 (set (reg:DI 73)
        (reg:DI 0 ax)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])
        (reg:DI 73)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 73)
        (nil)))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:401 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) ./ext/misc/csv.c:401 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 96 3 (set (reg:SI 59 [ D.6599 ])
        (const_int 0 [0])) ./ext/misc/csv.c:401 89 {*movsi_internal}
     (nil))
(jump_insn 96 25 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:401 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 74 75
(code_label 28 97 29 4 77 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:402 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 4 (set (mem/j:QI (plus:DI (reg/f:DI 74)
                (const_int 64 [0x40])) [0 p_8(D)->zErr+0 S1 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:402 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 32 31 33 4 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:403 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 62 [ D.6601 ])
        (mem/f:DI (reg/f:DI 75) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:403 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 34 33 35 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.6601 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:403 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.6601 ])
        (nil)))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:403 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 76 77
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 5 (set (reg:DI 1 dx)
        (reg:DI 76)) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 76)
        (nil)))
(insn 40 39 41 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fbdb4516980 *.LC10>)) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (set (reg:DI 5 di)
        (reg:DI 77)) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 77)
        (nil)))
(insn 42 41 43 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:404 91 {*movqi_internal}
     (nil))
(call_insn 43 42 44 5 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:404 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 44 43 98 5 (set (reg:SI 59 [ D.6599 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:405 89 {*movsi_internal}
     (nil))
(jump_insn 98 44 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:405 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 47)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 66 78 79 80 81
(code_label 47 99 48 6 79 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 78)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 63 [ sqlite3_api.12 ])
        (mem/f/c:DI (reg/f:DI 78) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 51 50 52 6 (set (reg/f:DI 64 [ D.6602 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ sqlite3_api.12 ])
                (const_int 552 [0x228])) [0 sqlite3_api.12_12->mprintf+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ sqlite3_api.12 ])
        (nil)))
(insn 52 51 53 6 (set (reg:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 6 (set (reg:DI 4 si)
        (reg:DI 79)) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 79)
        (nil)))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:407 91 {*movqi_internal}
     (nil))
(call_insn 56 55 57 6 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 64 [ D.6602 ]) [0 *_13 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:407 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6602 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 57 56 58 6 (set (reg/f:DI 65 [ D.6601 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 57 59 6 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 6 (set (mem/f:DI (reg/f:DI 80) [0 *pzVal_9(D)+0 S8 A64])
        (reg/f:DI 65 [ D.6601 ])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.6601 ])
            (nil))))
(insn 60 59 61 6 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:408 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 6 (set (reg/f:DI 66 [ D.6601 ])
        (mem/f:DI (reg/f:DI 81) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:408 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (nil)))
(insn 62 61 63 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 66 [ D.6601 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:408 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6601 ])
        (nil)))
(jump_insn 63 62 64 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ./ext/misc/csv.c:408 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 82
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 82)) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 68 67 69 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:409 91 {*movqi_internal}
     (nil))
(call_insn 69 68 70 7 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:409 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 70 69 100 7 (set (reg:SI 59 [ D.6599 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:410 89 {*movsi_internal}
     (nil))
(jump_insn 100 70 101 7 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:410 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 101 100 73)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68 83 84
(code_label 73 101 74 8 80 "" [1 uses])
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (set (reg/f:DI 67 [ D.6601 ])
        (mem/f:DI (reg/f:DI 83) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (nil)))
(insn 77 76 78 8 (set (reg:DI 5 di)
        (reg/f:DI 67 [ D.6601 ])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.6601 ])
        (nil)))
(call_insn 78 77 79 8 (call (mem:QI (symbol_ref:DI ("csv_trim_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec400 csv_trim_whitespace>) [0 csv_trim_whitespace S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:412 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 8 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 8 (set (reg/f:DI 68 [ D.6601 ])
        (mem/f:DI (reg/f:DI 84) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 81 80 82 8 (set (reg:DI 5 di)
        (reg/f:DI 68 [ D.6601 ])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ D.6601 ])
        (nil)))
(call_insn 82 81 83 8 (call (mem:QI (symbol_ref:DI ("csv_dequote") [flags 0x3]  <function_decl 0x7fbdb43ec600 csv_dequote>) [0 csv_dequote S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:413 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 8 (set (reg:SI 59 [ D.6599 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:414 89 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 69
(code_label 84 83 85 9 78 "" [3 uses])
(note 85 84 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 9 (set (reg:SI 69 [ <retval> ])
        (reg:SI 59 [ D.6599 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6599 ])
        (nil)))
(insn 90 86 93 9 (set (reg/i:SI 0 ax)
        (reg:SI 69 [ <retval> ])) ./ext/misc/csv.c:415 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 69 [ <retval> ])
        (nil)))
(insn 93 90 0 9 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:415 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_boolean (csv_boolean, funcdef_no=18, decl_uid=5672, cgraph_uid=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 25 count 16 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 84.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r80,l0) best AREG, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r77,l0) best AREG, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r68,l0) best AREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r65,l0) best AREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:15
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r80,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r77,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a19(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r68,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r65,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a33(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a34(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a35(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a36(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a38(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a39(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a41(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 116(l0): point = 0
   Insn 113(l0): point = 2
   Insn 109(l0): point = 4
   Insn 106(l0): point = 7
   Insn 121(l0): point = 10
   Insn 101(l0): point = 12
   Insn 98(l0): point = 15
   Insn 97(l0): point = 17
   Insn 96(l0): point = 19
   Insn 95(l0): point = 21
   Insn 94(l0): point = 23
   Insn 92(l0): point = 26
   Insn 91(l0): point = 28
   Insn 90(l0): point = 30
   Insn 89(l0): point = 32
   Insn 87(l0): point = 35
   Insn 86(l0): point = 37
   Insn 85(l0): point = 39
   Insn 84(l0): point = 41
   Insn 83(l0): point = 43
   Insn 82(l0): point = 45
   Insn 81(l0): point = 47
   Insn 80(l0): point = 49
   Insn 79(l0): point = 51
   Insn 78(l0): point = 53
   Insn 76(l0): point = 56
   Insn 75(l0): point = 58
   Insn 74(l0): point = 60
   Insn 73(l0): point = 62
   Insn 72(l0): point = 64
   Insn 71(l0): point = 66
   Insn 70(l0): point = 68
   Insn 69(l0): point = 70
   Insn 68(l0): point = 72
   Insn 67(l0): point = 74
   Insn 65(l0): point = 77
   Insn 64(l0): point = 79
   Insn 63(l0): point = 81
   Insn 62(l0): point = 83
   Insn 61(l0): point = 85
   Insn 60(l0): point = 87
   Insn 59(l0): point = 89
   Insn 58(l0): point = 91
   Insn 57(l0): point = 93
   Insn 56(l0): point = 95
   Insn 119(l0): point = 98
   Insn 51(l0): point = 100
   Insn 48(l0): point = 103
   Insn 47(l0): point = 105
   Insn 46(l0): point = 107
   Insn 45(l0): point = 109
   Insn 44(l0): point = 111
   Insn 42(l0): point = 114
   Insn 41(l0): point = 116
   Insn 40(l0): point = 118
   Insn 39(l0): point = 120
   Insn 37(l0): point = 123
   Insn 36(l0): point = 125
   Insn 35(l0): point = 127
   Insn 34(l0): point = 129
   Insn 33(l0): point = 131
   Insn 32(l0): point = 133
   Insn 31(l0): point = 135
   Insn 30(l0): point = 137
   Insn 29(l0): point = 139
   Insn 28(l0): point = 141
   Insn 26(l0): point = 144
   Insn 25(l0): point = 146
   Insn 24(l0): point = 148
   Insn 23(l0): point = 150
   Insn 22(l0): point = 152
   Insn 21(l0): point = 154
   Insn 20(l0): point = 156
   Insn 19(l0): point = 158
   Insn 18(l0): point = 160
   Insn 17(l0): point = 162
   Insn 15(l0): point = 165
   Insn 14(l0): point = 167
   Insn 13(l0): point = 169
   Insn 12(l0): point = 171
   Insn 11(l0): point = 173
   Insn 10(l0): point = 175
   Insn 9(l0): point = 177
   Insn 8(l0): point = 179
   Insn 7(l0): point = 181
   Insn 6(l0): point = 183
   Insn 2(l0): point = 185
 a0(r84): [3..4]
 a1(r59): [98..100] [10..12] [5..7]
 a2(r83): [18..19]
 a3(r82): [20..21]
 a4(r100): [22..23]
 a5(r81): [29..30]
 a6(r99): [31..32]
 a7(r80): [38..39]
 a8(r79): [42..49]
 a9(r98): [46..47]
 a10(r78): [50..51]
 a11(r97): [52..53]
 a12(r77): [59..60]
 a13(r76): [63..70]
 a14(r96): [67..68]
 a15(r75): [71..72]
 a16(r95): [73..74]
 a17(r74): [80..81]
 a18(r73): [84..91]
 a19(r94): [88..89]
 a20(r72): [92..93]
 a21(r93): [94..95]
 a22(r71): [106..107]
 a23(r70): [108..109]
 a24(r92): [110..111]
 a25(r69): [117..118]
 a26(r91): [119..120]
 a27(r68): [126..127]
 a28(r67): [130..137]
 a29(r90): [134..135]
 a30(r66): [138..139]
 a31(r89): [140..141]
 a32(r65): [147..148]
 a33(r64): [151..158]
 a34(r88): [155..156]
 a35(r63): [159..160]
 a36(r87): [161..162]
 a37(r62): [168..169]
 a38(r61): [172..179]
 a39(r86): [176..177]
 a40(r60): [180..181]
 a41(r85): [182..183]
Compressing live ranges: from 188 to 76 - 40%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r59): [40..41] [2..5]
 a2(r83): [6..7]
 a3(r82): [8..9]
 a4(r100): [10..11]
 a5(r81): [12..13]
 a6(r99): [14..15]
 a7(r80): [16..17]
 a8(r79): [18..19]
 a9(r98): [18..19]
 a10(r78): [20..21]
 a11(r97): [22..23]
 a12(r77): [24..25]
 a13(r76): [26..27]
 a14(r96): [26..27]
 a15(r75): [28..29]
 a16(r95): [30..31]
 a17(r74): [32..33]
 a18(r73): [34..35]
 a19(r94): [34..35]
 a20(r72): [36..37]
 a21(r93): [38..39]
 a22(r71): [42..43]
 a23(r70): [44..45]
 a24(r92): [46..47]
 a25(r69): [48..49]
 a26(r91): [50..51]
 a27(r68): [52..53]
 a28(r67): [54..55]
 a29(r90): [54..55]
 a30(r66): [56..57]
 a31(r89): [58..59]
 a32(r65): [60..61]
 a33(r64): [62..63]
 a34(r88): [62..63]
 a35(r63): [64..65]
 a36(r87): [66..67]
 a37(r62): [68..69]
 a38(r61): [70..71]
 a39(r86): [70..71]
 a40(r60): [72..73]
 a41(r85): [74..75]
  regions=1, blocks=16, points=76
    allocnos=42 (big 0), copies=0, conflicts=0, ranges=43
Disposition:
    1:r59  l0     0   40:r60  l0     0   38:r61  l0     0   37:r62  l0     0
   35:r63  l0     0   33:r64  l0     0   32:r65  l0     0   30:r66  l0     0
   28:r67  l0     0   27:r68  l0     0   25:r69  l0     0   23:r70  l0     0
   22:r71  l0     0   20:r72  l0     0   18:r73  l0     0   17:r74  l0     0
   15:r75  l0     0   13:r76  l0     0   12:r77  l0     0   10:r78  l0     0
    8:r79  l0     0    7:r80  l0     0    5:r81  l0     0    3:r82  l0     0
    2:r83  l0     0    0:r84  l0     0   41:r85  l0     0   39:r86  l0     1
   36:r87  l0     0   34:r88  l0     1   31:r89  l0     0   29:r90  l0     1
   26:r91  l0     0   24:r92  l0     0   21:r93  l0     0   19:r94  l0     1
   16:r95  l0     0   14:r96  l0     1   11:r97  l0     0    9:r98  l0     1
    6:r99  l0     0    4:r100 l0     0
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_boolean

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={8d,8u} r1={7d} r2={7d} r4={13d,6u} r5={13d,7u} r6={1d,15u} r7={1d,21u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,14u} r17={18d,10u} r18={6d} r19={6d} r20={1d,26u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r59={3d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 503{352d,149u,2e} in 87{81 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 85 86
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 60 [ sqlite3_api.13 ])
        (mem/f/c:DI (reg/f:DI 85) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 61 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ sqlite3_api.13 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.13_2->stricmp+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ sqlite3_api.13 ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 86)) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fbdb45234c0 *.LC11>)) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 61 [ D.6605 ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:422 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 62 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:422 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:422 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6604 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:422 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 87 88
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:DI 87)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 63 [ sqlite3_api.14 ])
        (mem/f/c:DI (reg/f:DI 87) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 64 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ sqlite3_api.14 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.14_6->stricmp+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ sqlite3_api.14 ])
        (nil)))
(insn 20 19 21 3 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 88)) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fbdb4523558 *.LC12>)) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 64 [ D.6605 ]) [0 *_7 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:423 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 3 (set (reg:SI 65 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:423 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 65 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:423 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 65 [ D.6604 ])
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67 68 89 90
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 66 [ sqlite3_api.15 ])
        (mem/f/c:DI (reg/f:DI 89) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 67 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 66 [ sqlite3_api.15 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.15_9->stricmp+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ sqlite3_api.15 ])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 4 si)
        (reg:DI 90)) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fbdb45235f0 *.LC13>)) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 67 [ D.6605 ]) [0 *_10 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:424 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 4 (set (reg:SI 68 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:424 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 68 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:424 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 68 [ D.6604 ])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:424 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 91
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:425 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg:QI 69 [ D.6606 ])
        (mem:QI (reg/f:DI 91) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:425 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 69 [ D.6606 ])
            (const_int 49 [0x31]))) ./ext/misc/csv.c:425 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 69 [ D.6606 ])
        (nil)))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ./ext/misc/csv.c:425 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 92
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:425 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg/f:DI 70 [ D.6607 ])
                (plus:DI (reg/f:DI 92)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:425 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 46 45 47 6 (set (reg:QI 71 [ D.6606 ])
        (mem:QI (reg/f:DI 70 [ D.6607 ]) [0 *_13+0 S1 A8])) ./ext/misc/csv.c:425 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6607 ])
        (nil)))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.6606 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:425 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 71 [ D.6606 ])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ./ext/misc/csv.c:425 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 49 48 50 7 82 "" [3 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 119 7 (set (reg:SI 59 [ D.6604 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:427 89 {*movsi_internal}
     (nil))
(jump_insn 119 51 120 7 (set (pc)
        (label_ref 107)) ./ext/misc/csv.c:427 650 {jump}
     (nil)
 -> 107)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 120 119 54)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 72 73 74 93 94
(code_label 54 120 55 8 83 "" [2 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 72 [ sqlite3_api.16 ])
        (mem/f/c:DI (reg/f:DI 93) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 58 57 59 8 (set (reg/f:DI 73 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 72 [ sqlite3_api.16 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.16_15->stricmp+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ sqlite3_api.16 ])
        (nil)))
(insn 59 58 60 8 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (reg:DI 94)) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fbdb4523688 *.LC14>)) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 73 [ D.6605 ]) [0 *_16 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:429 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 8 (set (reg:SI 74 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:429 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:429 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 74 [ D.6604 ])
        (nil)))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 76 77 95 96
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 75 [ sqlite3_api.17 ])
        (mem/f/c:DI (reg/f:DI 95) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 69 68 70 9 (set (reg/f:DI 76 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 75 [ sqlite3_api.17 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.17_18->stricmp+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75 [ sqlite3_api.17 ])
        (nil)))
(insn 70 69 71 9 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 9 (set (reg:DI 4 si)
        (reg:DI 96)) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 72 71 73 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fbdb4523720 *.LC15>)) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(call_insn 73 72 74 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 76 [ D.6605 ]) [0 *_19 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:430 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 74 73 75 9 (set (reg:SI 77 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:430 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 75 74 76 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:430 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6604 ])
        (nil)))
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:430 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 80 97 98
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg/f:DI 97)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 10 (set (reg/f:DI 78 [ sqlite3_api.18 ])
        (mem/f/c:DI (reg/f:DI 97) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 80 79 81 10 (set (reg/f:DI 79 [ D.6605 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78 [ sqlite3_api.18 ])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.18_21->stricmp+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ sqlite3_api.18 ])
        (nil)))
(insn 81 80 82 10 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 10 (set (reg:DI 4 si)
        (reg:DI 98)) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fbdb45237b8 *.LC16>)) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(call_insn 84 83 85 10 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 79 [ D.6605 ]) [0 *_22 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:431 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 79 [ D.6605 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 10 (set (reg:SI 80 [ D.6604 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:431 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 86 85 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 80 [ D.6604 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:431 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 80 [ D.6604 ])
        (nil)))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:431 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 81 99
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:432 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:QI 81 [ D.6606 ])
        (mem:QI (reg/f:DI 99) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:432 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 91 90 92 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 81 [ D.6606 ])
            (const_int 48 [0x30]))) ./ext/misc/csv.c:432 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 81 [ D.6606 ])
        (nil)))
(jump_insn 92 91 93 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ./ext/misc/csv.c:432 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 82 83 100
(note 93 92 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 12 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:432 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 12 (parallel [
            (set (reg/f:DI 82 [ D.6607 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:432 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 96 95 97 12 (set (reg:QI 83 [ D.6606 ])
        (mem:QI (reg/f:DI 82 [ D.6607 ]) [0 *_25+0 S1 A8])) ./ext/misc/csv.c:432 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.6607 ])
        (nil)))
(insn 97 96 98 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ D.6606 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:432 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ D.6606 ])
        (nil)))
(jump_insn 98 97 99 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ./ext/misc/csv.c:432 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9
;;              10
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 99 98 100 13 85 "" [3 uses])
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 121 13 (set (reg:SI 59 [ D.6604 ])
        (const_int 0 [0])) ./ext/misc/csv.c:434 89 {*movsi_internal}
     (nil))
(jump_insn 121 101 122 13 (set (pc)
        (label_ref 107)) ./ext/misc/csv.c:434 650 {jump}
     (nil)
 -> 107)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 122 121 104)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 104 122 105 14 86 "" [2 uses])
(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 14 (set (reg:SI 59 [ D.6604 ])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:436 89 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              7 [100.0%] 
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 84
(code_label 107 106 108 15 84 "" [2 uses])
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 113 15 (set (reg:SI 84 [ <retval> ])
        (reg:SI 59 [ D.6604 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6604 ])
        (nil)))
(insn 113 109 116 15 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) ./ext/misc/csv.c:437 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 116 113 0 15 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:437 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_boolean_parameter (csv_boolean_parameter, funcdef_no=19, decl_uid=5678, cgraph_uid=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best AREG, allocno GENERAL_REGS
    r81: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r81,l0) best DIREG, allocno GENERAL_REGS
    r80: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r80,l0) best AREG, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r75,l0) best AREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r72,l0) best DIREG, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r71,l0) best SIREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r69,l0) best AREG, allocno GENERAL_REGS
    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r68,l0) best DIREG, allocno GENERAL_REGS
    r67: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r67,l0) best AREG, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r63,l0) best DIREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r61,l0) best AREG, allocno GENERAL_REGS
    r60: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r60,l0) best DREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r67,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:78 SSE_REGS:78 MMX_REGS:78 FP_TOP_SSE_REGS:393210 FP_SECOND_SSE_REGS:393210 FLOAT_SSE_REGS:393210 FLOAT_INT_REGS:393210 INT_SSE_REGS:78 FLOAT_INT_SSE_REGS:393210 ALL_REGS:393210 MEM:23
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r82,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r80,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r75,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a16(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r61,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r60,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r69,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 93(l0): point = 0
   Insn 90(l0): point = 2
   Insn 86(l0): point = 4
   Insn 83(l0): point = 7
   Insn 102(l0): point = 10
   Insn 78(l0): point = 12
   Insn 77(l0): point = 14
   Insn 76(l0): point = 16
   Insn 75(l0): point = 18
   Insn 73(l0): point = 21
   Insn 72(l0): point = 23
   Insn 71(l0): point = 25
   Insn 70(l0): point = 27
   Insn 69(l0): point = 29
   Insn 68(l0): point = 31
   Insn 67(l0): point = 33
   Insn 66(l0): point = 35
   Insn 65(l0): point = 37
   Insn 64(l0): point = 39
   Insn 63(l0): point = 41
   Insn 62(l0): point = 43
   Insn 61(l0): point = 45
   Insn 100(l0): point = 48
   Insn 56(l0): point = 50
   Insn 54(l0): point = 53
   Insn 53(l0): point = 55
   Insn 52(l0): point = 57
   Insn 51(l0): point = 59
   Insn 98(l0): point = 62
   Insn 46(l0): point = 64
   Insn 45(l0): point = 66
   Insn 44(l0): point = 68
   Insn 42(l0): point = 71
   Insn 41(l0): point = 73
   Insn 40(l0): point = 75
   Insn 39(l0): point = 77
   Insn 38(l0): point = 79
   Insn 37(l0): point = 81
   Insn 36(l0): point = 83
   Insn 35(l0): point = 85
   Insn 34(l0): point = 87
   Insn 33(l0): point = 89
   Insn 32(l0): point = 91
   Insn 31(l0): point = 93
   Insn 96(l0): point = 96
   Insn 26(l0): point = 98
   Insn 24(l0): point = 101
   Insn 23(l0): point = 103
   Insn 22(l0): point = 105
   Insn 21(l0): point = 107
   Insn 20(l0): point = 109
   Insn 19(l0): point = 111
   Insn 18(l0): point = 113
   Insn 17(l0): point = 115
   Insn 16(l0): point = 117
   Insn 15(l0): point = 119
   Insn 14(l0): point = 121
   Insn 13(l0): point = 123
   Insn 12(l0): point = 125
   Insn 11(l0): point = 127
   Insn 10(l0): point = 129
   Insn 9(l0): point = 131
   Insn 5(l0): point = 133
   Insn 4(l0): point = 135
   Insn 3(l0): point = 137
   Insn 2(l0): point = 139
 a0(r67): [3..4]
 a1(r59): [96..98] [62..64] [48..50] [10..12] [5..7]
 a2(r83): [15..18]
 a3(r84): [15..16]
 a4(r82): [26..27]
 a5(r81): [32..33]
 a6(r80): [36..37]
 a7(r66): [42..43]
 a8(r79): [44..45]
 a9(r65): [56..57]
 a10(r78): [58..59]
 a11(r77): [67..68]
 a12(r64): [74..75]
 a13(r76): [76..77]
 a14(r75): [80..81]
 a15(r63): [86..87]
 a16(r74): [88..89]
 a17(r62): [88..91]
 a18(r73): [92..93]
 a19(r61): [104..105]
 a20(r72): [110..115]
 a21(r71): [112..117]
 a22(r60): [114..119]
 a23(r70): [120..121]
 a24(r69): [124..125]
 a25(r68): [130..131]
Compressing live ranges: from 142 to 52 - 36%
Ranges after the compression:
 a0(r67): [0..1]
 a1(r59): [40..41] [24..25] [18..19] [2..5]
 a2(r83): [6..7]
 a3(r84): [6..7]
 a4(r82): [8..9]
 a5(r81): [10..11]
 a6(r80): [12..13]
 a7(r66): [14..15]
 a8(r79): [16..17]
 a9(r65): [20..21]
 a10(r78): [22..23]
 a11(r77): [26..27]
 a12(r64): [28..29]
 a13(r76): [30..31]
 a14(r75): [32..33]
 a15(r63): [34..35]
 a16(r74): [36..37]
 a17(r62): [36..37]
 a18(r73): [38..39]
 a19(r61): [42..43]
 a20(r72): [44..45]
 a21(r71): [44..45]
 a22(r60): [44..45]
 a23(r70): [46..47]
 a24(r69): [48..49]
 a25(r68): [50..51]
  regions=1, blocks=12, points=52
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=29
Disposition:
    1:r59  l0     0   22:r60  l0     1   19:r61  l0     0   17:r62  l0     1
   15:r63  l0     0   12:r64  l0     0    9:r65  l0     0    7:r66  l0     0
    0:r67  l0     0   25:r68  l0     0   24:r69  l0     0   23:r70  l0     0
   21:r71  l0     2   20:r72  l0     0   18:r73  l0     0   16:r74  l0     0
   14:r75  l0     0   13:r76  l0     0   11:r77  l0     0   10:r78  l0     0
    8:r79  l0     0    6:r80  l0     0    5:r81  l0     0    4:r82  l0     0
    2:r83  l0     0    3:r84  l0     1
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csv_boolean_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={7d,7u} r1={7d,2u} r2={6d,1u} r4={7d,2u} r5={11d,6u} r6={1d,11u} r7={1d,16u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,10u} r17={11d,4u} r18={5d} r19={5d} r20={1d,33u,2e} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r59={5d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 404{283d,118u,3e} in 66{61 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 68 69 70 71 72
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 zTag+0 S8 A64])
        (reg:DI 5 di [ zTag ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ zTag ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])
        (reg:SI 4 si [ nTag ])) ./ext/misc/csv.c:449 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nTag ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 1 dx [ z ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ z ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])
        (reg:DI 2 cx [ pValue ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ pValue ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 68)) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:451 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 69)
        (reg:DI 0 ax)) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 69)) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 70)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 60 [ D.6615 ])
        (sign_extend:DI (reg:SI 70))) ./ext/misc/csv.c:452 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 70)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 71)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 zTag+0 S8 A64])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg:DI 60 [ D.6615 ])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.6615 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 71)) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 72)) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72)
        (nil)))
(call_insn/i 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fbdb4907e00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:452 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:SI 61 [ D.6614 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.6614 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:452 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6614 ])
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ./ext/misc/csv.c:452 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 96 3 (set (reg:SI 59 [ D.6614 ])
        (const_int 0 [0])) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (nil))
(jump_insn 96 26 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:452 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 29)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 73 74 75 76
(code_label 29 97 30 4 88 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:453 89 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 62 [ D.6616 ])
        (sign_extend:DI (reg:SI 73))) ./ext/misc/csv.c:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 33 32 34 4 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 63 [ D.6617 ])
                (plus:DI (reg:DI 62 [ D.6616 ])
                    (reg/f:DI 74)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:453 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (expr_list:REG_DEAD (reg:DI 62 [ D.6616 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                        (reg:DI 62 [ D.6616 ]))
                    (nil))))))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.6617 ])) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6617 ])
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:453 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 75)
        (reg:DI 0 ax)) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 75)) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (nil)))
(insn 39 38 40 4 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:454 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 4 (set (reg:QI 64 [ D.6618 ])
        (mem:QI (reg/f:DI 76) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:454 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.6618 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:454 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 64 [ D.6618 ])
        (nil)))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:454 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 77
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])) ./ext/misc/csv.c:455 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (mem:SI (reg/f:DI 77) [0 *pValue_13(D)+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:455 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 46 45 98 5 (set (reg:SI 59 [ D.6614 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:456 89 {*movsi_internal}
     (nil))
(jump_insn 98 46 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:456 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 49)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 78
(code_label 49 99 50 6 90 "" [1 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:458 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 6 (set (reg:QI 65 [ D.6618 ])
        (mem:QI (reg/f:DI 78) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:458 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.6618 ])
            (const_int 61 [0x3d]))) ./ext/misc/csv.c:458 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 65 [ D.6618 ])
        (nil)))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) ./ext/misc/csv.c:458 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 100 7 (set (reg:SI 59 [ D.6614 ])
        (const_int 0 [0])) ./ext/misc/csv.c:458 89 {*movsi_internal}
     (nil))
(jump_insn 100 56 101 7 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:458 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 101 100 59)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 79 80 81 82
(code_label 59 101 60 8 91 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg/f:DI 66 [ D.6617 ])
                (plus:DI (reg/f:DI 79)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:459 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 63 62 64 8 (set (reg:DI 5 di)
        (reg/f:DI 66 [ D.6617 ])) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6617 ])
        (nil)))
(call_insn 64 63 65 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:459 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 8 (set (reg:DI 80)
        (reg:DI 0 ax)) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 66 65 67 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 80)) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 80)
        (nil)))
(insn 67 66 68 8 (set (reg:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:460 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 8 (set (reg:DI 5 di)
        (reg:DI 81)) ./ext/misc/csv.c:460 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 81)
        (nil)))
(call_insn 69 68 70 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_boolean") [flags 0x3]  <function_decl 0x7fbdb43ecc00 csv_boolean>) [0 csv_boolean S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:460 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 70 69 71 8 (set (reg:SI 82)
        (reg:SI 0 ax)) ./ext/misc/csv.c:460 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 71 70 72 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])
        (reg:SI 82)) ./ext/misc/csv.c:460 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 72 71 73 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:461 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:461 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 83 84
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])) ./ext/misc/csv.c:462 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 9 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])) ./ext/misc/csv.c:462 89 {*movsi_internal}
     (nil))
(insn 77 76 78 9 (set (mem:SI (reg/f:DI 83) [0 *pValue_13(D)+0 S4 A32])
        (reg:SI 84)) ./ext/misc/csv.c:462 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (expr_list:REG_DEAD (reg/f:DI 83)
            (nil))))
(insn 78 77 102 9 (set (reg:SI 59 [ D.6614 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:463 89 {*movsi_internal}
     (nil))
(jump_insn 102 78 103 9 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:463 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 103 102 81)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 81 103 82 10 92 "" [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:SI 59 [ D.6614 ])
        (const_int 0 [0])) ./ext/misc/csv.c:465 89 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 67
(code_label 84 83 85 11 89 "" [4 uses])
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 11 (set (reg:SI 67 [ <retval> ])
        (reg:SI 59 [ D.6614 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6614 ])
        (nil)))
(insn 90 86 93 11 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) ./ext/misc/csv.c:466 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67 [ <retval> ])
        (nil)))
(insn 93 90 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:466 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabConnect (csvtabConnect, funcdef_no=20, decl_uid=5585, cgraph_uid=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 85 n_edges 124 count 85 (    1)
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 246.
verify found no changes in insn with uid = 259.
verify found no changes in insn with uid = 270.
verify found no changes in insn with uid = 299.
verify found no changes in insn with uid = 316.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 379.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 406.
verify found no changes in insn with uid = 426.
verify found no changes in insn with uid = 479.
verify found no changes in insn with uid = 496.
verify found no changes in insn with uid = 504.
verify found no changes in insn with uid = 515.
verify found no changes in insn with uid = 524.
verify found no changes in insn with uid = 540.
verify found no changes in insn with uid = 556.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 575.
verify found no changes in insn with uid = 589.
verify found no changes in insn with uid = 608.
verify found no changes in insn with uid = 617.
verify found no changes in insn with uid = 625.
verify found no changes in insn with uid = 647.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r247: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r247,l0) best DIREG, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r245,l0) best SIREG, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r237,l0) best DIREG, allocno GENERAL_REGS
    r236: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r236,l0) best DIREG, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r231,l0) best DIREG, allocno GENERAL_REGS
    r230: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r230,l0) best DIREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r227,l0) best DIREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r213,l0) best DIREG, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r211,l0) best DIREG, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r205,l0) best DIREG, allocno GENERAL_REGS
    r204: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r204,l0) best DREG, allocno GENERAL_REGS
    r203: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r203,l0) best CREG, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r198,l0) best DREG, allocno GENERAL_REGS
    r197: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r197,l0) best CREG, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r194,l0) best AREG, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r190,l0) best DIREG, allocno GENERAL_REGS
    r189: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r189,l0) best DREG, allocno GENERAL_REGS
    r188: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r188,l0) best CREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r186,l0) best DIREG, allocno GENERAL_REGS
    r185: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r185,l0) best DIREG, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r182,l0) best AREG, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r180,l0) best DIREG, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r177,l0) best AREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r175,l0) best DIREG, allocno GENERAL_REGS
    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r174,l0) best DIREG, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r172,l0) best DIREG, allocno GENERAL_REGS
    r171: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r171,l0) best DREG, allocno GENERAL_REGS
    r170: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a153 (r170,l0) best DIREG, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r168,l0) best DIREG, allocno GENERAL_REGS
    r167: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r167,l0) best DIREG, allocno GENERAL_REGS
    r166: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r166,l0) best AREG, allocno GENERAL_REGS
    r165: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r165,l0) best DREG, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r163,l0) best DIREG, allocno GENERAL_REGS
    r162: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r162,l0) best DREG, allocno GENERAL_REGS
    r161: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r161,l0) best CREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r159,l0) best DREG, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r147,l0) best DIREG, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r146,l0) best DIREG, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r140,l0) best DIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r125,l0) best DREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r121,l0) best SIREG, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r77,l0) best AREG, allocno GENERAL_REGS
    r76: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r76,l0) best SIREG, allocno GENERAL_REGS
    r75: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r75,l0) best DREG, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a161 (r69,l0) best AREG, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a167 (r66,l0) best AREG, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r65,l0) best SIREG, allocno GENERAL_REGS
    r64: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r64,l0) best CREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r144,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:11
  a2(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r143,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a26(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a32(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a33(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a35(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a36(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a37(r125,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r124,l0) costs: AREG:-1 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a40(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a41(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a42(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a43(r228,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a44(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a45(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a46(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a47(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a48(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a49(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a50(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a51(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a52(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a53(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a54(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a55(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a56(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a57(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a58(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a59(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a60(r109,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a61(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a63(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a64(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a65(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a66(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a67(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a68(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a69(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a70(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a71(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a72(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a73(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a74(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a75(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a76(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a77(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a78(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a79(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a80(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a81(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a82(r97,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a83(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a84(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a85(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a86(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a87(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a88(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a89(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a90(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a91(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a92(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a93(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a94(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a95(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a96(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a97(r204,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a98(r203,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a99(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a100(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a101(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a102(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a103(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a104(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a105(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a106(r198,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a107(r197,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a108(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a109(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a110(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a111(r194,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a112(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a113(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a114(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a115(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a116(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a117(r189,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a118(r188,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a119(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a120(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a121(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a122(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a123(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a124(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a125(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a126(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a127(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a128(r182,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a129(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a130(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a131(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a132(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a133(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a134(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a135(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a136(r177,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a137(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a138(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a139(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a140(r77,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a141(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a142(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a143(r75,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a144(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a145(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a146(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a147(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a148(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a149(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a150(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a151(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a152(r171,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a153(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a154(r169,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a155(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a156(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a157(r166,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a158(r165,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a159(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a160(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a161(r69,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a162(r162,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a163(r161,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a164(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a165(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a166(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a167(r66,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a168(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a169(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a170(r159,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a171(r64,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a172(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:25 SSE_REGS:25 MMX_REGS:25 FP_TOP_SSE_REGS:131069 FP_SECOND_SSE_REGS:131069 FLOAT_SSE_REGS:131069 FLOAT_INT_REGS:131069 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:131069 ALL_REGS:131069 MEM:8
  a173(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:25 SSE_REGS:25 MMX_REGS:25 FP_TOP_SSE_REGS:131069 FP_SECOND_SSE_REGS:131069 FLOAT_SSE_REGS:131069 FLOAT_INT_REGS:131069 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:131069 ALL_REGS:131069 MEM:7
  a174(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a175(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a176(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a177(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a178(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a179(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a180(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a181(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a182(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a183(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a184(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a185(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a186(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a187(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 650(l0): point = 0
   Insn 647(l0): point = 3
   Insn 646(l0): point = 6
   Insn 645(l0): point = 8
   Insn 641(l0): point = 10
   Insn 637(l0): point = 12
   Insn 632(l0): point = 15
   Insn 629(l0): point = 18
   Insn 627(l0): point = 21
   Insn 626(l0): point = 23
   Insn 625(l0): point = 25
   Insn 624(l0): point = 27
   Insn 623(l0): point = 29
   Insn 620(l0): point = 32
   Insn 619(l0): point = 34
   Insn 618(l0): point = 36
   Insn 617(l0): point = 38
   Insn 616(l0): point = 40
   Insn 615(l0): point = 42
   Insn 614(l0): point = 44
   Insn 613(l0): point = 46
   Insn 612(l0): point = 48
   Insn 611(l0): point = 50
   Insn 610(l0): point = 52
   Insn 609(l0): point = 54
   Insn 608(l0): point = 56
   Insn 607(l0): point = 58
   Insn 606(l0): point = 60
   Insn 605(l0): point = 62
   Insn 604(l0): point = 64
   Insn 603(l0): point = 66
   Insn 602(l0): point = 68
   Insn 600(l0): point = 71
   Insn 599(l0): point = 73
   Insn 598(l0): point = 75
   Insn 590(l0): point = 78
   Insn 589(l0): point = 80
   Insn 588(l0): point = 82
   Insn 587(l0): point = 84
   Insn 586(l0): point = 86
   Insn 585(l0): point = 88
   Insn 584(l0): point = 90
   Insn 583(l0): point = 92
   Insn 582(l0): point = 94
   Insn 596(l0): point = 97
   Insn 595(l0): point = 99
   Insn 593(l0): point = 101
   Insn 704(l0): point = 104
   Insn 578(l0): point = 106
   Insn 575(l0): point = 109
   Insn 574(l0): point = 111
   Insn 573(l0): point = 113
   Insn 571(l0): point = 116
   Insn 570(l0): point = 118
   Insn 567(l0): point = 121
   Insn 566(l0): point = 123
   Insn 565(l0): point = 125
   Insn 564(l0): point = 127
   Insn 563(l0): point = 129
   Insn 562(l0): point = 131
   Insn 702(l0): point = 134
   Insn 557(l0): point = 136
   Insn 556(l0): point = 138
   Insn 555(l0): point = 140
   Insn 554(l0): point = 142
   Insn 553(l0): point = 144
   Insn 552(l0): point = 146
   Insn 551(l0): point = 148
   Insn 550(l0): point = 150
   Insn 549(l0): point = 152
   Insn 541(l0): point = 155
   Insn 540(l0): point = 157
   Insn 539(l0): point = 159
   Insn 538(l0): point = 161
   Insn 537(l0): point = 163
   Insn 536(l0): point = 165
   Insn 535(l0): point = 167
   Insn 534(l0): point = 169
   Insn 533(l0): point = 171
   Insn 547(l0): point = 174
   Insn 546(l0): point = 176
   Insn 544(l0): point = 178
   Insn 700(l0): point = 181
   Insn 529(l0): point = 183
   Insn 698(l0): point = 186
   Insn 524(l0): point = 188
   Insn 523(l0): point = 190
   Insn 522(l0): point = 192
   Insn 521(l0): point = 194
   Insn 520(l0): point = 196
   Insn 519(l0): point = 198
   Insn 518(l0): point = 200
   Insn 517(l0): point = 202
   Insn 516(l0): point = 204
   Insn 515(l0): point = 206
   Insn 514(l0): point = 208
   Insn 513(l0): point = 210
   Insn 512(l0): point = 212
   Insn 511(l0): point = 214
   Insn 510(l0): point = 216
   Insn 508(l0): point = 219
   Insn 507(l0): point = 221
   Insn 506(l0): point = 223
   Insn 505(l0): point = 225
   Insn 504(l0): point = 227
   Insn 503(l0): point = 229
   Insn 502(l0): point = 231
   Insn 501(l0): point = 233
   Insn 500(l0): point = 235
   Insn 499(l0): point = 237
   Insn 498(l0): point = 239
   Insn 497(l0): point = 241
   Insn 496(l0): point = 243
   Insn 495(l0): point = 245
   Insn 494(l0): point = 247
   Insn 491(l0): point = 250
   Insn 490(l0): point = 252
   Insn 489(l0): point = 254
   Insn 488(l0): point = 256
   Insn 487(l0): point = 258
   Insn 486(l0): point = 260
   Insn 485(l0): point = 262
   Insn 484(l0): point = 264
   Insn 483(l0): point = 266
   Insn 482(l0): point = 268
   Insn 481(l0): point = 270
   Insn 480(l0): point = 272
   Insn 479(l0): point = 274
   Insn 478(l0): point = 276
   Insn 477(l0): point = 278
   Insn 696(l0): point = 281
   Insn 472(l0): point = 283
   Insn 471(l0): point = 285
   Insn 470(l0): point = 287
   Insn 469(l0): point = 289
   Insn 468(l0): point = 291
   Insn 466(l0): point = 294
   Insn 465(l0): point = 296
   Insn 464(l0): point = 298
   Insn 463(l0): point = 300
   Insn 694(l0): point = 303
   Insn 458(l0): point = 305
   Insn 457(l0): point = 307
   Insn 455(l0): point = 310
   Insn 454(l0): point = 312
   Insn 453(l0): point = 314
   Insn 452(l0): point = 316
   Insn 451(l0): point = 318
   Insn 450(l0): point = 320
   Insn 449(l0): point = 322
   Insn 448(l0): point = 324
   Insn 447(l0): point = 326
   Insn 446(l0): point = 328
   Insn 443(l0): point = 331
   Insn 442(l0): point = 333
   Insn 441(l0): point = 335
   Insn 692(l0): point = 338
   Insn 435(l0): point = 341
   Insn 434(l0): point = 343
   Insn 432(l0): point = 345
   Insn 431(l0): point = 347
   Insn 430(l0): point = 349
   Insn 429(l0): point = 351
   Insn 428(l0): point = 353
   Insn 427(l0): point = 355
   Insn 426(l0): point = 357
   Insn 425(l0): point = 359
   Insn 424(l0): point = 361
   Insn 422(l0): point = 364
   Insn 421(l0): point = 366
   Insn 689(l0): point = 369
   Insn 687(l0): point = 372
   Insn 411(l0): point = 375
   Insn 410(l0): point = 377
   Insn 409(l0): point = 379
   Insn 408(l0): point = 381
   Insn 407(l0): point = 383
   Insn 406(l0): point = 385
   Insn 405(l0): point = 387
   Insn 404(l0): point = 389
   Insn 403(l0): point = 391
   Insn 402(l0): point = 393
   Insn 401(l0): point = 395
   Insn 400(l0): point = 397
   Insn 399(l0): point = 399
   Insn 398(l0): point = 401
   Insn 397(l0): point = 403
   Insn 396(l0): point = 405
   Insn 395(l0): point = 407
   Insn 394(l0): point = 409
   Insn 393(l0): point = 411
   Insn 392(l0): point = 413
   Insn 391(l0): point = 415
   Insn 390(l0): point = 417
   Insn 381(l0): point = 420
   Insn 380(l0): point = 422
   Insn 379(l0): point = 424
   Insn 378(l0): point = 426
   Insn 377(l0): point = 428
   Insn 376(l0): point = 430
   Insn 375(l0): point = 432
   Insn 374(l0): point = 434
   Insn 373(l0): point = 436
   Insn 372(l0): point = 438
   Insn 371(l0): point = 440
   Insn 370(l0): point = 442
   Insn 369(l0): point = 444
   Insn 368(l0): point = 446
   Insn 367(l0): point = 448
   Insn 387(l0): point = 451
   Insn 386(l0): point = 453
   Insn 385(l0): point = 455
   Insn 685(l0): point = 458
   Insn 683(l0): point = 461
   Insn 359(l0): point = 463
   Insn 358(l0): point = 465
   Insn 356(l0): point = 468
   Insn 355(l0): point = 470
   Insn 320(l0): point = 473
   Insn 319(l0): point = 475
   Insn 318(l0): point = 477
   Insn 317(l0): point = 479
   Insn 316(l0): point = 481
   Insn 315(l0): point = 483
   Insn 314(l0): point = 485
   Insn 353(l0): point = 488
   Insn 352(l0): point = 490
   Insn 351(l0): point = 492
   Insn 328(l0): point = 495
   Insn 327(l0): point = 497
   Insn 331(l0): point = 500
   Insn 330(l0): point = 502
   Insn 348(l0): point = 505
   Insn 347(l0): point = 507
   Insn 346(l0): point = 509
   Insn 345(l0): point = 511
   Insn 344(l0): point = 513
   Insn 343(l0): point = 515
   Insn 342(l0): point = 517
   Insn 341(l0): point = 519
   Insn 340(l0): point = 521
   Insn 339(l0): point = 523
   Insn 338(l0): point = 525
   Insn 337(l0): point = 527
   Insn 336(l0): point = 529
   Insn 335(l0): point = 531
   Insn 334(l0): point = 533
   Insn 324(l0): point = 536
   Insn 323(l0): point = 538
   Insn 322(l0): point = 540
   Insn 681(l0): point = 543
   Insn 302(l0): point = 546
   Insn 301(l0): point = 548
   Insn 300(l0): point = 550
   Insn 299(l0): point = 552
   Insn 298(l0): point = 554
   Insn 297(l0): point = 556
   Insn 296(l0): point = 558
   Insn 295(l0): point = 560
   Insn 294(l0): point = 562
   Insn 293(l0): point = 564
   Insn 292(l0): point = 566
   Insn 291(l0): point = 568
   Insn 290(l0): point = 570
   Insn 289(l0): point = 572
   Insn 288(l0): point = 574
   Insn 308(l0): point = 577
   Insn 307(l0): point = 579
   Insn 306(l0): point = 581
   Insn 679(l0): point = 584
   Insn 284(l0): point = 586
   Insn 282(l0): point = 589
   Insn 281(l0): point = 591
   Insn 279(l0): point = 594
   Insn 278(l0): point = 596
   Insn 275(l0): point = 599
   Insn 274(l0): point = 601
   Insn 272(l0): point = 603
   Insn 271(l0): point = 605
   Insn 270(l0): point = 607
   Insn 269(l0): point = 609
   Insn 268(l0): point = 611
   Insn 266(l0): point = 614
   Insn 264(l0): point = 617
   Insn 263(l0): point = 619
   Insn 261(l0): point = 622
   Insn 260(l0): point = 624
   Insn 259(l0): point = 626
   Insn 258(l0): point = 628
   Insn 257(l0): point = 630
   Insn 256(l0): point = 632
   Insn 255(l0): point = 634
   Insn 254(l0): point = 636
   Insn 253(l0): point = 638
   Insn 252(l0): point = 640
   Insn 251(l0): point = 642
   Insn 250(l0): point = 644
   Insn 249(l0): point = 646
   Insn 248(l0): point = 648
   Insn 247(l0): point = 650
   Insn 246(l0): point = 652
   Insn 245(l0): point = 654
   Insn 244(l0): point = 656
   Insn 243(l0): point = 658
   Insn 242(l0): point = 660
   Insn 240(l0): point = 663
   Insn 239(l0): point = 665
   Insn 238(l0): point = 667
   Insn 237(l0): point = 669
   Insn 236(l0): point = 671
   Insn 235(l0): point = 673
   Insn 234(l0): point = 675
   Insn 233(l0): point = 677
   Insn 677(l0): point = 680
   Insn 227(l0): point = 683
   Insn 226(l0): point = 685
   Insn 225(l0): point = 687
   Insn 224(l0): point = 689
   Insn 223(l0): point = 691
   Insn 222(l0): point = 693
   Insn 221(l0): point = 695
   Insn 220(l0): point = 697
   Insn 219(l0): point = 699
   Insn 218(l0): point = 701
   Insn 217(l0): point = 703
   Insn 216(l0): point = 705
   Insn 675(l0): point = 708
   Insn 210(l0): point = 711
   Insn 209(l0): point = 713
   Insn 208(l0): point = 715
   Insn 207(l0): point = 717
   Insn 206(l0): point = 719
   Insn 205(l0): point = 721
   Insn 204(l0): point = 723
   Insn 203(l0): point = 725
   Insn 202(l0): point = 727
   Insn 201(l0): point = 729
   Insn 198(l0): point = 732
   Insn 197(l0): point = 734
   Insn 195(l0): point = 737
   Insn 194(l0): point = 739
   Insn 673(l0): point = 742
   Insn 189(l0): point = 744
   Insn 188(l0): point = 746
   Insn 187(l0): point = 748
   Insn 186(l0): point = 750
   Insn 185(l0): point = 752
   Insn 183(l0): point = 755
   Insn 182(l0): point = 757
   Insn 181(l0): point = 759
   Insn 180(l0): point = 761
   Insn 179(l0): point = 763
   Insn 178(l0): point = 765
   Insn 177(l0): point = 767
   Insn 176(l0): point = 769
   Insn 175(l0): point = 771
   Insn 671(l0): point = 774
   Insn 162(l0): point = 776
   Insn 161(l0): point = 778
   Insn 160(l0): point = 780
   Insn 159(l0): point = 782
   Insn 158(l0): point = 784
   Insn 157(l0): point = 786
   Insn 156(l0): point = 788
   Insn 669(l0): point = 791
   Insn 151(l0): point = 793
   Insn 150(l0): point = 795
   Insn 149(l0): point = 797
   Insn 148(l0): point = 799
   Insn 147(l0): point = 801
   Insn 667(l0): point = 804
   Insn 134(l0): point = 806
   Insn 133(l0): point = 808
   Insn 132(l0): point = 810
   Insn 131(l0): point = 812
   Insn 130(l0): point = 814
   Insn 663(l0): point = 817
   Insn 106(l0): point = 819
   Insn 105(l0): point = 821
   Insn 104(l0): point = 823
   Insn 103(l0): point = 825
   Insn 102(l0): point = 827
   Insn 661(l0): point = 830
   Insn 657(l0): point = 833
   Insn 38(l0): point = 835
   Insn 37(l0): point = 837
   Insn 36(l0): point = 839
   Insn 35(l0): point = 841
   Insn 34(l0): point = 843
   Insn 33(l0): point = 845
   Insn 32(l0): point = 847
   Insn 31(l0): point = 849
   Insn 173(l0): point = 852
   Insn 172(l0): point = 854
   Insn 171(l0): point = 856
   Insn 167(l0): point = 859
   Insn 82(l0): point = 862
   Insn 81(l0): point = 864
   Insn 80(l0): point = 866
   Insn 145(l0): point = 869
   Insn 144(l0): point = 871
   Insn 143(l0): point = 873
   Insn 142(l0): point = 875
   Insn 141(l0): point = 877
   Insn 140(l0): point = 879
   Insn 139(l0): point = 881
   Insn 128(l0): point = 884
   Insn 127(l0): point = 886
   Insn 125(l0): point = 889
   Insn 124(l0): point = 891
   Insn 123(l0): point = 893
   Insn 122(l0): point = 895
   Insn 121(l0): point = 897
   Insn 120(l0): point = 899
   Insn 119(l0): point = 901
   Insn 118(l0): point = 903
   Insn 117(l0): point = 905
   Insn 665(l0): point = 908
   Insn 112(l0): point = 910
   Insn 111(l0): point = 912
   Insn 100(l0): point = 915
   Insn 99(l0): point = 917
   Insn 97(l0): point = 920
   Insn 96(l0): point = 922
   Insn 95(l0): point = 924
   Insn 94(l0): point = 926
   Insn 93(l0): point = 928
   Insn 92(l0): point = 930
   Insn 91(l0): point = 932
   Insn 90(l0): point = 934
   Insn 89(l0): point = 936
   Insn 88(l0): point = 938
   Insn 78(l0): point = 941
   Insn 77(l0): point = 943
   Insn 76(l0): point = 945
   Insn 73(l0): point = 948
   Insn 72(l0): point = 950
   Insn 70(l0): point = 952
   Insn 67(l0): point = 955
   Insn 659(l0): point = 958
   Insn 61(l0): point = 961
   Insn 60(l0): point = 963
   Insn 59(l0): point = 965
   Insn 58(l0): point = 967
   Insn 57(l0): point = 969
   Insn 56(l0): point = 971
   Insn 55(l0): point = 973
   Insn 54(l0): point = 975
   Insn 53(l0): point = 977
   Insn 52(l0): point = 979
   Insn 51(l0): point = 981
   Insn 50(l0): point = 983
   Insn 49(l0): point = 985
   Insn 48(l0): point = 987
   Insn 47(l0): point = 989
   Insn 46(l0): point = 991
   Insn 45(l0): point = 993
   Insn 44(l0): point = 995
   Insn 43(l0): point = 997
   Insn 42(l0): point = 999
   Insn 655(l0): point = 1002
   Insn 27(l0): point = 1004
   Insn 26(l0): point = 1006
   Insn 25(l0): point = 1008
   Insn 24(l0): point = 1010
   Insn 23(l0): point = 1012
   Insn 22(l0): point = 1014
   Insn 21(l0): point = 1016
   Insn 20(l0): point = 1018
   Insn 19(l0): point = 1020
   Insn 18(l0): point = 1022
   Insn 17(l0): point = 1024
   Insn 16(l0): point = 1026
   Insn 15(l0): point = 1028
   Insn 14(l0): point = 1030
   Insn 13(l0): point = 1032
   Insn 10(l0): point = 1034
   Insn 7(l0): point = 1036
   Insn 6(l0): point = 1038
   Insn 5(l0): point = 1040
   Insn 4(l0): point = 1042
   Insn 3(l0): point = 1044
   Insn 2(l0): point = 1046
 a0(r144): [11..12]
 a1(r59): [134..136] [13..15]
 a2(r247): [28..29]
 a3(r246): [33..34]
 a4(r143): [33..36]
 a5(r142): [39..50]
 a6(r245): [45..46]
 a7(r244): [47..48]
 a8(r141): [51..52]
 a9(r243): [53..54]
 a10(r139): [57..64]
 a11(r140): [59..60]
 a12(r242): [61..62]
 a13(r138): [65..66]
 a14(r241): [67..68]
 a15(r137): [74..75]
 a16(r133): [100..101]
 a17(r135): [81..90]
 a18(r136): [83..84]
 a19(r239): [85..86]
 a20(r240): [87..88]
 a21(r134): [91..92]
 a22(r238): [93..94]
 a23(r132): [112..113]
 a24(r237): [126..129]
 a25(r131): [139..148]
 a26(r236): [143..146]
 a27(r130): [149..150]
 a28(r235): [151..152]
 a29(r126): [177..178]
 a30(r128): [158..167]
 a31(r129): [160..161]
 a32(r233): [162..163]
 a33(r234): [164..165]
 a34(r127): [168..169]
 a35(r232): [170..171]
 a36(r231): [193..200]
 a37(r125): [197..202]
 a38(r124): [199..204]
 a39(r123): [207..212]
 a40(r230): [209..210]
 a41(r122): [213..214]
 a42(r229): [215..216]
 a43(r228): [224..225]
 a44(r120): [228..237]
 a45(r227): [230..233]
 a46(r121): [232..235]
 a47(r119): [238..239]
 a48(r226): [240..241]
 a49(r225): [246..247]
 a50(r224): [251..252]
 a51(r118): [251..254]
 a52(r117): [255..256]
 a53(r116): [257..258]
 a54(r115): [259..260]
 a55(r113): [259..264]
 a56(r114): [261..262]
 a57(r112): [265..266]
 a58(r110): [265..270]
 a59(r111): [267..268]
 a60(r109): [271..272]
 a61(r108): [277..278]
 a62(r223): [284..285]
 a63(r107): [284..287]
 a64(r106): [288..289]
 a65(r105): [290..291]
 a66(r104): [297..298]
 a67(r222): [299..300]
 a68(r221): [306..307]
 a69(r220): [317..318]
 a70(r103): [317..320]
 a71(r219): [325..326]
 a72(r102): [325..328]
 a73(r217): [332..335]
 a74(r218): [332..333]
 a75(r101): [344..345]
 a76(r216): [348..349]
 a77(r100): [348..351]
 a78(r99): [352..353]
 a79(r215): [354..355]
 a80(r214): [360..361]
 a81(r98): [378..379]
 a82(r97): [382..383]
 a83(r96): [386..391]
 a84(r213): [388..389]
 a85(r95): [392..393]
 a86(r212): [394..395]
 a87(r94): [398..407]
 a88(r211): [402..405]
 a89(r93): [408..409]
 a90(r210): [410..411]
 a91(r208): [414..417]
 a92(r209): [414..415]
 a93(r207): [454..455]
 a94(r206): [421..422]
 a95(r92): [425..444]
 a96(r205): [429..436]
 a97(r204): [433..438]
 a98(r203): [435..440]
 a99(r91): [445..446]
 a100(r202): [447..448]
 a101(r201): [464..465]
 a102(r90): [491..492]
 a103(r200): [508..509]
 a104(r89): [512..529]
 a105(r199): [516..523]
 a106(r198): [520..525]
 a107(r197): [522..527]
 a108(r88): [530..531]
 a109(r196): [532..533]
 a110(r195): [539..540]
 a111(r194): [478..479]
 a112(r193): [484..485]
 a113(r192): [580..581]
 a114(r191): [549..550]
 a115(r87): [553..570]
 a116(r190): [557..564]
 a117(r189): [561..566]
 a118(r188): [563..568]
 a119(r86): [571..572]
 a120(r187): [573..574]
 a121(r85): [602..603]
 a122(r186): [610..611]
 a123(r84): [627..636]
 a124(r185): [631..634]
 a125(r83): [637..638]
 a126(r184): [639..640]
 a127(r183): [645..646]
 a128(r182): [649..650]
 a129(r82): [653..656]
 a130(r81): [657..658]
 a131(r181): [659..660]
 a132(r80): [666..667]
 a133(r180): [672..677]
 a134(r178): [688..691]
 a135(r179): [688..689]
 a136(r177): [694..695]
 a137(r79): [698..701]
 a138(r78): [702..703]
 a139(r176): [704..705]
 a140(r77): [714..715]
 a141(r175): [720..725]
 a142(r76): [722..727]
 a143(r75): [724..729]
 a144(r174): [749..752]
 a145(r74): [758..759]
 a146(r73): [760..761]
 a147(r71): [760..767]
 a148(r72): [764..765]
 a149(r70): [770..771]
 a150(r173): [855..856]
 a151(r172): [781..786]
 a152(r171): [785..788]
 a153(r170): [798..801]
 a154(r169): [874..875]
 a155(r168): [880..881]
 a156(r167): [811..814]
 a157(r166): [894..895]
 a158(r165): [904..905]
 a159(r164): [911..912]
 a160(r163): [824..827]
 a161(r69): [923..924]
 a162(r162): [933..936]
 a163(r161): [935..938]
 a164(r68): [865..866]
 a165(r67): [944..945]
 a166(r63): [951..952]
 a167(r66): [964..965]
 a168(r160): [970..977]
 a169(r65): [972..981]
 a170(r159): [974..979]
 a171(r64): [976..991]
 a172(r158): [982..983]
 a173(r157): [982..985]
 a174(r155): [986..987]
 a175(r156): [988..989]
 a176(r154): [992..993]
 a177(r151): [992..999]
 a178(r152): [994..995]
 a179(r153): [996..997]
 a180(r150): [838..839]
 a181(r62): [840..841]
 a182(r149): [842..843]
 a183(r61): [842..845]
 a184(r60): [846..847]
 a185(r148): [848..849]
 a186(r147): [1009..1014]
 a187(r146): [1019..1024]
Compressing live ranges: from 1049 to 290 - 27%
Ranges after the compression:
 a0(r144): [0..1]
 a1(r59): [42..43] [2..3]
 a2(r247): [4..5]
 a3(r246): [6..7]
 a4(r143): [6..7]
 a5(r142): [8..11]
 a6(r245): [8..9]
 a7(r244): [10..11]
 a8(r141): [12..13]
 a9(r243): [14..15]
 a10(r139): [16..19]
 a11(r140): [16..17]
 a12(r242): [18..19]
 a13(r138): [20..21]
 a14(r241): [22..23]
 a15(r137): [24..25]
 a16(r133): [36..37]
 a17(r135): [26..31]
 a18(r136): [26..27]
 a19(r239): [28..29]
 a20(r240): [30..31]
 a21(r134): [32..33]
 a22(r238): [34..35]
 a23(r132): [38..39]
 a24(r237): [40..41]
 a25(r131): [44..45]
 a26(r236): [44..45]
 a27(r130): [46..47]
 a28(r235): [48..49]
 a29(r126): [60..61]
 a30(r128): [50..55]
 a31(r129): [50..51]
 a32(r233): [52..53]
 a33(r234): [54..55]
 a34(r127): [56..57]
 a35(r232): [58..59]
 a36(r231): [62..63]
 a37(r125): [62..63]
 a38(r124): [62..63]
 a39(r123): [64..65]
 a40(r230): [64..65]
 a41(r122): [66..67]
 a42(r229): [68..69]
 a43(r228): [70..71]
 a44(r120): [72..73]
 a45(r227): [72..73]
 a46(r121): [72..73]
 a47(r119): [74..75]
 a48(r226): [76..77]
 a49(r225): [78..79]
 a50(r224): [80..81]
 a51(r118): [80..81]
 a52(r117): [82..83]
 a53(r116): [84..85]
 a54(r115): [86..87]
 a55(r113): [86..89]
 a56(r114): [88..89]
 a57(r112): [90..91]
 a58(r110): [90..93]
 a59(r111): [92..93]
 a60(r109): [94..95]
 a61(r108): [96..97]
 a62(r223): [98..99]
 a63(r107): [98..99]
 a64(r106): [100..101]
 a65(r105): [102..103]
 a66(r104): [104..105]
 a67(r222): [106..107]
 a68(r221): [108..109]
 a69(r220): [110..111]
 a70(r103): [110..111]
 a71(r219): [112..113]
 a72(r102): [112..113]
 a73(r217): [114..115]
 a74(r218): [114..115]
 a75(r101): [116..117]
 a76(r216): [118..119]
 a77(r100): [118..119]
 a78(r99): [120..121]
 a79(r215): [122..123]
 a80(r214): [124..125]
 a81(r98): [126..127]
 a82(r97): [128..129]
 a83(r96): [130..131]
 a84(r213): [130..131]
 a85(r95): [132..133]
 a86(r212): [134..135]
 a87(r94): [136..137]
 a88(r211): [136..137]
 a89(r93): [138..139]
 a90(r210): [140..141]
 a91(r208): [142..143]
 a92(r209): [142..143]
 a93(r207): [152..153]
 a94(r206): [144..145]
 a95(r92): [146..147]
 a96(r205): [146..147]
 a97(r204): [146..147]
 a98(r203): [146..147]
 a99(r91): [148..149]
 a100(r202): [150..151]
 a101(r201): [154..155]
 a102(r90): [160..161]
 a103(r200): [162..163]
 a104(r89): [164..165]
 a105(r199): [164..165]
 a106(r198): [164..165]
 a107(r197): [164..165]
 a108(r88): [166..167]
 a109(r196): [168..169]
 a110(r195): [170..171]
 a111(r194): [156..157]
 a112(r193): [158..159]
 a113(r192): [180..181]
 a114(r191): [172..173]
 a115(r87): [174..175]
 a116(r190): [174..175]
 a117(r189): [174..175]
 a118(r188): [174..175]
 a119(r86): [176..177]
 a120(r187): [178..179]
 a121(r85): [182..183]
 a122(r186): [184..185]
 a123(r84): [186..187]
 a124(r185): [186..187]
 a125(r83): [188..189]
 a126(r184): [190..191]
 a127(r183): [192..193]
 a128(r182): [194..195]
 a129(r82): [196..197]
 a130(r81): [198..199]
 a131(r181): [200..201]
 a132(r80): [202..203]
 a133(r180): [204..205]
 a134(r178): [206..207]
 a135(r179): [206..207]
 a136(r177): [208..209]
 a137(r79): [210..211]
 a138(r78): [212..213]
 a139(r176): [214..215]
 a140(r77): [216..217]
 a141(r175): [218..219]
 a142(r76): [218..219]
 a143(r75): [218..219]
 a144(r174): [220..221]
 a145(r74): [222..223]
 a146(r73): [224..225]
 a147(r71): [224..227]
 a148(r72): [226..227]
 a149(r70): [228..229]
 a150(r173): [248..249]
 a151(r172): [230..231]
 a152(r171): [230..231]
 a153(r170): [232..233]
 a154(r169): [252..253]
 a155(r168): [254..255]
 a156(r167): [234..235]
 a157(r166): [256..257]
 a158(r165): [258..259]
 a159(r164): [260..261]
 a160(r163): [236..237]
 a161(r69): [262..263]
 a162(r162): [264..265]
 a163(r161): [264..265]
 a164(r68): [250..251]
 a165(r67): [266..267]
 a166(r63): [268..269]
 a167(r66): [270..271]
 a168(r160): [272..273]
 a169(r65): [272..273]
 a170(r159): [272..273]
 a171(r64): [272..279]
 a172(r158): [274..275]
 a173(r157): [274..275]
 a174(r155): [276..277]
 a175(r156): [278..279]
 a176(r154): [280..281]
 a177(r151): [280..285]
 a178(r152): [282..283]
 a179(r153): [284..285]
 a180(r150): [238..239]
 a181(r62): [240..241]
 a182(r149): [242..243]
 a183(r61): [242..243]
 a184(r60): [244..245]
 a185(r148): [246..247]
 a186(r147): [286..287]
 a187(r146): [288..289]
  regions=1, blocks=85, points=290
    allocnos=188 (big 0), copies=0, conflicts=0, ranges=189
Disposition:
    1:r59  l0     0  184:r60  l0     0  183:r61  l0     1  181:r62  l0     0
  166:r63  l0     0  171:r64  l0     2  169:r65  l0     4  167:r66  l0     0
  165:r67  l0     0  164:r68  l0     0  161:r69  l0     0  149:r70  l0     0
  147:r71  l0     1  148:r72  l0     0  146:r73  l0     0  145:r74  l0     0
  143:r75  l0     1  142:r76  l0     2  140:r77  l0     0  138:r78  l0     0
  137:r79  l0     0  132:r80  l0     0  130:r81  l0     0  129:r82  l0     0
  125:r83  l0     0  123:r84  l0     1  121:r85  l0     0  119:r86  l0     0
  115:r87  l0    37  108:r88  l0     0  104:r89  l0    37  102:r90  l0     0
   99:r91  l0     0   95:r92  l0    37   89:r93  l0     0   87:r94  l0     1
   85:r95  l0     0   83:r96  l0     0   82:r97  l0     0   81:r98  l0     0
   78:r99  l0     0   77:r100 l0     1   75:r101 l0     0   72:r102 l0     1
   70:r103 l0     1   66:r104 l0     0   65:r105 l0     0   64:r106 l0     0
   63:r107 l0     1   61:r108 l0     0   60:r109 l0     0   58:r110 l0     1
   59:r111 l0     0   57:r112 l0     0   55:r113 l0     1   56:r114 l0     0
   54:r115 l0     0   53:r116 l0     0   52:r117 l0     0   51:r118 l0     1
   47:r119 l0     0   44:r120 l0     0   46:r121 l0     2   41:r122 l0     0
   39:r123 l0     0   38:r124 l0     2   37:r125 l0     1   29:r126 l0     0
   34:r127 l0     0   30:r128 l0     0   31:r129 l0     1   27:r130 l0     0
   25:r131 l0     1   23:r132 l0     0   16:r133 l0     0   21:r134 l0     0
   17:r135 l0     0   18:r136 l0     1   15:r137 l0     0   13:r138 l0     0
   10:r139 l0     0   11:r140 l0     1    8:r141 l0     0    5:r142 l0     1
    4:r143 l0     0    0:r144 l0     0  187:r146 l0     0  186:r147 l0     0
  185:r148 l0     0  182:r149 l0     0  180:r150 l0     0  177:r151 l0     0
  178:r152 l0     1  179:r153 l0     1  176:r154 l0     1  174:r155 l0     0
  175:r156 l0     0  173:r157 l0     1  172:r158 l0     0  170:r159 l0     1
  168:r160 l0     0  163:r161 l0     1  162:r162 l0     0  160:r163 l0     0
  159:r164 l0     0  158:r165 l0     0  157:r166 l0     0  156:r167 l0     0
  155:r168 l0     0  154:r169 l0     0  153:r170 l0     0  152:r171 l0     1
  151:r172 l0     0  150:r173 l0     0  144:r174 l0     0  141:r175 l0     0
  139:r176 l0     0  136:r177 l0     0  134:r178 l0     0  135:r179 l0     1
  133:r180 l0     0  131:r181 l0     0  128:r182 l0     0  127:r183 l0     0
  126:r184 l0     0  124:r185 l0     0  122:r186 l0     0  120:r187 l0     0
  118:r188 l0     2  117:r189 l0     1  116:r190 l0     0  114:r191 l0     0
  113:r192 l0     0  112:r193 l0     0  111:r194 l0     0  110:r195 l0     0
  109:r196 l0     0  107:r197 l0     2  106:r198 l0     1  105:r199 l0     0
  103:r200 l0     0  101:r201 l0     0  100:r202 l0     0   98:r203 l0     2
   97:r204 l0     1   96:r205 l0     0   94:r206 l0     0   93:r207 l0     0
   91:r208 l0     0   92:r209 l0     1   90:r210 l0     0   88:r211 l0     0
   86:r212 l0     0   84:r213 l0     1   80:r214 l0     0   79:r215 l0     0
   76:r216 l0     0   73:r217 l0     0   74:r218 l0     1   71:r219 l0     0
   69:r220 l0     0   68:r221 l0     0   67:r222 l0     0   62:r223 l0     0
   50:r224 l0     0   49:r225 l0     0   48:r226 l0     0   45:r227 l0     1
   43:r228 l0     0   42:r229 l0     0   40:r230 l0     1   36:r231 l0     0
   35:r232 l0     0   32:r233 l0     1   33:r234 l0     1   28:r235 l0     0
   26:r236 l0     0   24:r237 l0     0   22:r238 l0     0   19:r239 l0     1
   20:r240 l0     1   14:r241 l0     0   12:r242 l0     1    9:r243 l0     0
    7:r244 l0     0    6:r245 l0     0    3:r246 l0     1    2:r247 l0     0
+++Costs: overall -64, reg -64, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabConnect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={54d,29u} r1={51d,13u} r2={45d,7u} r4={61d,23u} r5={76d,38u} r6={1d,84u} r7={1d,122u} r8={38d} r9={38d} r10={38d} r11={38d} r12={38d} r13={38d} r14={38d} r15={38d} r16={1d,83u} r17={119d,43u} r18={38d} r19={38d} r20={1d,256u,1e} r21={39d} r22={39d} r23={39d} r24={39d} r25={39d} r26={39d} r27={39d} r28={39d} r29={38d} r30={38d} r31={38d} r32={38d} r33={38d} r34={38d} r35={38d} r36={38d} r37={39d,1u} r38={39d,1u} r39={38d} r40={38d} r45={38d} r46={38d} r47={38d} r48={38d} r49={38d} r50={38d} r51={38d} r52={38d} r59={2d,1u} r60={1d,1u} r61={1d,1u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} 
;;    total ref usage 2943{2053d,888u,2e} in 483{445 regular + 38 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 146 147
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [0 pAux+0 S8 A64])
        (reg:DI 4 si [ pAux ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pAux ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -404 [0xfffffffffffffe6c])) [0 argc+0 S4 A32])
        (reg:SI 1 dx [ argc ])) ./ext/misc/csv.c:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ argc ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 argv+0 S8 A64])
        (reg:DI 2 cx [ argv ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ argv ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [0 ppVtab+0 S8 A64])
        (reg:DI 37 r8 [ ppVtab ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ppVtab ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 pzErr+0 S8 A64])
        (reg:DI 38 r9 [ pzErr ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ pzErr ])
        (nil)))
(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 8 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6640+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:492 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 10 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:493 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:494 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:495 89 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
        (const_int -99 [0xffffffffffffff9d])) ./ext/misc/csv.c:501 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:514 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (const_int 264 [0x108])) ./ext/misc/csv.c:514 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:514 89 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 146)) ./ext/misc/csv.c:514 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:514 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:515 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) ./ext/misc/csv.c:515 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:515 89 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 147)) ./ext/misc/csv.c:515 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:515 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 27 26 655 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
        (const_int 3 [0x3])) ./ext/misc/csv.c:516 89 {*movsi_internal}
     (nil))
(jump_insn 655 27 656 2 (set (pc)
        (label_ref 168)) ./ext/misc/csv.c:516 650 {jump}
     (nil)
 -> 168)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 656 655 170)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 148 149 150
(code_label 170 656 30 3 106 "" [1 uses])
(note 30 170 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:517 89 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 60 [ D.6620 ])
        (sign_extend:DI (reg:SI 148))) ./ext/misc/csv.c:517 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 61 [ D.6620 ])
                (ashift:DI (reg:DI 60 [ D.6620 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:517 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 60 [ D.6620 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 3 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -416 [0xfffffffffffffe60])) [0 argv+0 S8 A64])) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (parallel [
            (set (reg/f:DI 62 [ D.6621 ])
                (plus:DI (reg:DI 61 [ D.6620 ])
                    (reg/f:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:517 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (expr_list:REG_DEAD (reg:DI 61 [ D.6620 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -416 [0xfffffffffffffe60])) [0 argv+0 S8 A64])
                        (reg:DI 61 [ D.6620 ]))
                    (nil))))))
(insn 36 35 37 3 (set (reg/f:DI 150)
        (mem/f:DI (reg/f:DI 62 [ D.6621 ]) [0 *_33+0 S8 A64])) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62 [ D.6621 ])
        (nil)))
(insn 37 36 38 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 z+0 S8 A64])
        (reg/f:DI 150)) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (nil)))
(insn 38 37 657 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:519 89 {*movsi_internal}
     (nil))
(jump_insn 657 38 658 3 (set (pc)
        (label_ref 68)) ./ext/misc/csv.c:519 650 {jump}
     (nil)
 -> 68)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 658 657 71)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 66 151 152 153 154 155 156 157 158 159 160
(code_label 71 658 41 4 98 "" [1 uses])
(note 41 71 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 43 42 44 4 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 152)
        (sign_extend:DI (reg:SI 153))) ./ext/misc/csv.c:520 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 154)
                (ashift:DI (reg:DI 152)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 64 [ D.6622 ])
                (plus:DI (reg:DI 151)
                    (reg:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154)
        (expr_list:REG_DEAD (reg:DI 151)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 47 46 48 4 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:DI 155)
        (sign_extend:DI (reg:SI 156))) ./ext/misc/csv.c:520 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 157)
                (ashift:DI (reg:DI 155)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 155)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 4 (set (reg:DI 158)
        (symbol_ref:DI ("azParam.5697") [flags 0x2]  <var_decl 0x7fbdb43fb000 azParam>)) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 65 [ D.6623 ])
        (mem/f/j:DI (plus:DI (reg:DI 157)
                (reg:DI 158)) [0 azParam S8 A64])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 158)
        (expr_list:REG_DEAD (reg:DI 157)
            (nil))))
(insn 52 51 53 4 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 4 (set (reg:DI 2 cx)
        (reg/f:DI 64 [ D.6622 ])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6622 ])
        (nil)))
(insn 55 54 56 4 (set (reg:DI 1 dx)
        (reg:DI 159)) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(insn 56 55 57 4 (set (reg:DI 4 si)
        (reg/f:DI 65 [ D.6623 ])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6623 ])
        (nil)))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (reg:DI 160)) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 58 57 59 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_string_parameter") [flags 0x3]  <function_decl 0x7fbdb43eca00 csv_string_parameter>) [0 csv_string_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:520 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 59 58 60 4 (set (reg:SI 66 [ D.6619 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 60 59 61 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 66 [ D.6619 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:520 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 66 [ D.6619 ])
        (nil)))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) ./ext/misc/csv.c:520 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 65)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 62 61 659 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 659 62 660 5 (set (pc)
        (label_ref 74)) ./ext/misc/csv.c:520 650 {jump}
     (nil)
 -> 74)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 660 659 65)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 65 660 66 6 96 "" [1 uses])
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:519 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63
(code_label 68 67 69 7 95 "" [1 uses])
(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 72 7 (set (reg:SI 63 [ j.19 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])) ./ext/misc/csv.c:519 89 {*movsi_internal}
     (nil))
(insn 72 70 73 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 63 [ j.19 ])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:519 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 63 [ j.19 ])
        (nil)))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) ./ext/misc/csv.c:519 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 71)
;;  succ:       4
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67
(code_label 74 73 75 8 97 "" [1 uses])
(note 75 74 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 8 (set (reg:SI 67 [ j.20 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -364 [0xfffffffffffffe94])) [0 j+0 S4 A32])) ./ext/misc/csv.c:522 89 {*movsi_internal}
     (nil))
(insn 77 76 78 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 67 [ j.20 ])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:522 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 67 [ j.20 ])
        (nil)))
(jump_insn 78 77 79 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) ./ext/misc/csv.c:522 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 86)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (set (reg:QI 68 [ D.6624 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 sRdr.zErr+0 S1 A64])) ./ext/misc/csv.c:523 91 {*movqi_internal}
     (nil))
(insn 81 80 82 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 68 [ D.6624 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:523 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 68 [ D.6624 ])
        (nil)))
(jump_insn 82 81 83 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) ./ext/misc/csv.c:523 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 165)
;;  succ:       10 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 83 82 661 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 661 83 662 10 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:523 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 662 661 86)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 69 161 162
(code_label 86 662 87 11 99 "" [1 uses])
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -380 [0xfffffffffffffe84])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:525 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 11 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:DI 2 cx)
        (reg:DI 161)) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 161)
        (nil)))
(insn 91 90 92 11 (set (reg:DI 1 dx)
        (reg:DI 162)) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(insn 92 91 93 11 (set (reg:SI 4 si)
        (const_int 6 [0x6])) ./ext/misc/csv.c:525 89 {*movsi_internal}
     (nil))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fbdb4535be0 *.LC17>)) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (nil))
(call_insn 94 93 95 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_boolean_parameter") [flags 0x3]  <function_decl 0x7fbdb43ece00 csv_boolean_parameter>) [0 csv_boolean_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:525 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 95 94 96 11 (set (reg:SI 69 [ D.6619 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:525 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 96 95 97 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ D.6619 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:525 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 69 [ D.6619 ])
        (nil)))
(jump_insn 97 96 98 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) ./ext/misc/csv.c:525 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 115)
;;  succ:       12 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:526 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 100 99 101 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) ./ext/misc/csv.c:526 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 109)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163
(note 101 100 102 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 13 (parallel [
            (set (reg:DI 163)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:527 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 103 102 104 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fbdb4535c78 *.LC18>)) ./ext/misc/csv.c:527 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 13 (set (reg:DI 5 di)
        (reg:DI 163)) ./ext/misc/csv.c:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 163)
        (nil)))
(insn 105 104 106 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:527 91 {*movqi_internal}
     (nil))
(call_insn 106 105 663 13 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:527 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 663 106 664 13 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:528 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 664 663 109)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 164
(code_label 109 664 110 14 103 "" [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -380 [0xfffffffffffffe84])) [0 b+0 S4 A32])) ./ext/misc/csv.c:530 89 {*movsi_internal}
     (nil))
(insn 112 111 665 14 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
        (reg:SI 164)) ./ext/misc/csv.c:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(jump_insn 665 112 666 14 (set (pc)
        (label_ref 165)) 650 {jump}
     (nil)
 -> 165)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 666 665 115)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 165 166
(code_label 115 666 116 15 102 "" [1 uses])
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (nil))
(insn 118 117 119 15 (set (reg:DI 1 dx)
        (reg:DI 165)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 165)
        (nil)))
(insn 119 118 120 15 (set (reg:SI 4 si)
        (const_int 7 [0x7])) ./ext/misc/csv.c:537 89 {*movsi_internal}
     (nil))
(insn 120 119 121 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fbdb4535d10 *.LC19>)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (nil))
(call_insn 121 120 122 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_parameter") [flags 0x3]  <function_decl 0x7fbdb43ec800 csv_parameter>) [0 csv_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:537 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 122 121 123 15 (set (reg:DI 166)
        (reg:DI 0 ax)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 123 122 124 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -328 [0xfffffffffffffeb8])) [0 zValue+0 S8 A64])
        (reg:DI 166)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(insn 124 123 125 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -328 [0xfffffffffffffeb8])) [0 zValue+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:537 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 125 124 126 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) ./ext/misc/csv.c:537 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 154)
;;  succ:       16 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 126 125 127 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:538 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 128 127 129 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ./ext/misc/csv.c:538 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 137)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 167
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:539 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fbdb4535da8 *.LC20>)) ./ext/misc/csv.c:539 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 17 (set (reg:DI 5 di)
        (reg:DI 167)) ./ext/misc/csv.c:539 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 167)
        (nil)))
(insn 133 132 134 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:539 91 {*movqi_internal}
     (nil))
(call_insn 134 133 667 17 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:539 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 667 134 668 17 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:540 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 668 667 137)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 168 169
(code_label 137 668 138 18 105 "" [1 uses])
(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -328 [0xfffffffffffffeb8])) [0 zValue+0 S8 A64])) ./ext/misc/csv.c:542 87 {*movdi_internal_rex64}
     (nil))
(insn 140 139 141 18 (set (reg:DI 5 di)
        (reg:DI 168)) ./ext/misc/csv.c:542 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(call_insn/i 141 140 142 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fbdb4720000 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:542 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 142 141 143 18 (set (reg:SI 169)
        (reg:SI 0 ax)) ./ext/misc/csv.c:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 143 142 144 18 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
        (reg:SI 169)) ./ext/misc/csv.c:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 144 143 145 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:543 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 145 144 146 18 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) ./ext/misc/csv.c:543 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 165)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 170
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 19 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:544 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 147 149 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fbdb4535e40 *.LC21>)) ./ext/misc/csv.c:544 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 19 (set (reg:DI 5 di)
        (reg:DI 170)) ./ext/misc/csv.c:544 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(insn 150 149 151 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:544 91 {*movqi_internal}
     (nil))
(call_insn 151 150 669 19 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:544 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 669 151 670 19 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:545 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 670 669 154)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 171 172
(code_label 154 670 155 20 104 "" [1 uses])
(note 155 154 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 20 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:549 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 158 157 159 20 (set (reg:DI 1 dx)
        (reg:DI 171)) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(insn 159 158 160 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fbdb4535ed8 *.LC22>)) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 20 (set (reg:DI 5 di)
        (reg:DI 172)) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(insn 161 160 162 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:549 91 {*movqi_internal}
     (nil))
(call_insn 162 161 671 20 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:549 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 671 162 672 20 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:550 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 672 671 165)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              18
;;              14 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 165 672 166 21 100 "" [3 uses])
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:516 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       22 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173
(code_label 168 167 169 22 94 "" [1 uses])
(note 169 168 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 171 169 172 22 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:516 89 {*movsi_internal}
     (nil))
(insn 172 171 173 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 173)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -404 [0xfffffffffffffe6c])) [0 argc+0 S4 A32]))) ./ext/misc/csv.c:516 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
(jump_insn 173 172 174 22 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) ./ext/misc/csv.c:516 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 170)
;;  succ:       3
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72 73 74
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 23 (set (reg/f:DI 70 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:553 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 70 [ D.6625 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6625 ])
        (nil)))
(insn 177 176 178 23 (set (reg:QI 71 [ D.6626 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ./ext/misc/csv.c:553 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 178 177 179 23 (set (reg/f:DI 72 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -296 [0xfffffffffffffed8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:553 87 {*movdi_internal_rex64}
     (nil))
(insn 179 178 180 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 72 [ D.6625 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.6625 ])
        (nil)))
(insn 180 179 181 23 (set (reg:QI 73 [ D.6626 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ./ext/misc/csv.c:553 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 181 180 182 23 (parallel [
            (set (reg:QI 74 [ D.6626 ])
                (xor:QI (reg:QI 71 [ D.6626 ])
                    (reg:QI 73 [ D.6626 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:553 417 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 73 [ D.6626 ])
        (expr_list:REG_DEAD (reg:QI 71 [ D.6626 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 182 181 183 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 74 [ D.6626 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 74 [ D.6626 ])
        (nil)))
(jump_insn 183 182 184 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) ./ext/misc/csv.c:553 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 192)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 174
(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 24 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:554 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 186 185 187 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fbdb453e000 *.LC23>)) ./ext/misc/csv.c:554 87 {*movdi_internal_rex64}
     (nil))
(insn 187 186 188 24 (set (reg:DI 5 di)
        (reg:DI 174)) ./ext/misc/csv.c:554 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(insn 188 187 189 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:554 91 {*movqi_internal}
     (nil))
(call_insn 189 188 673 24 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:554 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 673 189 674 24 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:555 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 674 673 192)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 192 674 193 25 107 "" [1 uses])
(note 193 192 194 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 25 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:558 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 195 194 196 25 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) ./ext/misc/csv.c:558 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 199)
;;  succ:       27
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 196 195 197 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:558 7 {*cmpsi_1}
     (nil))
(jump_insn 198 197 199 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) ./ext/misc/csv.c:558 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 214)
;;  succ:       27 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 76 77 175
(code_label 199 198 200 27 108 "" [1 uses])
(note 200 199 201 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 27 (set (reg/f:DI 75 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -296 [0xfffffffffffffed8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 27 (set (reg/f:DI 76 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 27 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:559 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 204 203 205 27 (set (reg:DI 1 dx)
        (reg/f:DI 75 [ D.6625 ])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75 [ D.6625 ])
        (nil)))
(insn 205 204 206 27 (set (reg:DI 4 si)
        (reg/f:DI 76 [ D.6625 ])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.6625 ])
        (nil)))
(insn 206 205 207 27 (set (reg:DI 5 di)
        (reg:DI 175)) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(call_insn 207 206 208 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_reader_open") [flags 0x3]  <function_decl 0x7fbdb47d2500 csv_reader_open>) [0 csv_reader_open S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:559 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 208 207 209 27 (set (reg:SI 77 [ D.6619 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:559 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 209 208 210 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ D.6619 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:559 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 77 [ D.6619 ])
        (nil)))
(jump_insn 210 209 211 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) ./ext/misc/csv.c:559 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 214)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 211 210 675 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 675 211 676 28 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:561 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 676 675 214)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 176 177 178 179
(code_label 214 676 215 29 109 "" [2 uses])
(note 215 214 216 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 29 (set (reg/f:DI 176)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (nil))
(insn 217 216 218 29 (set (reg/f:DI 78 [ sqlite3_api.21 ])
        (mem/f/c:DI (reg/f:DI 176) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (nil)))
(insn 218 217 219 29 (set (reg/f:DI 79 [ D.6627 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78 [ sqlite3_api.21 ])
                (const_int 544 [0x220])) [0 sqlite3_api.21_56->malloc+0 S8 A64])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ sqlite3_api.21 ])
        (nil)))
(insn 219 218 220 29 (set (reg:SI 5 di)
        (const_int 56 [0x38])) ./ext/misc/csv.c:563 89 {*movsi_internal}
     (nil))
(call_insn 220 219 221 29 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 79 [ D.6627 ]) [0 *_57 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:563 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 79 [ D.6627 ])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 221 220 222 29 (set (reg:DI 177)
        (reg:DI 0 ax)) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])
        (reg:DI 177)) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
(insn 223 222 224 29 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -424 [0xfffffffffffffe58])) [0 ppVtab+0 S8 A64])) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 29 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 29 (set (mem/f:DI (reg/f:DI 178) [0 *ppVtab_59(D)+0 S8 A64])
        (reg/f:DI 179)) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_DEAD (reg/f:DI 178)
            (nil))))
(insn 226 225 227 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:565 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 227 226 228 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) ./ext/misc/csv.c:565 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 231)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 228 227 677 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 677 228 678 30 (set (pc)
        (label_ref 560)) ./ext/misc/csv.c:565 650 {jump}
     (nil)
 -> 560)
;;  succ:       71 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 678 677 231)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 80 180
(code_label 231 678 232 31 110 "" [1 uses])
(note 232 231 233 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 31 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (nil))
(insn 234 233 235 31 (set (reg:DI 1 dx)
        (const_int 56 [0x38])) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (nil))
(insn 235 234 236 31 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:566 89 {*movsi_internal}
     (nil))
(insn 236 235 237 31 (set (reg:DI 5 di)
        (reg:DI 180)) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 180)
        (nil)))
(call_insn 237 236 238 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:566 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 238 237 239 31 (set (reg/f:DI 80 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:567 87 {*movdi_internal_rex64}
     (nil))
(insn 239 238 240 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 80 [ D.6625 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:567 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 80 [ D.6625 ])
        (nil)))
(jump_insn 240 239 241 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 419)
            (pc))) ./ext/misc/csv.c:567 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 419)
;;  succ:       32 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 83 84 181 182 183 184 185
(note 241 240 242 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 32 (set (reg/f:DI 181)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (nil))
(insn 243 242 244 32 (set (reg/f:DI 81 [ sqlite3_api.22 ])
        (mem/f/c:DI (reg/f:DI 181) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 181)
        (nil)))
(insn 244 243 245 32 (set (reg/f:DI 82 [ D.6628 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 81 [ sqlite3_api.22 ])
                (const_int 1824 [0x720])) [0 sqlite3_api.22_61->str_new+0 S8 A64])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81 [ sqlite3_api.22 ])
        (nil)))
(insn 245 244 246 32 (set (reg:DI 5 di)
        (const_int 0 [0])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (nil))
(call_insn 246 245 247 32 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 82 [ D.6628 ]) [0 *_62 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:568 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 82 [ D.6628 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 247 246 248 32 (set (reg:DI 182)
        (reg:DI 0 ax)) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 248 247 249 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])
        (reg:DI 182)) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(insn 249 248 250 32 (set (reg/f:DI 183)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fbdb453e098 *.LC24>)) ./ext/misc/csv.c:569 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])
        (reg/f:DI 183)) ./ext/misc/csv.c:569 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (nil)))
(insn 251 250 252 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:570 89 {*movsi_internal}
     (nil))
(insn 252 251 253 32 (set (reg/f:DI 184)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 253 252 254 32 (set (reg/f:DI 83 [ sqlite3_api.23 ])
        (mem/f/c:DI (reg/f:DI 184) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 184)
        (nil)))
(insn 254 253 255 32 (set (reg/f:DI 84 [ D.6629 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 83 [ sqlite3_api.23 ])
                (const_int 1840 [0x730])) [0 sqlite3_api.23_66->str_appendf+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83 [ sqlite3_api.23 ])
        (nil)))
(insn 255 254 256 32 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 256 255 257 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fbdb453e130 *.LC25>)) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 257 256 258 32 (set (reg:DI 5 di)
        (reg:DI 185)) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(insn 258 257 259 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:571 91 {*movqi_internal}
     (nil))
(call_insn 259 258 260 32 (call (mem:QI (reg/f:DI 84 [ D.6629 ]) [0 *_67 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:571 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.6629 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 260 259 261 32 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:572 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 261 260 262 32 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ./ext/misc/csv.c:572 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 276)
;;  succ:       33 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 262 261 263 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 33 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:572 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 264 263 265 33 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ./ext/misc/csv.c:572 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 276)
;;  succ:       34 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 265 264 266 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 273 34 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:573 89 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              35 (DFS_BACK)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 186
(code_label 273 266 267 35 114 "" [1 uses])
(note 267 273 268 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 35 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:575 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 269 268 270 35 (set (reg:DI 5 di)
        (reg:DI 186)) ./ext/misc/csv.c:575 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(call_insn 270 269 271 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:575 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 271 270 272 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:576 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 272 271 274 35 (set (reg:SI 85 [ D.6619 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:577 89 {*movsi_internal}
     (nil))
(insn 274 272 275 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.6619 ])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:577 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ D.6619 ])
        (nil)))
(jump_insn 275 274 276 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:577 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 273)
;;  succ:       35 (DFS_BACK)
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;;              33
;;              35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 276 275 277 36 113 "" [2 uses])
(note 277 276 278 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:579 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 279 278 280 36 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 312)
;;  succ:       37 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 280 279 281 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 37 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:579 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 282 281 283 37 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 312)
;;  succ:       38 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 283 282 284 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 679 38 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:580 89 {*movsi_internal}
     (nil))
(jump_insn 679 284 680 38 (set (pc)
        (label_ref 303)) ./ext/misc/csv.c:580 650 {jump}
     (nil)
 -> 303)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 680 679 305)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 187 188 189 190 191
(code_label 305 680 287 39 117 "" [1 uses])
(note 287 305 288 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 39 (set (reg/f:DI 187)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 289 288 290 39 (set (reg/f:DI 86 [ sqlite3_api.24 ])
        (mem/f/c:DI (reg/f:DI 187) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 187)
        (nil)))
(insn 290 289 291 39 (set (reg/f:DI 87 [ D.6629 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 86 [ sqlite3_api.24 ])
                (const_int 1840 [0x730])) [0 sqlite3_api.24_72->str_appendf+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86 [ sqlite3_api.24 ])
        (nil)))
(insn 291 290 292 39 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:581 89 {*movsi_internal}
     (nil))
(insn 292 291 293 39 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 293 292 294 39 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 294 293 295 39 (set (reg:SI 2 cx)
        (reg:SI 188)) ./ext/misc/csv.c:581 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 188)
        (nil)))
(insn 295 294 296 39 (set (reg:DI 1 dx)
        (reg:DI 189)) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 296 295 297 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fbdb453e1c8 *.LC26>)) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 297 296 298 39 (set (reg:DI 5 di)
        (reg:DI 190)) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(insn 298 297 299 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:581 91 {*movqi_internal}
     (nil))
(call_insn 299 298 300 39 (call (mem:QI (reg/f:DI 87 [ D.6629 ]) [0 *_73 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:581 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6629 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 300 299 301 39 (set (reg/f:DI 191)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:582 87 {*movdi_internal_rex64}
     (nil))
(insn 301 300 302 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])
        (reg/f:DI 191)) ./ext/misc/csv.c:582 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (nil)))
(insn 302 301 303 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:580 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       40 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU,DFS_BACK)
;;              38 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 192
(code_label 303 302 304 40 116 "" [1 uses])
(note 304 303 306 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 306 304 307 40 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:580 89 {*movsi_internal}
     (nil))
(insn 307 306 308 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 192)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:580 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(jump_insn 308 307 309 40 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) ./ext/misc/csv.c:580 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 305)
;;  succ:       39
;;              41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 309 308 681 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn 681 309 682 41 (set (pc)
        (label_ref 388)) ./ext/misc/csv.c:579 650 {jump}
     (nil)
 -> 388)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 682 681 312)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;;              37
;;              47 (DFS_BACK)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 193 194
(code_label 312 682 313 42 115 "" [3 uses])
(note 313 312 314 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 42 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:586 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 315 314 316 42 (set (reg:DI 5 di)
        (reg:DI 193)) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn 316 315 317 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:586 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 317 316 318 42 (set (reg:DI 194)
        (reg:DI 0 ax)) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 318 317 319 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -312 [0xfffffffffffffec8])) [0 z+0 S8 A64])
        (reg:DI 194)) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(insn 319 318 320 42 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 320 319 321 42 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 325)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195
(note 321 320 322 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 43 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:587 89 {*movsi_internal}
     (nil))
(insn 323 322 324 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 195)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:587 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(jump_insn 324 323 325 43 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 332)
;;  succ:       46
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 325 324 326 44 119 "" [1 uses])
(note 326 325 327 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 44 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 328 327 329 44 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 349)
;;  succ:       45 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 329 328 330 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 331 330 332 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 349)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 89 196 197 198 199 200
(code_label 332 331 333 46 120 "" [1 uses])
(note 333 332 334 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 46 (set (reg/f:DI 196)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 335 334 336 46 (set (reg/f:DI 88 [ sqlite3_api.25 ])
        (mem/f/c:DI (reg/f:DI 196) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (nil)))
(insn 336 335 337 46 (set (reg/f:DI 89 [ D.6629 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 88 [ sqlite3_api.25 ])
                (const_int 1840 [0x730])) [0 sqlite3_api.25_77->str_appendf+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 88 [ sqlite3_api.25 ])
        (nil)))
(insn 337 336 338 46 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -312 [0xfffffffffffffec8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 338 337 339 46 (set (reg:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 339 338 340 46 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 340 339 341 46 (set (reg:DI 2 cx)
        (reg:DI 197)) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(insn 341 340 342 46 (set (reg:DI 1 dx)
        (reg:DI 198)) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(insn 342 341 343 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fbdb453e2f8 *.LC28>)) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 343 342 344 46 (set (reg:DI 5 di)
        (reg:DI 199)) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 344 343 345 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:588 91 {*movqi_internal}
     (nil))
(call_insn 345 344 346 46 (call (mem:QI (reg/f:DI 89 [ D.6629 ]) [0 *_78 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:588 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6629 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(insn 346 345 347 46 (set (reg/f:DI 200)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:589 87 {*movdi_internal_rex64}
     (nil))
(insn 347 346 348 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])
        (reg/f:DI 200)) ./ext/misc/csv.c:589 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (nil)))
(insn 348 347 349 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:590 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(code_label 349 348 350 47 121 "" [2 uses])
(note 350 349 351 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 47 (set (reg:SI 90 [ D.6619 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:592 89 {*movsi_internal}
     (nil))
(insn 352 351 353 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.6619 ])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:592 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6619 ])
        (nil)))
(jump_insn 353 352 354 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:592 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 312)
;;  succ:       42 (DFS_BACK)
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 354 353 355 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 48 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:593 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 356 355 357 48 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) ./ext/misc/csv.c:593 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 362)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 201
(note 357 356 358 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 49 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:594 89 {*movsi_internal}
     (nil))
(insn 359 358 683 49 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
        (reg:SI 201)) ./ext/misc/csv.c:594 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(jump_insn 683 359 684 49 (set (pc)
        (label_ref 388)) 650 {jump}
     (nil)
 -> 388)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 684 683 362)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 362 684 363 50 122 "" [1 uses])
(note 363 362 685 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 685 363 686 50 (set (pc)
        (label_ref 382)) ./ext/misc/csv.c:596 650 {jump}
     (nil)
 -> 382)
;;  succ:       52 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 686 685 384)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 202 203 204 205 206
(code_label 384 686 366 51 124 "" [1 uses])
(note 366 384 367 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 51 (set (reg/f:DI 202)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 368 367 369 51 (set (reg/f:DI 91 [ sqlite3_api.26 ])
        (mem/f/c:DI (reg/f:DI 202) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (nil)))
(insn 369 368 370 51 (set (reg/f:DI 92 [ D.6629 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 91 [ sqlite3_api.26 ])
                (const_int 1840 [0x730])) [0 sqlite3_api.26_83->str_appendf+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 91 [ sqlite3_api.26 ])
        (nil)))
(insn 370 369 371 51 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:597 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 371 370 372 51 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:597 89 {*movsi_internal}
     (nil))
(insn 372 371 373 51 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 373 372 374 51 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 374 373 375 51 (set (reg:SI 2 cx)
        (reg:SI 203)) ./ext/misc/csv.c:597 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(insn 375 374 376 51 (set (reg:DI 1 dx)
        (reg:DI 204)) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(insn 376 375 377 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fbdb453e1c8 *.LC26>)) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 377 376 378 51 (set (reg:DI 5 di)
        (reg:DI 205)) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 378 377 379 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:597 91 {*movqi_internal}
     (nil))
(call_insn 379 378 380 51 (call (mem:QI (reg/f:DI 92 [ D.6629 ]) [0 *_84 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:597 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6629 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 380 379 381 51 (set (reg/f:DI 206)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:598 87 {*movdi_internal_rex64}
     (nil))
(insn 381 380 382 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 zSep+0 S8 A64])
        (reg/f:DI 206)) ./ext/misc/csv.c:598 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (nil)))
;;  succ:       52 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU,DFS_BACK)
;;              50 [100.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207
(code_label 382 381 383 52 123 "" [1 uses])
(note 383 382 385 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 385 383 386 52 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -356 [0xfffffffffffffe9c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:596 89 {*movsi_internal}
     (nil))
(insn 386 385 387 52 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:596 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(jump_insn 387 386 388 52 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) ./ext/misc/csv.c:596 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 384)
;;  succ:       51
;;              53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;;              41 [100.0%] 
;;              49 [100.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 94 95 96 97 98 208 209 210 211 212 213
(code_label 388 387 389 53 118 "" [2 uses])
(note 389 388 390 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 53 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:602 87 {*movdi_internal_rex64}
     (nil))
(insn 391 390 392 53 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])) ./ext/misc/csv.c:602 89 {*movsi_internal}
     (nil))
(insn 392 391 393 53 (set (mem/j:SI (plus:DI (reg/f:DI 208)
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 209)) ./ext/misc/csv.c:602 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg/f:DI 208)
            (nil))))
(insn 393 392 394 53 (set (reg/f:DI 210)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 394 393 395 53 (set (reg/f:DI 93 [ sqlite3_api.27 ])
        (mem/f/c:DI (reg/f:DI 210) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (nil)))
(insn 395 394 396 53 (set (reg/f:DI 94 [ D.6629 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 93 [ sqlite3_api.27 ])
                (const_int 1840 [0x730])) [0 sqlite3_api.27_87->str_appendf+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93 [ sqlite3_api.27 ])
        (nil)))
(insn 396 395 397 53 (set (reg:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 397 396 398 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fbdb453e390 *.LC29>)) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 398 397 399 53 (set (reg:DI 5 di)
        (reg:DI 211)) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 399 398 400 53 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:603 91 {*movqi_internal}
     (nil))
(call_insn 400 399 401 53 (call (mem:QI (reg/f:DI 94 [ D.6629 ]) [0 *_88 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:603 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.6629 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 401 400 402 53 (set (reg/f:DI 212)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (nil))
(insn 402 401 403 53 (set (reg/f:DI 95 [ sqlite3_api.28 ])
        (mem/f/c:DI (reg/f:DI 212) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (nil)))
(insn 403 402 404 53 (set (reg/f:DI 96 [ D.6630 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95 [ sqlite3_api.28 ])
                (const_int 1832 [0x728])) [0 sqlite3_api.28_89->str_finish+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 95 [ sqlite3_api.28 ])
        (nil)))
(insn 404 403 405 53 (set (reg:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -320 [0xfffffffffffffec0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (nil))
(insn 405 404 406 53 (set (reg:DI 5 di)
        (reg:DI 213)) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 213)
        (nil)))
(call_insn 406 405 407 53 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ D.6630 ]) [0 *_90 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:604 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.6630 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 407 406 408 53 (set (reg/f:DI 97 [ D.6625 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 408 407 409 53 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 azPValue+16 S8 A64])
        (reg/f:DI 97 [ D.6625 ])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6625 ])
        (nil)))
(insn 409 408 410 53 (set (reg/f:DI 98 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:605 87 {*movdi_internal_rex64}
     (nil))
(insn 410 409 411 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.6625 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:605 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.6625 ])
        (nil)))
(jump_insn 411 410 412 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) ./ext/misc/csv.c:605 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 415)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 412 411 687 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 687 412 688 54 (set (pc)
        (label_ref 560)) ./ext/misc/csv.c:605 650 {jump}
     (nil)
 -> 560)
;;  succ:       71 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 688 687 415)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 415 688 416 55 125 "" [1 uses])
(note 416 415 689 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 689 416 690 55 (set (pc)
        (label_ref 444)) 650 {jump}
     (nil)
 -> 444)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 690 689 419)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 419 690 420 56 112 "" [1 uses])
(note 420 419 421 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 56 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:606 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 422 421 433 56 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) ./ext/misc/csv.c:606 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 439)
;;  succ:       57 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              57 (DFS_BACK)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 99 100 101 214 215 216
(code_label 433 422 423 57 128 "" [1 uses])
(note 423 433 424 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 57 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:608 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 425 424 426 57 (set (reg:DI 5 di)
        (reg:DI 214)) ./ext/misc/csv.c:608 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(call_insn 426 425 427 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:608 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 427 426 428 57 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:609 87 {*movdi_internal_rex64}
     (nil))
(insn 428 427 429 57 (set (reg:SI 99 [ D.6619 ])
        (mem/j:SI (plus:DI (reg/f:DI 215)
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])) ./ext/misc/csv.c:609 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (nil)))
(insn 429 428 430 57 (parallel [
            (set (reg:SI 100 [ D.6619 ])
                (plus:SI (reg:SI 99 [ D.6619 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:609 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6619 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 430 429 431 57 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:609 87 {*movdi_internal_rex64}
     (nil))
(insn 431 430 432 57 (set (mem/j:SI (plus:DI (reg/f:DI 216)
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 100 [ D.6619 ])) ./ext/misc/csv.c:609 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (expr_list:REG_DEAD (reg:SI 100 [ D.6619 ])
            (nil))))
(insn 432 431 434 57 (set (reg:SI 101 [ D.6619 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:610 89 {*movsi_internal}
     (nil))
(insn 434 432 435 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.6619 ])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:610 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.6619 ])
        (nil)))
(jump_insn 435 434 691 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) ./ext/misc/csv.c:610 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 433)
;;  succ:       57 (DFS_BACK)
;;              58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 691 435 692 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(jump_insn 692 691 693 58 (set (pc)
        (label_ref 444)) 650 {jump}
     (nil)
 -> 444)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 693 692 439)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 217 218
(code_label 439 693 440 59 127 "" [1 uses])
(note 440 439 441 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 59 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:612 87 {*movdi_internal_rex64}
     (nil))
(insn 442 441 443 59 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 nCol+0 S4 A32])) ./ext/misc/csv.c:612 89 {*movsi_internal}
     (nil))
(insn 443 442 444 59 (set (mem/j:SI (plus:DI (reg/f:DI 217)
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 218)) ./ext/misc/csv.c:612 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg/f:DI 217)
            (nil))))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 [100.0%] 
;;              59 (FALLTHRU)
;;              58 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 103 219 220
(code_label 444 443 445 60 126 "" [2 uses])
(note 445 444 446 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 60 (set (reg/f:DI 102 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 447 446 448 60 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 448 447 449 60 (set (mem/f/j:DI (plus:DI (reg/f:DI 219)
                (const_int 24 [0x18])) [0 pNew_58->zFilename+0 S8 A64])
        (reg/f:DI 102 [ D.6625 ])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 219)
        (expr_list:REG_DEAD (reg/f:DI 102 [ D.6625 ])
            (nil))))
(insn 449 448 450 60 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 450 449 451 60 (set (reg/f:DI 103 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -296 [0xfffffffffffffed8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 451 450 452 60 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 452 451 453 60 (set (mem/f/j:DI (plus:DI (reg/f:DI 220)
                (const_int 32 [0x20])) [0 pNew_58->zData+0 S8 A64])
        (reg/f:DI 103 [ D.6625 ])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg/f:DI 103 [ D.6625 ])
            (nil))))
(insn 453 452 454 60 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -296 [0xfffffffffffffed8])) [0 azPValue+8 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 454 453 455 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -376 [0xfffffffffffffe88])) [0 bHeader+0 S4 A32])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:619 7 {*cmpsi_1}
     (nil))
(jump_insn 455 454 456 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 461)
            (pc))) ./ext/misc/csv.c:619 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 461)
;;  succ:       61 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 221
(note 456 455 457 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 61 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:620 87 {*movdi_internal_rex64}
     (nil))
(insn 458 457 694 61 (set (mem/j:DI (plus:DI (reg/f:DI 221)
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (nil)))
(jump_insn 694 458 695 61 (set (pc)
        (label_ref 492)) 650 {jump}
     (nil)
 -> 492)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 695 694 461)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 222
(code_label 461 695 462 62 129 "" [1 uses])
(note 462 461 463 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 62 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:621 87 {*movdi_internal_rex64}
     (nil))
(insn 464 463 465 62 (set (reg/f:DI 104 [ D.6625 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 222)
                (const_int 32 [0x20])) [0 pNew_58->zData+0 S8 A64])) ./ext/misc/csv.c:621 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (nil)))
(insn 465 464 466 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ D.6625 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:621 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.6625 ])
        (nil)))
(jump_insn 466 465 467 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) ./ext/misc/csv.c:621 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 475)
;;  succ:       63 (FALLTHRU)
;;              64
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106 107 223
(note 467 466 468 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 63 (set (reg:DI 105 [ D.6620 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 sRdr.iIn+0 S8 A64])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (nil))
(insn 469 468 470 63 (set (reg:SI 106 [ D.6619 ])
        (subreg:SI (reg:DI 105 [ D.6620 ]) 0)) ./ext/misc/csv.c:622 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6620 ])
        (nil)))
(insn 470 469 471 63 (set (reg:DI 107 [ D.6631 ])
        (sign_extend:DI (reg:SI 106 [ D.6619 ]))) ./ext/misc/csv.c:622 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106 [ D.6619 ])
        (nil)))
(insn 471 470 472 63 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (nil))
(insn 472 471 696 63 (set (mem/j:DI (plus:DI (reg/f:DI 223)
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (reg:DI 107 [ D.6631 ])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (expr_list:REG_DEAD (reg:DI 107 [ D.6631 ])
            (nil))))
(jump_insn 696 472 697 63 (set (pc)
        (label_ref 492)) 650 {jump}
     (nil)
 -> 492)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 697 696 475)
;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 108 109 110 111 112 113 114 115 116 117 118 224
(code_label 475 697 476 64 131 "" [1 uses])
(note 476 475 477 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 64 (set (reg/f:DI 108 [ D.6632 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -272 [0xfffffffffffffef0])) [0 sRdr.in+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 478 477 479 64 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.6632 ])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.6632 ])
        (nil)))
(call_insn 479 478 480 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7fbdb47c5a00 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:624 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 480 479 481 64 (set (reg:DI 109 [ D.6631 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 481 480 482 64 (set (reg:SI 110 [ D.6633 ])
        (subreg:SI (reg:DI 109 [ D.6631 ]) 0)) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ D.6631 ])
        (nil)))
(insn 482 481 483 64 (set (reg:DI 111 [ D.6620 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 sRdr.nIn+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 483 482 484 64 (set (reg:SI 112 [ D.6633 ])
        (subreg:SI (reg:DI 111 [ D.6620 ]) 0)) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ D.6620 ])
        (nil)))
(insn 484 483 485 64 (parallel [
            (set (reg:SI 113 [ D.6633 ])
                (minus:SI (reg:SI 110 [ D.6633 ])
                    (reg:SI 112 [ D.6633 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:624 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.6633 ])
        (expr_list:REG_DEAD (reg:SI 110 [ D.6633 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 485 484 486 64 (set (reg:DI 114 [ D.6620 ])
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 sRdr.iIn+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 486 485 487 64 (set (reg:SI 115 [ D.6633 ])
        (subreg:SI (reg:DI 114 [ D.6620 ]) 0)) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 114 [ D.6620 ])
        (nil)))
(insn 487 486 488 64 (parallel [
            (set (reg:SI 116 [ D.6633 ])
                (plus:SI (reg:SI 113 [ D.6633 ])
                    (reg:SI 115 [ D.6633 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:624 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ D.6633 ])
        (expr_list:REG_DEAD (reg:SI 113 [ D.6633 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 488 487 489 64 (set (reg:SI 117 [ D.6619 ])
        (reg:SI 116 [ D.6633 ])) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116 [ D.6633 ])
        (nil)))
(insn 489 488 490 64 (set (reg:DI 118 [ D.6631 ])
        (sign_extend:DI (reg:SI 117 [ D.6619 ]))) ./ext/misc/csv.c:624 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 117 [ D.6619 ])
        (nil)))
(insn 490 489 491 64 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 491 490 492 64 (set (mem/j:DI (plus:DI (reg/f:DI 224)
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (reg:DI 118 [ D.6631 ])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (expr_list:REG_DEAD (reg:DI 118 [ D.6631 ])
            (nil))))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;;              61 [100.0%] 
;;              63 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 119 120 121 225 226 227 228
(code_label 492 491 493 65 130 "" [2 uses])
(note 493 492 494 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 65 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:626 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 495 494 496 65 (set (reg:DI 5 di)
        (reg:DI 225)) ./ext/misc/csv.c:626 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(call_insn 496 495 497 65 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:626 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 497 496 498 65 (set (reg/f:DI 226)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 498 497 499 65 (set (reg/f:DI 119 [ sqlite3_api.29 ])
        (mem/f/c:DI (reg/f:DI 226) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (nil)))
(insn 499 498 500 65 (set (reg/f:DI 120 [ D.6634 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 119 [ sqlite3_api.29 ])
                (const_int 400 [0x190])) [0 sqlite3_api.29_113->declare_vtab+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 119 [ sqlite3_api.29 ])
        (nil)))
(insn 500 499 501 65 (set (reg/f:DI 121 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 501 500 502 65 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [0 db+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 502 501 503 65 (set (reg:DI 4 si)
        (reg/f:DI 121 [ D.6625 ])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121 [ D.6625 ])
        (nil)))
(insn 503 502 504 65 (set (reg:DI 5 di)
        (reg:DI 227)) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 227)
        (nil)))
(call_insn 504 503 505 65 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 120 [ D.6634 ]) [0 *_114 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:627 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.6634 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 505 504 506 65 (set (reg:SI 228)
        (reg:SI 0 ax)) ./ext/misc/csv.c:627 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 506 505 507 65 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
        (reg:SI 228)) ./ext/misc/csv.c:627 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228)
        (nil)))
(insn 507 506 508 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:628 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 508 507 509 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) ./ext/misc/csv.c:628 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 527)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 122 123 124 125 229 230 231
(note 509 508 510 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 66 (set (reg/f:DI 229)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 511 510 512 66 (set (reg/f:DI 122 [ sqlite3_api.30 ])
        (mem/f/c:DI (reg/f:DI 229) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 229)
        (nil)))
(insn 512 511 513 66 (set (reg/f:DI 123 [ D.6635 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 122 [ sqlite3_api.30 ])
                (const_int 424 [0x1a8])) [0 sqlite3_api.30_118->errmsg+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 122 [ sqlite3_api.30 ])
        (nil)))
(insn 513 512 514 66 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [0 db+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 514 513 515 66 (set (reg:DI 5 di)
        (reg:DI 230)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(call_insn 515 514 516 66 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 123 [ D.6635 ]) [0 *_119 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:629 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.6635 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 516 515 517 66 (set (reg/f:DI 124 [ D.6623 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 517 516 518 66 (set (reg/f:DI 125 [ D.6625 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -288 [0xfffffffffffffee0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 518 517 519 66 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:629 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 519 518 520 66 (set (reg:DI 2 cx)
        (reg/f:DI 124 [ D.6623 ])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 124 [ D.6623 ])
        (nil)))
(insn 520 519 521 66 (set (reg:DI 1 dx)
        (reg/f:DI 125 [ D.6625 ])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.6625 ])
        (nil)))
(insn 521 520 522 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fbdb453e428 *.LC30>)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 522 521 523 66 (set (reg:DI 5 di)
        (reg:DI 231)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 231)
        (nil)))
(insn 523 522 524 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:629 91 {*movqi_internal}
     (nil))
(call_insn 524 523 698 66 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:629 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 698 524 699 66 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:630 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 699 698 527)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 527 699 528 67 132 "" [1 uses])
(note 528 527 529 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 700 67 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:632 89 {*movsi_internal}
     (nil))
(jump_insn 700 529 701 67 (set (pc)
        (label_ref 542)) ./ext/misc/csv.c:632 650 {jump}
     (nil)
 -> 542)
;;  succ:       69 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 701 700 545)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 127 128 129 232 233 234
(code_label 545 701 532 68 134 "" [1 uses])
(note 532 545 533 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 68 (set (reg/f:DI 232)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (nil))
(insn 534 533 535 68 (set (reg/f:DI 127 [ sqlite3_api.31 ])
        (mem/f/c:DI (reg/f:DI 232) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (nil)))
(insn 535 534 536 68 (set (reg/f:DI 128 [ D.6636 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 127 [ sqlite3_api.31 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.31_124->free+0 S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127 [ sqlite3_api.31 ])
        (nil)))
(insn 536 535 537 68 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:633 89 {*movsi_internal}
     (nil))
(insn 537 536 538 68 (set (reg:DI 233)
        (sign_extend:DI (reg:SI 234))) ./ext/misc/csv.c:633 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 234)
        (nil)))
(insn 538 537 539 68 (set (reg/f:DI 129 [ D.6625 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 233)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 233)
        (nil)))
(insn 539 538 540 68 (set (reg:DI 5 di)
        (reg/f:DI 129 [ D.6625 ])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.6625 ])
        (nil)))
(call_insn 540 539 541 68 (call (mem:QI (reg/f:DI 128 [ D.6636 ]) [0 *_125 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:633 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.6636 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 541 540 542 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:632 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       69 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU,DFS_BACK)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126
(code_label 542 541 543 69 133 "" [1 uses])
(note 543 542 544 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 546 69 (set (reg:SI 126 [ i.32 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:632 89 {*movsi_internal}
     (nil))
(insn 546 544 547 69 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 126 [ i.32 ])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:632 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126 [ i.32 ])
        (nil)))
(jump_insn 547 546 548 69 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 545)
            (pc))) ./ext/misc/csv.c:632 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 545)
;;  succ:       68
;;              70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 130 131 235 236
(note 548 547 549 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 70 (set (reg/f:DI 235)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (nil))
(insn 550 549 551 70 (set (reg/f:DI 130 [ sqlite3_api.33 ])
        (mem/f/c:DI (reg/f:DI 235) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 235)
        (nil)))
(insn 551 550 552 70 (set (reg/f:DI 131 [ D.6637 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 130 [ sqlite3_api.33 ])
                (const_int 1416 [0x588])) [0 sqlite3_api.33_128->vtab_config+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 130 [ sqlite3_api.33 ])
        (nil)))
(insn 552 551 553 70 (set (reg:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [0 db+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (nil))
(insn 553 552 554 70 (set (reg:SI 4 si)
        (const_int 3 [0x3])) ./ext/misc/csv.c:643 89 {*movsi_internal}
     (nil))
(insn 554 553 555 70 (set (reg:DI 5 di)
        (reg:DI 236)) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 236)
        (nil)))
(insn 555 554 556 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:643 91 {*movqi_internal}
     (nil))
(call_insn 556 555 557 70 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 131 [ D.6637 ]) [0 *_129 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:643 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 131 [ D.6637 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 557 556 702 70 (set (reg:SI 59 [ D.6619 ])
        (const_int 0 [0])) ./ext/misc/csv.c:644 89 {*movsi_internal}
     (nil))
(jump_insn 702 557 703 70 (set (pc)
        (label_ref 635)) ./ext/misc/csv.c:644 650 {jump}
     (nil)
 -> 635)
;;  succ:       82 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 703 702 560)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%] 
;;              54 [100.0%] 
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 237
(code_label 560 703 561 71 111 ("csvtab_connect_oom") [2 uses])
(note 561 560 562 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 71 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
        (const_int 7 [0x7])) ./ext/misc/csv.c:647 89 {*movsi_internal}
     (nil))
(insn 563 562 564 71 (parallel [
            (set (reg:DI 237)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:648 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 564 563 565 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:648 87 {*movdi_internal_rex64}
     (nil))
(insn 565 564 566 71 (set (reg:DI 5 di)
        (reg:DI 237)) ./ext/misc/csv.c:648 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 237)
        (nil)))
(insn 566 565 567 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:648 91 {*movqi_internal}
     (nil))
(call_insn 567 566 568 71 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:648 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              10 [100.0%] 
;;              13 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              20 [100.0%] 
;;              24 [100.0%] 
;;              28 [100.0%] 
;;              66 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 568 567 569 72 101 ("csvtab_connect_error") [8 uses])
(note 569 568 570 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:651 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 571 570 572 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 576)
            (pc))) ./ext/misc/csv.c:651 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 576)
;;  succ:       73 (FALLTHRU)
;;              74
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 132
(note 572 571 573 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 73 (set (reg/f:DI 132 [ D.6638 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:651 87 {*movdi_internal_rex64}
     (nil))
(insn 574 573 575 73 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.6638 ])) ./ext/misc/csv.c:651 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.6638 ])
        (nil)))
(call_insn 575 574 576 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabDisconnect") [flags 0x3]  <function_decl 0x7fbdb47df600 csvtabDisconnect>) [0 csvtabDisconnect S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:651 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;;              73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 576 575 577 74 136 "" [1 uses])
(note 577 576 578 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 704 74 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:652 89 {*movsi_internal}
     (nil))
(jump_insn 704 578 705 74 (set (pc)
        (label_ref 591)) ./ext/misc/csv.c:652 650 {jump}
     (nil)
 -> 591)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 705 704 594)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 134 135 136 238 239 240
(code_label 594 705 581 75 138 "" [1 uses])
(note 581 594 582 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 75 (set (reg/f:DI 238)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (nil))
(insn 583 582 584 75 (set (reg/f:DI 134 [ sqlite3_api.34 ])
        (mem/f/c:DI (reg/f:DI 238) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 238)
        (nil)))
(insn 584 583 585 75 (set (reg/f:DI 135 [ D.6636 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 134 [ sqlite3_api.34 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.34_135->free+0 S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 134 [ sqlite3_api.34 ])
        (nil)))
(insn 585 584 586 75 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:653 89 {*movsi_internal}
     (nil))
(insn 586 585 587 75 (set (reg:DI 239)
        (sign_extend:DI (reg:SI 240))) ./ext/misc/csv.c:653 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 587 586 588 75 (set (reg/f:DI 136 [ D.6625 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 239)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 239)
        (nil)))
(insn 588 587 589 75 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.6625 ])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 136 [ D.6625 ])
        (nil)))
(call_insn 589 588 590 75 (call (mem:QI (reg/f:DI 135 [ D.6636 ]) [0 *_136 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:653 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.6636 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 590 589 591 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:652 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       76 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU,DFS_BACK)
;;              74 [100.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133
(code_label 591 590 592 76 137 "" [1 uses])
(note 592 591 593 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 595 76 (set (reg:SI 133 [ i.35 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 i+0 S4 A32])) ./ext/misc/csv.c:652 89 {*movsi_internal}
     (nil))
(insn 595 593 596 76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 133 [ i.35 ])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:652 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 133 [ i.35 ])
        (nil)))
(jump_insn 596 595 597 76 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 594)
            (pc))) ./ext/misc/csv.c:652 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 594)
;;  succ:       75
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137
(note 597 596 598 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 77 (set (reg:QI 137 [ D.6624 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 sRdr.zErr+0 S1 A64])) ./ext/misc/csv.c:655 91 {*movqi_internal}
     (nil))
(insn 599 598 600 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.6624 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:655 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 137 [ D.6624 ])
        (nil)))
(jump_insn 600 599 601 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 621)
            (pc))) ./ext/misc/csv.c:655 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 621)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 138 139 140 141 142 143 241 242 243 244 245 246
(note 601 600 602 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 78 (set (reg/f:DI 241)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (nil))
(insn 603 602 604 78 (set (reg/f:DI 138 [ sqlite3_api.36 ])
        (mem/f/c:DI (reg/f:DI 241) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 241)
        (nil)))
(insn 604 603 605 78 (set (reg/f:DI 139 [ D.6636 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 138 [ sqlite3_api.36 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.36_140->free+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 138 [ sqlite3_api.36 ])
        (nil)))
(insn 605 604 606 78 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (nil))
(insn 606 605 607 78 (set (reg/f:DI 140 [ D.6625 ])
        (mem/f:DI (reg/f:DI 242) [0 *pzErr_142(D)+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (nil)))
(insn 607 606 608 78 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.6625 ])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140 [ D.6625 ])
        (nil)))
(call_insn 608 607 609 78 (call (mem:QI (reg/f:DI 139 [ D.6636 ]) [0 *_141 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:656 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.6636 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 609 608 610 78 (set (reg/f:DI 243)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 610 609 611 78 (set (reg/f:DI 141 [ sqlite3_api.37 ])
        (mem/f/c:DI (reg/f:DI 243) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 243)
        (nil)))
(insn 611 610 612 78 (set (reg/f:DI 142 [ D.6639 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 141 [ sqlite3_api.37 ])
                (const_int 552 [0x228])) [0 sqlite3_api.37_144->mprintf+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 141 [ sqlite3_api.37 ])
        (nil)))
(insn 612 611 613 78 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:657 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 613 612 614 78 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg:DI 244)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:657 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 244)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 614 613 615 78 (set (reg:DI 4 si)
        (reg:DI 245)) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(insn 615 614 616 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 616 615 617 78 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:657 91 {*movqi_internal}
     (nil))
(call_insn 617 616 618 78 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 142 [ D.6639 ]) [0 *_145 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:657 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 142 [ D.6639 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 618 617 619 78 (set (reg/f:DI 143 [ D.6625 ])
        (reg:DI 0 ax)) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 619 618 620 78 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -432 [0xfffffffffffffe50])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 620 619 621 78 (set (mem/f:DI (reg/f:DI 246) [0 *pzErr_142(D)+0 S8 A64])
        (reg/f:DI 143 [ D.6625 ])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg/f:DI 143 [ D.6625 ])
            (nil))))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77
;;              78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 247
(code_label 621 620 622 79 139 "" [1 uses])
(note 622 621 623 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 79 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:659 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 624 623 625 79 (set (reg:DI 5 di)
        (reg:DI 247)) ./ext/misc/csv.c:659 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 247)
        (nil)))
(call_insn 625 624 626 79 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:659 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 626 625 627 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:660 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 627 626 628 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) ./ext/misc/csv.c:660 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 630)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 628 627 629 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 630 80 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:660 89 {*movsi_internal}
     (nil))
;;  succ:       81 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 630 629 631 81 140 "" [1 uses])
(note 631 630 632 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 635 81 (set (reg:SI 59 [ D.6619 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [0 rc+0 S4 A32])) ./ext/misc/csv.c:661 89 {*movsi_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              70 [100.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 17 [flags] 144
(code_label 635 632 636 82 141 "" [1 uses])
(note 636 635 637 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 637 636 641 82 (set (reg:SI 144 [ <retval> ])
        (reg:SI 59 [ D.6619 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6619 ])
        (nil)))
(insn 641 637 645 82 (set (reg/i:SI 0 ax)
        (reg:SI 144 [ <retval> ])) ./ext/misc/csv.c:662 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144 [ <retval> ])
        (nil)))
(insn 645 641 646 82 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6640+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ./ext/misc/csv.c:662 970 {stack_tls_protect_test_di}
     (nil))
(jump_insn 646 645 653 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) ./ext/misc/csv.c:662 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 649)
;;  succ:       84
;;              83 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 653 646 647 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(call_insn 647 653 648 83 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fbdb4515b00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:662 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 648 647 649)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 649 648 654 84 142 "" [1 uses])
(note 654 649 650 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 650 654 0 84 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:662 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabCursorRowReset (csvtabCursorRowReset, funcdef_no=21, decl_uid=5733, cgraph_uid=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a2(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a10(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a18(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 39(l0): point = 1
   Insn 38(l0): point = 3
   Insn 37(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 34(l0): point = 11
   Insn 33(l0): point = 13
   Insn 32(l0): point = 15
   Insn 31(l0): point = 17
   Insn 30(l0): point = 19
   Insn 29(l0): point = 21
   Insn 28(l0): point = 23
   Insn 27(l0): point = 25
   Insn 26(l0): point = 27
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 23(l0): point = 33
   Insn 22(l0): point = 35
   Insn 21(l0): point = 37
   Insn 20(l0): point = 39
   Insn 19(l0): point = 41
   Insn 18(l0): point = 43
   Insn 17(l0): point = 45
   Insn 16(l0): point = 47
   Insn 15(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 43(l0): point = 60
   Insn 42(l0): point = 62
   Insn 50(l0): point = 65
   Insn 9(l0): point = 67
   Insn 8(l0): point = 69
   Insn 7(l0): point = 71
   Insn 6(l0): point = 73
   Insn 2(l0): point = 75
 a0(r59): [59..60]
 a1(r84): [61..62]
 a2(r74): [4..5]
 a3(r73): [6..7]
 a4(r71): [6..13]
 a5(r72): [8..9]
 a6(r83): [10..11]
 a7(r82): [14..15]
 a8(r70): [18..19]
 a9(r69): [20..21]
 a10(r67): [20..27]
 a11(r68): [22..23]
 a12(r81): [24..25]
 a13(r80): [28..29]
 a14(r61): [32..49]
 a15(r66): [34..35]
 a16(r65): [36..37]
 a17(r64): [38..39]
 a18(r62): [38..45]
 a19(r63): [40..41]
 a20(r79): [42..43]
 a21(r78): [46..47]
 a22(r60): [50..51]
 a23(r77): [52..53]
 a24(r76): [70..71]
 a25(r75): [72..73]
Compressing live ranges: from 78 to 44 - 56%
Ranges after the compression:
 a0(r59): [36..37]
 a1(r84): [38..39]
 a2(r74): [0..1]
 a3(r73): [2..3]
 a4(r71): [2..7]
 a5(r72): [4..5]
 a6(r83): [6..7]
 a7(r82): [8..9]
 a8(r70): [10..11]
 a9(r69): [12..13]
 a10(r67): [12..17]
 a11(r68): [14..15]
 a12(r81): [16..17]
 a13(r80): [18..19]
 a14(r61): [20..31]
 a15(r66): [20..21]
 a16(r65): [22..23]
 a17(r64): [24..25]
 a18(r62): [24..29]
 a19(r63): [26..27]
 a20(r79): [28..29]
 a21(r78): [30..31]
 a22(r60): [32..33]
 a23(r77): [34..35]
 a24(r76): [40..41]
 a25(r75): [42..43]
  regions=1, blocks=6, points=44
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
    0:r59  l0     0   22:r60  l0     0   14:r61  l0     0   18:r62  l0     1
   19:r63  l0     2   17:r64  l0     2   16:r65  l0     1   15:r66  l0     1
   10:r67  l0     0   11:r68  l0     1    9:r69  l0     1    8:r70  l0     0
    4:r71  l0     0    5:r72  l0     1    3:r73  l0     1    2:r74  l0     0
   25:r75  l0     0   24:r76  l0     0   23:r77  l0     0   21:r78  l0     1
   20:r79  l0     2   13:r80  l0     0   12:r81  l0     1    7:r82  l0     0
    6:r83  l0     1    1:r84  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabCursorRowReset

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={9d,1u} r18={1d} r19={1d} r20={1d,19u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 161{98d,63u,0e} in 37{36 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 75 76
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])
        (reg:DI 5 di [ pCur ])) ./ext/misc/csv.c:667 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pCur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 76)
        (mem/f/j:DI (reg/f:DI 75) [0 pCur_2(D)->base.pVtab+0 S8 A64])) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 76)) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 9 8 50 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:670 89 {*movsi_internal}
     (nil))
(jump_insn 50 9 51 2 (set (pc)
        (label_ref 40)) ./ext/misc/csv.c:670 650 {jump}
     (nil)
 -> 40)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 44)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 77 78 79 80 81 82 83
(code_label 44 51 12 3 145 "" [1 uses])
(note 12 44 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 77)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 60 [ sqlite3_api.38 ])
        (mem/f/c:DI (reg/f:DI 77) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 61 [ D.6658 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ sqlite3_api.38 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.38_6->free+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ sqlite3_api.38 ])
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg/f:DI 62 [ D.6659 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 272 [0x110])) [0 pCur_2(D)->azVal+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:671 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 63 [ D.6660 ])
        (sign_extend:DI (reg:SI 79))) ./ext/misc/csv.c:671 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 64 [ D.6660 ])
                (ashift:DI (reg:DI 63 [ D.6660 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:671 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.6660 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 65 [ D.6659 ])
                (plus:DI (reg/f:DI 62 [ D.6659 ])
                    (reg:DI 64 [ D.6660 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:671 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.6660 ])
        (expr_list:REG_DEAD (reg/f:DI 62 [ D.6659 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 22 21 23 3 (set (reg/f:DI 66 [ D.6661 ])
        (mem/f:DI (reg/f:DI 65 [ D.6659 ]) [0 *_11+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ D.6659 ])
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 66 [ D.6661 ])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6661 ])
        (nil)))
(call_insn 24 23 25 3 (call (mem:QI (reg/f:DI 61 [ D.6658 ]) [0 *_7 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:671 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6658 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 3 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg/f:DI 67 [ D.6659 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 80)
                (const_int 272 [0x110])) [0 pCur_2(D)->azVal+0 S8 A64])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))
(insn 27 26 28 3 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:672 89 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 68 [ D.6660 ])
        (sign_extend:DI (reg:SI 81))) ./ext/misc/csv.c:672 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 81)
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (reg:DI 69 [ D.6660 ])
                (ashift:DI (reg:DI 68 [ D.6660 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:672 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.6660 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 3 (parallel [
            (set (reg/f:DI 70 [ D.6659 ])
                (plus:DI (reg/f:DI 67 [ D.6659 ])
                    (reg:DI 69 [ D.6660 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:672 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.6660 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.6659 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 3 (set (mem/f:DI (reg/f:DI 70 [ D.6659 ]) [0 *_16+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6659 ])
        (nil)))
(insn 32 31 33 3 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:673 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 71 [ D.6662 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 82)
                (const_int 280 [0x118])) [0 pCur_2(D)->aLen+0 S8 A64])) ./ext/misc/csv.c:673 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (nil)))
(insn 34 33 35 3 (set (reg:SI 83)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:673 89 {*movsi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 72 [ D.6660 ])
        (sign_extend:DI (reg:SI 83))) ./ext/misc/csv.c:673 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 73 [ D.6660 ])
                (ashift:DI (reg:DI 72 [ D.6660 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:673 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 72 [ D.6660 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 3 (parallel [
            (set (reg/f:DI 74 [ D.6662 ])
                (plus:DI (reg/f:DI 71 [ D.6662 ])
                    (reg:DI 73 [ D.6660 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:673 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 73 [ D.6660 ])
        (expr_list:REG_DEAD (reg/f:DI 71 [ D.6662 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 3 (set (mem:SI (reg/f:DI 74 [ D.6662 ]) [0 *_20+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:673 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.6662 ])
        (nil)))
(insn 39 38 40 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:670 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 84
(code_label 40 39 41 4 144 "" [1 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:670 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 45 4 (set (reg:SI 59 [ D.6657 ])
        (mem/j:SI (plus:DI (reg/f:DI 84)
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:670 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 45 43 46 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.6657 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:670 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6657 ])
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) ./ext/misc/csv.c:670 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 47 46 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabCreate (csvtabCreate, funcdef_no=22, decl_uid=5578, cgraph_uid=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r65,l0) best SIREG, allocno GENERAL_REGS
    r64: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r64,l0) best DREG, allocno GENERAL_REGS
    r63: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r63,l0) best CREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best AREG, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r64,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r63,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 34(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 7(l0): point = 34
   Insn 6(l0): point = 36
   Insn 5(l0): point = 38
   Insn 4(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r60): [3..4]
 a1(r59): [5..6]
 a2(r66): [11..22]
 a3(r65): [13..24]
 a4(r64): [15..26]
 a5(r63): [17..28]
 a6(r62): [19..30]
 a7(r61): [21..32]
Compressing live ranges: from 47 to 6 - 12%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
 a2(r66): [4..5]
 a3(r65): [4..5]
 a4(r64): [4..5]
 a5(r63): [4..5]
 a6(r62): [4..5]
 a7(r61): [4..5]
  regions=1, blocks=3, points=6
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    1:r59  l0     0    0:r60  l0     0    7:r61  l0    37    6:r62  l0     5
    5:r63  l0     2    4:r64  l0     1    3:r65  l0     4    2:r66  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabCreate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,14u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,2u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} 
;;    total ref usage 121{78d,43u,0e} in 23{22 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pAux+0 S8 A64])
        (reg:DI 4 si [ pAux ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pAux ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])
        (reg:SI 1 dx [ argc ])) ./ext/misc/csv.c:687 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ argc ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])
        (reg:DI 2 cx [ argv ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ argv ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 ppVtab+0 S8 A64])
        (reg:DI 37 r8 [ ppVtab ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ppVtab ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzErr+0 S8 A64])
        (reg:DI 38 r9 [ pzErr ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ pzErr ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:DI 61)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 ppVtab+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:SI 64)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pAux+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 db+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 38 r9)
        (reg:DI 61)) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 61)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 37 r8)
        (reg:DI 62)) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 63)) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 63)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg:SI 64)) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 64)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 65)) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 66)) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabConnect") [flags 0x3]  <function_decl 0x7fbdb47df400 csvtabConnect>) [0 csvtabConnect S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:688 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(insn 24 23 27 2 (set (reg:SI 59 [ D.6663 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.6663 ])) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6663 ])
        (nil)))
(insn 31 27 34 2 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) ./ext/misc/csv.c:689 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ <retval> ])
        (nil)))
(insn 34 31 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:689 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabClose (csvtabClose, funcdef_no=23, decl_uid=5595, cgraph_uid=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r68: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r68,l0) best DIREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r63,l0) best AREG, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r59,l0) best DIREG, allocno GENERAL_REGS

  a0(r63,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 31(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 7(l0): point = 34
   Insn 6(l0): point = 36
   Insn 2(l0): point = 38
 a0(r63): [3..4]
 a1(r62): [5..6]
 a2(r61): [9..14]
 a3(r68): [11..12]
 a4(r60): [15..16]
 a5(r67): [17..18]
 a6(r59): [23..24]
 a7(r66): [25..26]
 a8(r65): [31..32]
 a9(r64): [35..36]
Compressing live ranges: from 41 to 18 - 43%
Ranges after the compression:
 a0(r63): [0..1]
 a1(r62): [2..3]
 a2(r61): [4..5]
 a3(r68): [4..5]
 a4(r60): [6..7]
 a5(r67): [8..9]
 a6(r59): [10..11]
 a7(r66): [12..13]
 a8(r65): [14..15]
 a9(r64): [16..17]
  regions=1, blocks=3, points=18
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    6:r59  l0     0    4:r60  l0     0    2:r61  l0     0    1:r62  l0     0
    0:r63  l0     0    9:r64  l0     0    8:r65  l0     0    7:r66  l0     0
    5:r67  l0     0    3:r68  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabClose

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={4d} r18={3d} r19={3d} r20={1d,8u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} 
;;    total ref usage 199{166d,32u,1e} in 20{17 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:694 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:695 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 64)) ./ext/misc/csv.c:695 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 65)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:696 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 65)) ./ext/misc/csv.c:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("csvtabCursorRowReset") [flags 0x3]  <function_decl 0x7fbdb43f9200 csvtabCursorRowReset>) [0 csvtabCursorRowReset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:696 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:697 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 59 [ D.6664 ])
                (plus:DI (reg/f:DI 66)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:697 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.6664 ])) ./ext/misc/csv.c:697 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6664 ])
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:697 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 67)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 60 [ sqlite3_api.39 ])
        (mem/f/c:DI (reg/f:DI 67) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 61 [ D.6665 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 60 [ sqlite3_api.39 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.39_4->free+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ sqlite3_api.39 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 68)) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (reg/f:DI 61 [ D.6665 ]) [0 *_5 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:698 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6665 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 20 24 2 (set (reg:SI 62 [ D.6666 ])
        (const_int 0 [0])) ./ext/misc/csv.c:699 89 {*movsi_internal}
     (nil))
(insn 24 21 28 2 (set (reg:SI 63 [ <retval> ])
        (reg:SI 62 [ D.6666 ])) ./ext/misc/csv.c:699 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ D.6666 ])
        (nil)))
(insn 28 24 31 2 (set (reg/i:SI 0 ax)
        (reg:SI 63 [ <retval> ])) ./ext/misc/csv.c:700 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 63 [ <retval> ])
        (nil)))
(insn 31 28 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:700 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabOpen (csvtabOpen, funcdef_no=24, decl_uid=5593, cgraph_uid=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 77.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r86,l0) best DREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r77,l0) best AREG, allocno GENERAL_REGS
    r76: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r76,l0) best SIREG, allocno GENERAL_REGS
    r75: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r75,l0) best AREG, allocno GENERAL_REGS
    r74: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r74,l0) best DIREG, allocno GENERAL_REGS
    r73: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r73,l0) best SIREG, allocno GENERAL_REGS
    r72: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r72,l0) best DREG, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r77,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:52 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:262140 FP_SECOND_SSE_REGS:262140 FLOAT_SSE_REGS:262140 FLOAT_INT_REGS:262140 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:262140 ALL_REGS:262140 MEM:15
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r75,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r72,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a15(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a17(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a20(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a24(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a25(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a26(r86,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a27(r85,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a30(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a33(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a35(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a36(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a37(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a39(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 93(l0): point = 0
   Insn 90(l0): point = 2
   Insn 86(l0): point = 4
   Insn 83(l0): point = 7
   Insn 98(l0): point = 10
   Insn 78(l0): point = 12
   Insn 77(l0): point = 14
   Insn 76(l0): point = 16
   Insn 75(l0): point = 18
   Insn 74(l0): point = 20
   Insn 73(l0): point = 22
   Insn 72(l0): point = 24
   Insn 70(l0): point = 27
   Insn 69(l0): point = 29
   Insn 68(l0): point = 31
   Insn 67(l0): point = 33
   Insn 66(l0): point = 35
   Insn 65(l0): point = 37
   Insn 64(l0): point = 39
   Insn 63(l0): point = 41
   Insn 62(l0): point = 43
   Insn 61(l0): point = 45
   Insn 60(l0): point = 47
   Insn 59(l0): point = 49
   Insn 58(l0): point = 51
   Insn 57(l0): point = 53
   Insn 56(l0): point = 55
   Insn 55(l0): point = 57
   Insn 54(l0): point = 59
   Insn 53(l0): point = 61
   Insn 52(l0): point = 63
   Insn 51(l0): point = 65
   Insn 50(l0): point = 67
   Insn 49(l0): point = 69
   Insn 48(l0): point = 71
   Insn 47(l0): point = 73
   Insn 46(l0): point = 75
   Insn 45(l0): point = 77
   Insn 44(l0): point = 79
   Insn 43(l0): point = 81
   Insn 42(l0): point = 83
   Insn 41(l0): point = 85
   Insn 40(l0): point = 87
   Insn 39(l0): point = 89
   Insn 38(l0): point = 91
   Insn 37(l0): point = 93
   Insn 36(l0): point = 95
   Insn 96(l0): point = 98
   Insn 31(l0): point = 100
   Insn 29(l0): point = 103
   Insn 28(l0): point = 105
   Insn 27(l0): point = 107
   Insn 26(l0): point = 109
   Insn 25(l0): point = 111
   Insn 24(l0): point = 113
   Insn 23(l0): point = 115
   Insn 22(l0): point = 117
   Insn 21(l0): point = 119
   Insn 20(l0): point = 121
   Insn 19(l0): point = 123
   Insn 18(l0): point = 125
   Insn 17(l0): point = 127
   Insn 16(l0): point = 129
   Insn 15(l0): point = 131
   Insn 14(l0): point = 133
   Insn 13(l0): point = 135
   Insn 12(l0): point = 137
   Insn 11(l0): point = 139
   Insn 10(l0): point = 141
   Insn 9(l0): point = 143
   Insn 8(l0): point = 145
   Insn 7(l0): point = 147
   Insn 3(l0): point = 149
   Insn 2(l0): point = 151
 a0(r77): [3..4]
 a1(r59): [98..100] [10..12] [5..7]
 a2(r98): [17..20]
 a3(r76): [19..22]
 a4(r97): [23..24]
 a5(r75): [30..31]
 a6(r74): [36..41]
 a7(r73): [38..45]
 a8(r72): [40..49]
 a9(r96): [42..43]
 a10(r95): [46..47]
 a11(r94): [50..51]
 a12(r93): [54..55]
 a13(r71): [54..57]
 a14(r92): [60..61]
 a15(r70): [60..63]
 a16(r69): [64..65]
 a17(r66): [64..73]
 a18(r68): [66..67]
 a19(r67): [68..69]
 a20(r91): [70..71]
 a21(r90): [74..75]
 a22(r89): [78..79]
 a23(r65): [78..81]
 a24(r88): [82..83]
 a25(r87): [88..93]
 a26(r86): [92..95]
 a27(r85): [108..109]
 a28(r64): [112..117]
 a29(r84): [114..115]
 a30(r63): [118..119]
 a31(r83): [120..121]
 a32(r82): [124..125]
 a33(r62): [126..127]
 a34(r80): [132..137] [128..129]
 a35(r81): [130..131]
 a36(r61): [134..139]
 a37(r60): [140..141]
 a38(r79): [142..143]
 a39(r78): [146..147]
Compressing live ranges: from 154 to 66 - 42%
Ranges after the compression:
 a0(r77): [0..1]
 a1(r59): [40..41] [2..5]
 a2(r98): [6..7]
 a3(r76): [6..7]
 a4(r97): [8..9]
 a5(r75): [10..11]
 a6(r74): [12..13]
 a7(r73): [12..15]
 a8(r72): [12..17]
 a9(r96): [14..15]
 a10(r95): [16..17]
 a11(r94): [18..19]
 a12(r93): [20..21]
 a13(r71): [20..21]
 a14(r92): [22..23]
 a15(r70): [22..23]
 a16(r69): [24..25]
 a17(r66): [24..31]
 a18(r68): [26..27]
 a19(r67): [28..29]
 a20(r91): [30..31]
 a21(r90): [32..33]
 a22(r89): [34..35]
 a23(r65): [34..35]
 a24(r88): [36..37]
 a25(r87): [38..39]
 a26(r86): [38..39]
 a27(r85): [42..43]
 a28(r64): [44..45]
 a29(r84): [44..45]
 a30(r63): [46..47]
 a31(r83): [48..49]
 a32(r82): [50..51]
 a33(r62): [52..53]
 a34(r80): [58..59] [54..55]
 a35(r81): [56..57]
 a36(r61): [58..59]
 a37(r60): [60..61]
 a38(r79): [62..63]
 a39(r78): [64..65]
  regions=1, blocks=8, points=66
    allocnos=40 (big 0), copies=0, conflicts=0, ranges=42
Disposition:
    1:r59  l0     0   37:r60  l0     0   36:r61  l0     1   33:r62  l0     0
   30:r63  l0     0   28:r64  l0     0   23:r65  l0     1   17:r66  l0     1
   19:r67  l0     0   18:r68  l0     0   16:r69  l0     0   15:r70  l0     1
   13:r71  l0     1    8:r72  l0     1    7:r73  l0     0    6:r74  l0     2
    5:r75  l0     0    3:r76  l0     1    0:r77  l0     0   39:r78  l0     0
   38:r79  l0     0   34:r80  l0     0   35:r81  l0     0   32:r82  l0     0
   31:r83  l0     0   29:r84  l0     1   27:r85  l0     0   26:r86  l0     1
   25:r87  l0     0   24:r88  l0     0   22:r89  l0     0   21:r90  l0     0
   20:r91  l0     0   14:r92  l0     0   12:r93  l0     0   11:r94  l0     0
   10:r95  l0     0    9:r96  l0     2    4:r97  l0     0    2:r98  l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabOpen

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={7d,2u} r2={5d} r4={8d,4u} r5={9d,5u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={15d,2u} r18={4d} r19={4d} r20={1d,30u,3e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r59={3d,1u} r60={1d,1u} r61={1d,2u,1e} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={4d,4u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 380{261d,115u,4e} in 74{70 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 78 79 80 81 82 83 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 ppCursor+0 S8 A64])
        (reg:DI 4 si [ ppCursor ])) ./ext/misc/csv.c:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ ppCursor ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:706 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])
        (reg/f:DI 78)) ./ext/misc/csv.c:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:SI 60 [ D.6667 ])
        (mem/j:SI (plus:DI (reg/f:DI 79)
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:709 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 61 [ D.6668 ])
        (sign_extend:DI (reg:SI 60 [ D.6667 ]))) ./ext/misc/csv.c:709 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6667 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 80)
        (reg:DI 61 [ D.6668 ])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 80)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 80)
                (plus:DI (reg:DI 80)
                    (reg:DI 61 [ D.6668 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.6668 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 61 [ D.6668 ])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 81)
                (ashift:DI (reg:DI 80)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 80)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 80)
        (reg:DI 81)) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 81)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 62 [ D.6668 ])
        (reg:DI 80)) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 80)
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg:DI 62 [ D.6668 ])
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.6668 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])
        (reg:DI 82)) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 83)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 63 [ sqlite3_api.40 ])
        (mem/f/c:DI (reg/f:DI 83) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 64 [ D.6669 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 63 [ sqlite3_api.40 ])
                (const_int 1576 [0x628])) [0 sqlite3_api.40_8->malloc64+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ sqlite3_api.40 ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 84)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 84)) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 64 [ D.6669 ]) [0 *_9 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:710 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6669 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg:DI 85)
        (reg:DI 0 ax)) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg:DI 85)) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:711 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ./ext/misc/csv.c:711 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 96 3 (set (reg:SI 59 [ D.6667 ])
        (const_int 7 [0x7])) ./ext/misc/csv.c:711 89 {*movsi_internal}
     (nil))
(jump_insn 96 31 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:711 650 {jump}
     (nil)
 -> 84)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 72 73 74 75 86 87 88 89 90 91 92 93 94 95 96
(code_label 34 97 35 4 151 "" [1 uses])
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:DI 86)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 4 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 4 (set (reg:DI 1 dx)
        (reg:DI 86)) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 39 38 40 4 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:712 89 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 87)) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 41 40 42 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:712 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 42 41 43 4 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg/f:DI 65 [ D.6670 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:713 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 296 [0x128]))
                (nil)))))
(insn 44 43 45 4 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 89)
                (const_int 272 [0x110])) [0 pCur_10->azVal+0 S8 A64])
        (reg/f:DI 65 [ D.6670 ])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 65 [ D.6670 ])
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 66 [ D.6670 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 90)
                (const_int 272 [0x110])) [0 pCur_10->azVal+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 48 47 49 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 4 (set (reg:SI 67 [ D.6667 ])
        (mem/j:SI (plus:DI (reg/f:DI 91)
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:714 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 50 49 51 4 (set (reg:DI 68 [ D.6668 ])
        (sign_extend:DI (reg:SI 67 [ D.6667 ]))) ./ext/misc/csv.c:714 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6667 ])
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 69 [ D.6668 ])
                (ashift:DI (reg:DI 68 [ D.6668 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:714 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.6668 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 4 (parallel [
            (set (reg/f:DI 70 [ D.6671 ])
                (plus:DI (reg/f:DI 66 [ D.6670 ])
                    (reg:DI 69 [ D.6668 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:714 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.6668 ])
        (expr_list:REG_DEAD (reg/f:DI 66 [ D.6670 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 53 52 54 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 92)
                (const_int 280 [0x118])) [0 pCur_10->aLen+0 S8 A64])
        (reg/f:DI 70 [ D.6671 ])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 70 [ D.6671 ])
            (nil))))
(insn 55 54 56 4 (set (reg/f:DI 71 [ D.6672 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 ppCursor+0 S8 A64])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 4 (set (mem/f:DI (reg/f:DI 93) [0 *ppCursor_19(D)+0 S8 A64])
        (reg/f:DI 71 [ D.6672 ])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_DEAD (reg/f:DI 71 [ D.6672 ])
            (nil))))
(insn 58 57 59 4 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 4 (set (reg/f:DI 72 [ D.6673 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 94)
                (const_int 32 [0x20])) [0 pTab_3->zData+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 60 59 61 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 4 (set (reg/f:DI 73 [ D.6673 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 95)
                (const_int 24 [0x18])) [0 pTab_3->zFilename+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 62 61 63 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 4 (parallel [
            (set (reg/f:DI 74 [ D.6674 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:716 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 64 63 65 4 (set (reg:DI 1 dx)
        (reg/f:DI 72 [ D.6673 ])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72 [ D.6673 ])
        (nil)))
(insn 65 64 66 4 (set (reg:DI 4 si)
        (reg/f:DI 73 [ D.6673 ])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73 [ D.6673 ])
        (nil)))
(insn 66 65 67 4 (set (reg:DI 5 di)
        (reg/f:DI 74 [ D.6674 ])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74 [ D.6674 ])
        (nil)))
(call_insn 67 66 68 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_reader_open") [flags 0x3]  <function_decl 0x7fbdb47d2500 csv_reader_open>) [0 csv_reader_open S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:716 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 4 (set (reg:SI 75 [ D.6667 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:716 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 69 68 70 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 75 [ D.6667 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:716 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 75 [ D.6667 ])
        (nil)))
(jump_insn 70 69 71 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:716 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 81)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 76 97 98
(note 71 70 72 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 5 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 5 (parallel [
            (set (reg/f:DI 76 [ D.6674 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:717 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 74 73 75 5 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 5 (set (reg:DI 4 si)
        (reg/f:DI 76 [ D.6674 ])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.6674 ])
        (nil)))
(insn 76 75 77 5 (set (reg:DI 5 di)
        (reg:DI 98)) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 77 76 78 5 (call (mem:QI (symbol_ref:DI ("csv_xfer_error") [flags 0x3]  <function_decl 0x7fbdb47dfe00 csv_xfer_error>) [0 csv_xfer_error S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:717 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 78 77 98 5 (set (reg:SI 59 [ D.6667 ])
        (const_int 1 [0x1])) ./ext/misc/csv.c:718 89 {*movsi_internal}
     (nil))
(jump_insn 98 78 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:718 650 {jump}
     (nil)
 -> 84)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 81)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 81 99 82 6 153 "" [1 uses])
(note 82 81 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 6 (set (reg:SI 59 [ D.6667 ])
        (const_int 0 [0])) ./ext/misc/csv.c:720 89 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 77
(code_label 84 83 85 7 152 "" [2 uses])
(note 85 84 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 7 (set (reg:SI 77 [ <retval> ])
        (reg:SI 59 [ D.6667 ])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6667 ])
        (nil)))
(insn 90 86 93 7 (set (reg/i:SI 0 ax)
        (reg:SI 77 [ <retval> ])) ./ext/misc/csv.c:721 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 77 [ <retval> ])
        (nil)))
(insn 93 90 0 7 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:721 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabNext (csvtabNext, funcdef_no=25, decl_uid=5603, cgraph_uid=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 28 count 20 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 167.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r147,l0) best SIREG, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r79,l0) best SIREG, allocno GENERAL_REGS
    r78: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r78,l0) best DIREG, allocno GENERAL_REGS
    r77: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r77,l0) best DIREG, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r72,l0) best SIREG, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r59,l0) best DIREG, allocno GENERAL_REGS

  a0(r120,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a6(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a12(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a20(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a26(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a28(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a30(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a31(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a32(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a33(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a34(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a35(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a36(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a37(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a38(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a39(r92,l0) costs: AREG:0 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a40(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a41(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a42(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a43(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a44(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a45(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a46(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a47(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a48(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a49(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a50(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a51(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a52(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a53(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a54(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a55(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a56(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a57(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a58(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a59(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a60(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a61(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a62(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a63(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a64(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a65(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a66(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a67(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a68(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a69(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a70(r134,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a71(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a72(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a73(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a74(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a75(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a76(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a77(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a78(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a79(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a80(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a81(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a82(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a83(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a84(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a85(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a86(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a87(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a88(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a89(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a90(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a91(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a92(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a93(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a94(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a95(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a96(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a97(r125,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a98(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a99(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a100(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a101(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a102(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 202(l0): point = 0
   Insn 199(l0): point = 2
   Insn 195(l0): point = 4
   Insn 192(l0): point = 6
   Insn 182(l0): point = 9
   Insn 181(l0): point = 11
   Insn 180(l0): point = 13
   Insn 179(l0): point = 15
   Insn 178(l0): point = 17
   Insn 177(l0): point = 19
   Insn 176(l0): point = 21
   Insn 175(l0): point = 23
   Insn 174(l0): point = 25
   Insn 173(l0): point = 27
   Insn 172(l0): point = 29
   Insn 171(l0): point = 31
   Insn 170(l0): point = 33
   Insn 169(l0): point = 35
   Insn 168(l0): point = 37
   Insn 167(l0): point = 39
   Insn 166(l0): point = 41
   Insn 165(l0): point = 43
   Insn 164(l0): point = 45
   Insn 163(l0): point = 47
   Insn 162(l0): point = 49
   Insn 161(l0): point = 51
   Insn 160(l0): point = 53
   Insn 159(l0): point = 55
   Insn 158(l0): point = 57
   Insn 157(l0): point = 59
   Insn 156(l0): point = 61
   Insn 189(l0): point = 64
   Insn 188(l0): point = 66
   Insn 186(l0): point = 68
   Insn 185(l0): point = 70
   Insn 211(l0): point = 73
   Insn 152(l0): point = 75
   Insn 151(l0): point = 77
   Insn 150(l0): point = 79
   Insn 149(l0): point = 81
   Insn 148(l0): point = 83
   Insn 209(l0): point = 86
   Insn 143(l0): point = 88
   Insn 142(l0): point = 90
   Insn 139(l0): point = 93
   Insn 138(l0): point = 95
   Insn 137(l0): point = 97
   Insn 136(l0): point = 99
   Insn 134(l0): point = 102
   Insn 133(l0): point = 104
   Insn 132(l0): point = 106
   Insn 131(l0): point = 108
   Insn 129(l0): point = 111
   Insn 128(l0): point = 113
   Insn 207(l0): point = 116
   Insn 77(l0): point = 118
   Insn 76(l0): point = 120
   Insn 75(l0): point = 122
   Insn 74(l0): point = 124
   Insn 73(l0): point = 126
   Insn 72(l0): point = 128
   Insn 71(l0): point = 130
   Insn 70(l0): point = 132
   Insn 69(l0): point = 134
   Insn 68(l0): point = 136
   Insn 67(l0): point = 138
   Insn 66(l0): point = 140
   Insn 205(l0): point = 143
   Insn 20(l0): point = 146
   Insn 19(l0): point = 148
   Insn 18(l0): point = 150
   Insn 17(l0): point = 152
   Insn 16(l0): point = 154
   Insn 15(l0): point = 156
   Insn 14(l0): point = 158
   Insn 13(l0): point = 160
   Insn 125(l0): point = 163
   Insn 124(l0): point = 165
   Insn 122(l0): point = 167
   Insn 121(l0): point = 169
   Insn 29(l0): point = 172
   Insn 28(l0): point = 174
   Insn 27(l0): point = 176
   Insn 26(l0): point = 178
   Insn 118(l0): point = 181
   Insn 117(l0): point = 183
   Insn 116(l0): point = 185
   Insn 115(l0): point = 187
   Insn 114(l0): point = 189
   Insn 113(l0): point = 191
   Insn 112(l0): point = 193
   Insn 111(l0): point = 195
   Insn 110(l0): point = 197
   Insn 109(l0): point = 199
   Insn 108(l0): point = 201
   Insn 107(l0): point = 203
   Insn 106(l0): point = 205
   Insn 105(l0): point = 207
   Insn 104(l0): point = 209
   Insn 103(l0): point = 211
   Insn 102(l0): point = 213
   Insn 42(l0): point = 216
   Insn 41(l0): point = 218
   Insn 40(l0): point = 220
   Insn 39(l0): point = 222
   Insn 38(l0): point = 224
   Insn 37(l0): point = 226
   Insn 36(l0): point = 228
   Insn 35(l0): point = 230
   Insn 34(l0): point = 232
   Insn 33(l0): point = 234
   Insn 32(l0): point = 236
   Insn 31(l0): point = 238
   Insn 99(l0): point = 241
   Insn 98(l0): point = 243
   Insn 97(l0): point = 245
   Insn 96(l0): point = 247
   Insn 95(l0): point = 249
   Insn 94(l0): point = 251
   Insn 93(l0): point = 253
   Insn 92(l0): point = 255
   Insn 91(l0): point = 257
   Insn 90(l0): point = 259
   Insn 89(l0): point = 261
   Insn 88(l0): point = 263
   Insn 87(l0): point = 265
   Insn 86(l0): point = 267
   Insn 85(l0): point = 269
   Insn 84(l0): point = 271
   Insn 83(l0): point = 273
   Insn 82(l0): point = 275
   Insn 64(l0): point = 278
   Insn 63(l0): point = 280
   Insn 62(l0): point = 282
   Insn 61(l0): point = 284
   Insn 60(l0): point = 286
   Insn 59(l0): point = 288
   Insn 58(l0): point = 290
   Insn 57(l0): point = 292
   Insn 56(l0): point = 294
   Insn 55(l0): point = 296
   Insn 54(l0): point = 298
   Insn 53(l0): point = 300
   Insn 52(l0): point = 302
   Insn 51(l0): point = 304
   Insn 50(l0): point = 306
   Insn 49(l0): point = 308
   Insn 48(l0): point = 310
   Insn 47(l0): point = 312
   Insn 46(l0): point = 314
   Insn 45(l0): point = 316
   Insn 44(l0): point = 318
   Insn 11(l0): point = 321
   Insn 10(l0): point = 323
   Insn 9(l0): point = 325
   Insn 8(l0): point = 327
   Insn 7(l0): point = 329
   Insn 6(l0): point = 331
   Insn 2(l0): point = 333
 a0(r120): [3..4]
 a1(r119): [5..6]
 a2(r103): [67..68]
 a3(r161): [69..70]
 a4(r118): [12..13]
 a5(r117): [14..15]
 a6(r115): [14..21]
 a7(r116): [16..17]
 a8(r160): [18..19]
 a9(r159): [22..23]
 a10(r114): [26..27]
 a11(r113): [28..29]
 a12(r111): [28..35]
 a13(r112): [30..31]
 a14(r158): [32..33]
 a15(r157): [36..37]
 a16(r105): [40..57]
 a17(r110): [42..43]
 a18(r109): [44..45]
 a19(r108): [46..47]
 a20(r106): [46..53]
 a21(r107): [48..49]
 a22(r156): [50..51]
 a23(r155): [54..55]
 a24(r104): [58..59]
 a25(r154): [60..61]
 a26(r153): [76..77]
 a27(r102): [76..79]
 a28(r101): [80..81]
 a29(r152): [82..83]
 a30(r151): [89..90]
 a31(r100): [96..97]
 a32(r150): [98..99]
 a33(r99): [105..106]
 a34(r149): [107..108]
 a35(r98): [166..167]
 a36(r148): [168..169]
 a37(r97): [186..193]
 a38(r147): [188..191]
 a39(r92): [190..207]
 a40(r96): [194..195]
 a41(r95): [196..197]
 a42(r93): [196..203]
 a43(r94): [198..199]
 a44(r146): [200..201]
 a45(r145): [204..205]
 a46(r91): [208..209]
 a47(r90): [210..211]
 a48(r144): [212..213]
 a49(r87): [242..249]
 a50(r89): [242..243]
 a51(r88): [244..245]
 a52(r143): [246..247]
 a53(r86): [250..251]
 a54(r84): [250..257]
 a55(r85): [252..253]
 a56(r142): [254..255]
 a57(r141): [258..259]
 a58(r83): [262..265]
 a59(r140): [262..263]
 a60(r82): [266..267]
 a61(r80): [266..273]
 a62(r81): [268..269]
 a63(r139): [270..271]
 a64(r138): [274..275]
 a65(r137): [121..124]
 a66(r79): [123..126]
 a67(r136): [127..128]
 a68(r78): [135..138]
 a69(r135): [139..140]
 a70(r134): [283..284]
 a71(r69): [287..314]
 a72(r77): [289..292]
 a73(r72): [291..306]
 a74(r76): [293..294]
 a75(r75): [295..296]
 a76(r73): [295..302]
 a77(r74): [297..298]
 a78(r133): [299..300]
 a79(r132): [303..304]
 a80(r71): [307..308]
 a81(r70): [309..310]
 a82(r131): [311..312]
 a83(r68): [315..316]
 a84(r130): [317..318]
 a85(r67): [219..220]
 a86(r65): [219..226]
 a87(r66): [221..222]
 a88(r129): [223..224]
 a89(r64): [227..228]
 a90(r63): [229..230]
 a91(r61): [229..236]
 a92(r62): [231..232]
 a93(r128): [233..234]
 a94(r127): [237..238]
 a95(r60): [175..176]
 a96(r126): [177..178]
 a97(r125): [151..152]
 a98(r59): [157..158]
 a99(r124): [159..160]
 a100(r123): [324..325]
 a101(r122): [326..327]
 a102(r121): [330..331]
Compressing live ranges: from 336 to 170 - 50%
Ranges after the compression:
 a0(r120): [0..1]
 a1(r119): [2..3]
 a2(r103): [40..41]
 a3(r161): [42..43]
 a4(r118): [4..5]
 a5(r117): [6..7]
 a6(r115): [6..11]
 a7(r116): [8..9]
 a8(r160): [10..11]
 a9(r159): [12..13]
 a10(r114): [14..15]
 a11(r113): [16..17]
 a12(r111): [16..21]
 a13(r112): [18..19]
 a14(r158): [20..21]
 a15(r157): [22..23]
 a16(r105): [24..35]
 a17(r110): [24..25]
 a18(r109): [26..27]
 a19(r108): [28..29]
 a20(r106): [28..33]
 a21(r107): [30..31]
 a22(r156): [32..33]
 a23(r155): [34..35]
 a24(r104): [36..37]
 a25(r154): [38..39]
 a26(r153): [44..45]
 a27(r102): [44..45]
 a28(r101): [46..47]
 a29(r152): [48..49]
 a30(r151): [50..51]
 a31(r100): [52..53]
 a32(r150): [54..55]
 a33(r99): [56..57]
 a34(r149): [58..59]
 a35(r98): [74..75]
 a36(r148): [76..77]
 a37(r97): [82..83]
 a38(r147): [82..83]
 a39(r92): [82..93]
 a40(r96): [84..85]
 a41(r95): [86..87]
 a42(r93): [86..91]
 a43(r94): [88..89]
 a44(r146): [90..91]
 a45(r145): [92..93]
 a46(r91): [94..95]
 a47(r90): [96..97]
 a48(r144): [98..99]
 a49(r87): [116..121]
 a50(r89): [116..117]
 a51(r88): [118..119]
 a52(r143): [120..121]
 a53(r86): [122..123]
 a54(r84): [122..127]
 a55(r85): [124..125]
 a56(r142): [126..127]
 a57(r141): [128..129]
 a58(r83): [130..131]
 a59(r140): [130..131]
 a60(r82): [132..133]
 a61(r80): [132..137]
 a62(r81): [134..135]
 a63(r139): [136..137]
 a64(r138): [138..139]
 a65(r137): [60..61]
 a66(r79): [60..61]
 a67(r136): [62..63]
 a68(r78): [64..65]
 a69(r135): [66..67]
 a70(r134): [140..141]
 a71(r69): [142..159]
 a72(r77): [142..143]
 a73(r72): [142..153]
 a74(r76): [144..145]
 a75(r75): [146..147]
 a76(r73): [146..151]
 a77(r74): [148..149]
 a78(r133): [150..151]
 a79(r132): [152..153]
 a80(r71): [154..155]
 a81(r70): [156..157]
 a82(r131): [158..159]
 a83(r68): [160..161]
 a84(r130): [162..163]
 a85(r67): [100..101]
 a86(r65): [100..105]
 a87(r66): [102..103]
 a88(r129): [104..105]
 a89(r64): [106..107]
 a90(r63): [108..109]
 a91(r61): [108..113]
 a92(r62): [110..111]
 a93(r128): [112..113]
 a94(r127): [114..115]
 a95(r60): [78..79]
 a96(r126): [80..81]
 a97(r125): [68..69]
 a98(r59): [70..71]
 a99(r124): [72..73]
 a100(r123): [164..165]
 a101(r122): [166..167]
 a102(r121): [168..169]
  regions=1, blocks=20, points=170
    allocnos=103 (big 0), copies=0, conflicts=0, ranges=103
Disposition:
   98:r59  l0     0   95:r60  l0     0   91:r61  l0     0   92:r62  l0     1
   90:r63  l0     1   89:r64  l0     0   86:r65  l0     1   87:r66  l0     0
   85:r67  l0     0   83:r68  l0     0   71:r69  l0     0   81:r70  l0     1
   80:r71  l0     1   73:r72  l0     2   76:r73  l0     1   77:r74  l0     4
   75:r75  l0     4   74:r76  l0     1   72:r77  l0     1   68:r78  l0     0
   66:r79  l0     1   61:r80  l0     0   62:r81  l0     1   60:r82  l0     1
   58:r83  l0     1   54:r84  l0     0   55:r85  l0     1   53:r86  l0     1
   49:r87  l0     1   51:r88  l0     0   50:r89  l0     0   47:r90  l0     0
   46:r91  l0     0   39:r92  l0     1   42:r93  l0     0   43:r94  l0     2
   41:r95  l0     2   40:r96  l0     0   37:r97  l0     0   35:r98  l0     0
   33:r99  l0     0   31:r100 l0     0   28:r101 l0     0   27:r102 l0     1
    2:r103 l0     0   24:r104 l0     0   16:r105 l0     0   20:r106 l0     1
   21:r107 l0     2   19:r108 l0     2   18:r109 l0     1   17:r110 l0     1
   12:r111 l0     0   13:r112 l0     1   11:r113 l0     1   10:r114 l0     0
    6:r115 l0     0    7:r116 l0     1    5:r117 l0     1    4:r118 l0     0
    1:r119 l0     0    0:r120 l0     0  102:r121 l0     0  101:r122 l0     0
  100:r123 l0     0   99:r124 l0     0   97:r125 l0     0   96:r126 l0     0
   94:r127 l0     0   93:r128 l0     1   88:r129 l0     0   84:r130 l0     0
   82:r131 l0     1   79:r132 l0     1   78:r133 l0     4   70:r134 l0     0
   69:r135 l0     0   67:r136 l0     0   65:r137 l0     0   64:r138 l0     0
   63:r139 l0     1   59:r140 l0     0   57:r141 l0     0   56:r142 l0     1
   52:r143 l0     0   48:r144 l0     0   45:r145 l0     0   44:r146 l0     2
   38:r147 l0     2   36:r148 l0     0   34:r149 l0     0   32:r150 l0     0
   30:r151 l0     0   29:r152 l0     0   26:r153 l0     0   25:r154 l0     0
   23:r155 l0     1   22:r156 l0     2   15:r157 l0     0   14:r158 l0     1
    9:r159 l0     0    8:r160 l0     1    3:r161 l0     0
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabNext

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,5u} r1={8d,1u} r2={7d} r4={11d,4u} r5={13d,7u} r6={1d,19u} r7={1d,25u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,18u} r17={41d,9u} r18={6d} r19={6d} r20={1d,71u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} 
;;    total ref usage 699{434d,262u,3e} in 159{153 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 121 122 123
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:728 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:729 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
        (reg/f:DI 121)) ./ext/misc/csv.c:729 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 121)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 123)
        (mem/f/j:DI (reg/f:DI 122) [0 cur_5(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])
        (reg/f:DI 123)) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(insn 11 10 123 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:731 89 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              11 (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 124 125
(code_label 123 11 12 3 160 "" [1 uses])
(note 12 123 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:DI 59 [ D.6675 ])
                (plus:DI (reg/f:DI 124)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:734 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 59 [ D.6675 ])) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6675 ])
        (nil)))
(call_insn 16 15 17 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:734 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg:DI 125)
        (reg:DI 0 ax)) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
        (reg:DI 125)) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:735 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:735 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 21 20 205 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 205 21 206 4 (set (pc)
        (label_ref 126)) ./ext/misc/csv.c:736 650 {jump}
     (nil)
 -> 126)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 206 205 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 126
(code_label 24 206 25 5 155 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:738 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 60 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:738 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (nil)))
(insn 28 27 29 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 60 [ D.6676 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:738 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6676 ])
        (nil)))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:738 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 119)
;;  succ:       6 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61 62 63 64 65 66 67 127 128 129
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 61 [ D.6677 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 127)
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (nil)))
(insn 33 32 34 6 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 62 [ D.6678 ])
        (sign_extend:DI (reg:SI 128))) ./ext/misc/csv.c:739 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 63 [ D.6678 ])
                (ashift:DI (reg:DI 62 [ D.6678 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 6 (parallel [
            (set (reg/f:DI 64 [ D.6677 ])
                (plus:DI (reg/f:DI 61 [ D.6677 ])
                    (reg:DI 63 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 63 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 61 [ D.6677 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 6 (set (reg:SI 65 [ D.6676 ])
        (mem:SI (reg/f:DI 64 [ D.6677 ]) [0 *_15+0 S4 A32])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6677 ])
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 6 (set (reg:SI 66 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 129)
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg:SI 67 [ D.6676 ])
                (plus:SI (reg:SI 66 [ D.6676 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 66 [ D.6676 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 65 [ D.6676 ])
            (reg:SI 67 [ D.6676 ]))) ./ext/misc/csv.c:739 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 67 [ D.6676 ])
        (expr_list:REG_DEAD (reg:SI 65 [ D.6676 ])
            (nil))))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) ./ext/misc/csv.c:739 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 100)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76 77 130 131 132 133 134
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg/f:DI 130)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 68 [ sqlite3_api.41 ])
        (mem/f/c:DI (reg/f:DI 130) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 46 45 47 7 (set (reg/f:DI 69 [ D.6679 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 68 [ sqlite3_api.41 ])
                (const_int 1592 [0x638])) [0 sqlite3_api.41_19->realloc64+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 68 [ sqlite3_api.41 ])
        (nil)))
(insn 47 46 48 7 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 7 (set (reg:SI 70 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 131)
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:740 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 71 [ D.6676 ])
                (plus:SI (reg:SI 70 [ D.6676 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 70 [ D.6676 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 7 (set (reg:DI 72 [ D.6680 ])
        (sign_extend:DI (reg:SI 71 [ D.6676 ]))) ./ext/misc/csv.c:740 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 71 [ D.6676 ])
        (nil)))
(insn 51 50 52 7 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 73 [ D.6681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 132)
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (nil)))
(insn 53 52 54 7 (set (reg:SI 133)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:740 89 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:DI 74 [ D.6678 ])
        (sign_extend:DI (reg:SI 133))) ./ext/misc/csv.c:740 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 55 54 56 7 (parallel [
            (set (reg:DI 75 [ D.6678 ])
                (ashift:DI (reg:DI 74 [ D.6678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 74 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 7 (parallel [
            (set (reg/f:DI 76 [ D.6681 ])
                (plus:DI (reg/f:DI 73 [ D.6681 ])
                    (reg:DI 75 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 75 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 73 [ D.6681 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 57 56 58 7 (set (reg/f:DI 77 [ D.6682 ])
        (mem/f:DI (reg/f:DI 76 [ D.6681 ]) [0 *_27+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76 [ D.6681 ])
        (nil)))
(insn 58 57 59 7 (set (reg:DI 4 si)
        (reg:DI 72 [ D.6680 ])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 72 [ D.6680 ])
        (nil)))
(insn 59 58 60 7 (set (reg:DI 5 di)
        (reg/f:DI 77 [ D.6682 ])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77 [ D.6682 ])
        (nil)))
(call_insn 60 59 61 7 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 69 [ D.6679 ]) [0 *_20 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:740 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.6679 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 7 (set (reg:DI 134)
        (reg:DI 0 ax)) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 62 61 63 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
        (reg:DI 134)) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(insn 63 62 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:741 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) ./ext/misc/csv.c:741 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 80)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 135 136 137
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 78 [ D.6675 ])
                (plus:DI (reg/f:DI 135)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:742 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 68 67 69 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 8 (set (reg:DI 5 di)
        (reg/f:DI 78 [ D.6675 ])) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78 [ D.6675 ])
        (nil)))
(insn 70 69 71 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:742 91 {*movqi_internal}
     (nil))
(call_insn 71 70 72 8 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:742 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 72 71 73 8 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg/f:DI 79 [ D.6675 ])
                (plus:DI (reg/f:DI 136)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:743 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 74 73 75 8 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (reg/f:DI 79 [ D.6675 ])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79 [ D.6675 ])
        (nil)))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (reg:DI 137)) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 77 76 207 8 (call (mem:QI (symbol_ref:DI ("csv_xfer_error") [flags 0x3]  <function_decl 0x7fbdb47dfe00 csv_xfer_error>) [0 csv_xfer_error S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:743 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(jump_insn 207 77 208 8 (set (pc)
        (label_ref 126)) ./ext/misc/csv.c:744 650 {jump}
     (nil)
 -> 126)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 208 207 80)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 80 81 82 83 84 85 86 87 88 89 138 139 140 141 142 143
(code_label 80 208 81 9 159 "" [1 uses])
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 9 (set (reg/f:DI 80 [ D.6681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 138)
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(insn 84 83 85 9 (set (reg:SI 139)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:746 89 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:DI 81 [ D.6678 ])
        (sign_extend:DI (reg:SI 139))) ./ext/misc/csv.c:746 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 82 [ D.6678 ])
                (ashift:DI (reg:DI 81 [ D.6678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:746 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 81 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 9 (parallel [
            (set (reg/f:DI 83 [ D.6681 ])
                (plus:DI (reg/f:DI 80 [ D.6681 ])
                    (reg:DI 82 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:746 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 82 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 80 [ D.6681 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 88 87 89 9 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 9 (set (mem/f:DI (reg/f:DI 83 [ D.6681 ]) [0 *_35+0 S8 A64])
        (reg/f:DI 140)) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.6681 ])
            (nil))))
(insn 90 89 91 9 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 84 [ D.6677 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 141)
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (nil)))
(insn 92 91 93 9 (set (reg:SI 142)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (nil))
(insn 93 92 94 9 (set (reg:DI 85 [ D.6678 ])
        (sign_extend:DI (reg:SI 142))) ./ext/misc/csv.c:747 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 94 93 95 9 (parallel [
            (set (reg:DI 86 [ D.6678 ])
                (ashift:DI (reg:DI 85 [ D.6678 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 85 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 9 (parallel [
            (set (reg/f:DI 87 [ D.6677 ])
                (plus:DI (reg/f:DI 84 [ D.6677 ])
                    (reg:DI 86 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 86 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 84 [ D.6677 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 96 95 97 9 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 9 (set (reg:SI 88 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 143)
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 98 97 99 9 (parallel [
            (set (reg:SI 89 [ D.6676 ])
                (plus:SI (reg:SI 88 [ D.6676 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6676 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 9 (set (mem:SI (reg/f:DI 87 [ D.6677 ]) [0 *_39+0 S4 A32])
        (reg:SI 89 [ D.6676 ])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6676 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.6677 ])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 92 93 94 95 96 97 144 145 146 147
(code_label 100 99 101 10 158 "" [1 uses])
(note 101 100 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 10 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 10 (set (reg:SI 90 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 144)
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:749 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144)
        (nil)))
(insn 104 103 105 10 (parallel [
            (set (reg:SI 91 [ D.6676 ])
                (plus:SI (reg:SI 90 [ D.6676 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6676 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 10 (set (reg:DI 92 [ D.6678 ])
        (sign_extend:DI (reg:SI 91 [ D.6676 ]))) ./ext/misc/csv.c:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6676 ])
        (nil)))
(insn 106 105 107 10 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 10 (set (reg/f:DI 93 [ D.6681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 145)
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (nil)))
(insn 108 107 109 10 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:749 89 {*movsi_internal}
     (nil))
(insn 109 108 110 10 (set (reg:DI 94 [ D.6678 ])
        (sign_extend:DI (reg:SI 146))) ./ext/misc/csv.c:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
(insn 110 109 111 10 (parallel [
            (set (reg:DI 95 [ D.6678 ])
                (ashift:DI (reg:DI 94 [ D.6678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 10 (parallel [
            (set (reg/f:DI 96 [ D.6681 ])
                (plus:DI (reg/f:DI 93 [ D.6681 ])
                    (reg:DI 95 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 95 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 93 [ D.6681 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 112 111 113 10 (set (reg/f:DI 97 [ D.6682 ])
        (mem/f:DI (reg/f:DI 96 [ D.6681 ]) [0 *_48+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.6681 ])
        (nil)))
(insn 113 112 114 10 (set (reg:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 114 113 115 10 (set (reg:DI 1 dx)
        (reg:DI 92 [ D.6678 ])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 92 [ D.6678 ])
        (nil)))
(insn 115 114 116 10 (set (reg:DI 4 si)
        (reg:DI 147)) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 147)
        (nil)))
(insn 116 115 117 10 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.6682 ])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6682 ])
        (nil)))
(call_insn 117 116 118 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fbdb4900a00 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:749 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 118 117 119 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:750 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 148
(code_label 119 118 120 11 157 "" [1 uses])
(note 120 119 121 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 11 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:752 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 124 11 (set (reg:SI 98 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 148)
                (const_int 40 [0x28])) [0 pCur_6->rdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:752 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (nil)))
(insn 124 122 125 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.6676 ])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:752 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.6676 ])
        (nil)))
(jump_insn 125 124 126 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) ./ext/misc/csv.c:752 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 123)
;;  succ:       3 (DFS_BACK)
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              4 [100.0%] 
;;              8 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 126 125 127 12 156 "" [2 uses])
(note 127 126 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:753 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 129 128 130 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 140)
;;  succ:       15
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 149
(note 130 129 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 13 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:753 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 13 (set (reg:SI 99 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 149)
                (const_int 40 [0x28])) [0 pCur_6->rdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:753 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (nil)))
(insn 133 132 134 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.6676 ])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:753 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6676 ])
        (nil)))
(jump_insn 134 133 135 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
;;  succ:       14 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 150
(note 135 134 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 14 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:753 87 {*movdi_internal_rex64}
     (nil))
(insn 137 136 138 14 (set (reg:SI 100 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 150)
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:753 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150)
        (nil)))
(insn 138 137 139 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 100 [ D.6676 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:753 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.6676 ])
        (nil)))
(jump_insn 139 138 140 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 146)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 151
(code_label 140 139 141 15 161 "" [1 uses])
(note 141 140 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 15 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:754 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 209 15 (set (mem/j:DI (plus:DI (reg/f:DI 151)
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:754 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (nil)))
(jump_insn 209 143 210 15 (set (pc)
        (label_ref 190)) ./ext/misc/csv.c:754 650 {jump}
     (nil)
 -> 190)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 210 209 146)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 152 153
(code_label 146 210 147 16 162 "" [2 uses])
(note 147 146 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 16 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 16 (set (reg:DI 101 [ D.6683 ])
        (mem/j:DI (plus:DI (reg/f:DI 152)
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 150 149 151 16 (parallel [
            (set (reg:DI 102 [ D.6683 ])
                (plus:DI (reg:DI 101 [ D.6683 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:756 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.6683 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 16 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 211 16 (set (mem/j:DI (plus:DI (reg/f:DI 153)
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])
        (reg:DI 102 [ D.6683 ])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (expr_list:REG_DEAD (reg:DI 102 [ D.6683 ])
            (nil))))
(jump_insn 211 152 212 16 (set (pc)
        (label_ref 183)) ./ext/misc/csv.c:757 650 {jump}
     (nil)
 -> 183)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 212 211 187)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 154 155 156 157 158 159 160
(code_label 187 212 155 17 165 "" [1 uses])
(note 155 187 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg/f:DI 154)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 17 (set (reg/f:DI 104 [ sqlite3_api.42 ])
        (mem/f/c:DI (reg/f:DI 154) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(insn 158 157 159 17 (set (reg/f:DI 105 [ D.6684 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 104 [ sqlite3_api.42 ])
                (const_int 464 [0x1d0])) [0 sqlite3_api.42_57->free+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 104 [ sqlite3_api.42 ])
        (nil)))
(insn 159 158 160 17 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 17 (set (reg/f:DI 106 [ D.6681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 155)
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (nil)))
(insn 161 160 162 17 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:758 89 {*movsi_internal}
     (nil))
(insn 162 161 163 17 (set (reg:DI 107 [ D.6678 ])
        (sign_extend:DI (reg:SI 156))) ./ext/misc/csv.c:758 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 163 162 164 17 (parallel [
            (set (reg:DI 108 [ D.6678 ])
                (ashift:DI (reg:DI 107 [ D.6678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:758 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 17 (parallel [
            (set (reg/f:DI 109 [ D.6681 ])
                (plus:DI (reg/f:DI 106 [ D.6681 ])
                    (reg:DI 108 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:758 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 106 [ D.6681 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 165 164 166 17 (set (reg/f:DI 110 [ D.6682 ])
        (mem/f:DI (reg/f:DI 109 [ D.6681 ]) [0 *_62+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.6681 ])
        (nil)))
(insn 166 165 167 17 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.6682 ])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.6682 ])
        (nil)))
(call_insn 167 166 168 17 (call (mem:QI (reg/f:DI 105 [ D.6684 ]) [0 *_58 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:758 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.6684 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 17 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 17 (set (reg/f:DI 111 [ D.6681 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 157)
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 170 169 171 17 (set (reg:SI 158)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:759 89 {*movsi_internal}
     (nil))
(insn 171 170 172 17 (set (reg:DI 112 [ D.6678 ])
        (sign_extend:DI (reg:SI 158))) ./ext/misc/csv.c:759 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 158)
        (nil)))
(insn 172 171 173 17 (parallel [
            (set (reg:DI 113 [ D.6678 ])
                (ashift:DI (reg:DI 112 [ D.6678 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:759 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 112 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 17 (parallel [
            (set (reg/f:DI 114 [ D.6681 ])
                (plus:DI (reg/f:DI 111 [ D.6681 ])
                    (reg:DI 113 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:759 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 111 [ D.6681 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 174 173 175 17 (set (mem/f:DI (reg/f:DI 114 [ D.6681 ]) [0 *_67+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.6681 ])
        (nil)))
(insn 175 174 176 17 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:760 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 17 (set (reg/f:DI 115 [ D.6677 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 159)
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:760 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 159)
        (nil)))
(insn 177 176 178 17 (set (reg:SI 160)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:760 89 {*movsi_internal}
     (nil))
(insn 178 177 179 17 (set (reg:DI 116 [ D.6678 ])
        (sign_extend:DI (reg:SI 160))) ./ext/misc/csv.c:760 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 179 178 180 17 (parallel [
            (set (reg:DI 117 [ D.6678 ])
                (ashift:DI (reg:DI 116 [ D.6678 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:760 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ D.6678 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 17 (parallel [
            (set (reg/f:DI 118 [ D.6677 ])
                (plus:DI (reg/f:DI 115 [ D.6677 ])
                    (reg:DI 117 [ D.6678 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:760 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.6678 ])
        (expr_list:REG_DEAD (reg/f:DI 115 [ D.6677 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 181 180 182 17 (set (mem:SI (reg/f:DI 118 [ D.6677 ]) [0 *_71+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:760 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ D.6677 ])
        (nil)))
(insn 182 181 183 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:761 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       18 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU,DFS_BACK)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 161
(code_label 183 182 184 18 164 "" [1 uses])
(note 184 183 185 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 18 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:757 87 {*movdi_internal_rex64}
     (nil))
(insn 186 185 188 18 (set (reg:SI 103 [ D.6676 ])
        (mem/j:SI (plus:DI (reg/f:DI 161)
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:757 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 188 186 189 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 103 [ D.6676 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:757 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.6676 ])
        (nil)))
(jump_insn 189 188 190 18 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) ./ext/misc/csv.c:757 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 187)
;;  succ:       17
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              15 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 119 120
(code_label 190 189 191 19 163 "" [1 uses])
(note 191 190 192 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 195 19 (set (reg:SI 119 [ D.6676 ])
        (const_int 0 [0])) ./ext/misc/csv.c:764 89 {*movsi_internal}
     (nil))
(insn 195 192 199 19 (set (reg:SI 120 [ <retval> ])
        (reg:SI 119 [ D.6676 ])) ./ext/misc/csv.c:764 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ D.6676 ])
        (nil)))
(insn 199 195 202 19 (set (reg/i:SI 0 ax)
        (reg:SI 120 [ <retval> ])) ./ext/misc/csv.c:765 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120 [ <retval> ])
        (nil)))
(insn 202 199 0 19 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:765 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabColumn (csvtabColumn, funcdef_no=26, decl_uid=5609, cgraph_uid=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r73,l0) best AREG, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r71,l0) best SIREG, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r73,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a12(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a16(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a19(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a21(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a22(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 59(l0): point = 0
   Insn 56(l0): point = 2
   Insn 52(l0): point = 4
   Insn 49(l0): point = 6
   Insn 46(l0): point = 9
   Insn 45(l0): point = 11
   Insn 44(l0): point = 13
   Insn 43(l0): point = 15
   Insn 42(l0): point = 17
   Insn 41(l0): point = 19
   Insn 40(l0): point = 21
   Insn 39(l0): point = 23
   Insn 38(l0): point = 25
   Insn 37(l0): point = 27
   Insn 36(l0): point = 29
   Insn 35(l0): point = 31
   Insn 34(l0): point = 33
   Insn 33(l0): point = 35
   Insn 32(l0): point = 37
   Insn 31(l0): point = 39
   Insn 29(l0): point = 42
   Insn 28(l0): point = 44
   Insn 27(l0): point = 46
   Insn 26(l0): point = 48
   Insn 25(l0): point = 50
   Insn 24(l0): point = 52
   Insn 23(l0): point = 54
   Insn 22(l0): point = 56
   Insn 21(l0): point = 58
   Insn 19(l0): point = 61
   Insn 18(l0): point = 63
   Insn 17(l0): point = 65
   Insn 16(l0): point = 67
   Insn 14(l0): point = 70
   Insn 13(l0): point = 72
   Insn 12(l0): point = 74
   Insn 11(l0): point = 76
   Insn 10(l0): point = 78
   Insn 9(l0): point = 80
   Insn 8(l0): point = 82
   Insn 4(l0): point = 84
   Insn 3(l0): point = 86
   Insn 2(l0): point = 88
 a0(r73): [3..4]
 a1(r72): [5..6]
 a2(r66): [10..35]
 a3(r83): [12..19]
 a4(r71): [14..21]
 a5(r70): [22..23]
 a6(r69): [24..25]
 a7(r67): [24..31]
 a8(r68): [26..27]
 a9(r82): [28..29]
 a10(r81): [32..33]
 a11(r65): [36..37]
 a12(r80): [38..39]
 a13(r64): [45..46]
 a14(r63): [47..48]
 a15(r62): [49..50]
 a16(r60): [49..56]
 a17(r61): [51..52]
 a18(r79): [53..54]
 a19(r78): [57..58]
 a20(r59): [64..65]
 a21(r77): [66..67]
 a22(r76): [75..76]
 a23(r75): [77..78]
 a24(r74): [81..82]
Compressing live ranges: from 91 to 42 - 46%
Ranges after the compression:
 a0(r73): [0..1]
 a1(r72): [2..3]
 a2(r66): [4..15]
 a3(r83): [4..5]
 a4(r71): [4..5]
 a5(r70): [6..7]
 a6(r69): [8..9]
 a7(r67): [8..13]
 a8(r68): [10..11]
 a9(r82): [12..13]
 a10(r81): [14..15]
 a11(r65): [16..17]
 a12(r80): [18..19]
 a13(r64): [20..21]
 a14(r63): [22..23]
 a15(r62): [24..25]
 a16(r60): [24..29]
 a17(r61): [26..27]
 a18(r79): [28..29]
 a19(r78): [30..31]
 a20(r59): [32..33]
 a21(r77): [34..35]
 a22(r76): [36..37]
 a23(r75): [38..39]
 a24(r74): [40..41]
  regions=1, blocks=7, points=42
    allocnos=25 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   20:r59  l0     0   16:r60  l0     0   17:r61  l0     1   15:r62  l0     1
   14:r63  l0     0   13:r64  l0     0   11:r65  l0     0    2:r66  l0     0
    7:r67  l0     1    8:r68  l0     2    6:r69  l0     2    5:r70  l0     1
    4:r71  l0     4    1:r72  l0     0    0:r73  l0     0   24:r74  l0     0
   23:r75  l0     0   22:r76  l0     0   21:r77  l0     0   19:r78  l0     0
   18:r79  l0     1   12:r80  l0     0   10:r81  l0     1    9:r82  l0     2
    3:r83  l0     5
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabColumn

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,6u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,5u} r17={8d,3u} r18={1d} r19={1d} r20={1d,21u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 176{100d,76u,0e} in 43{42 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 75 76
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:775 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 ctx+0 S8 A64])
        (reg:DI 4 si [ ctx ])) ./ext/misc/csv.c:775 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ ctx ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (reg:SI 1 dx [ i ])) ./ext/misc/csv.c:775 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ i ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 74)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:776 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])
        (reg/f:DI 74)) ./ext/misc/csv.c:776 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 76)
        (mem/f/j:DI (reg/f:DI 75) [0 cur_1(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 76)) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 13 12 14 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:778 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 47)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 77
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:SI 59 [ D.6685 ])
        (mem/j:SI (plus:DI (reg/f:DI 77)
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:778 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 18 17 19 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 59 [ D.6685 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:778 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6685 ])
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 47)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 78 79
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 60 [ D.6686 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 272 [0x110])) [0 pCur_2->azVal+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 79)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:778 89 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 61 [ D.6687 ])
        (sign_extend:DI (reg:SI 79))) ./ext/misc/csv.c:778 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 79)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 62 [ D.6687 ])
                (ashift:DI (reg:DI 61 [ D.6687 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:778 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.6687 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 63 [ D.6686 ])
                (plus:DI (reg/f:DI 60 [ D.6686 ])
                    (reg:DI 62 [ D.6687 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:778 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.6687 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.6686 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (reg/f:DI 64 [ D.6688 ])
        (mem/f:DI (reg/f:DI 63 [ D.6686 ]) [0 *_9+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.6686 ])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 64 [ D.6688 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:778 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 64 [ D.6688 ])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 80 81 82 83
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:DI 80)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 65 [ sqlite3_api.43 ])
        (mem/f/c:DI (reg/f:DI 80) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))
(insn 33 32 34 5 (set (reg/f:DI 66 [ D.6689 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 65 [ sqlite3_api.43 ])
                (const_int 680 [0x2a8])) [0 sqlite3_api.43_11->result_text+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65 [ sqlite3_api.43 ])
        (nil)))
(insn 34 33 35 5 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 67 [ D.6686 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 81)
                (const_int 272 [0x110])) [0 pCur_2->azVal+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (nil)))
(insn 36 35 37 5 (set (reg:SI 82)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:779 89 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 68 [ D.6687 ])
        (sign_extend:DI (reg:SI 82))) ./ext/misc/csv.c:779 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 69 [ D.6687 ])
                (ashift:DI (reg:DI 68 [ D.6687 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:779 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 68 [ D.6687 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 70 [ D.6686 ])
                (plus:DI (reg/f:DI 67 [ D.6686 ])
                    (reg:DI 69 [ D.6687 ])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:779 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69 [ D.6687 ])
        (expr_list:REG_DEAD (reg/f:DI 67 [ D.6686 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 40 39 41 5 (set (reg/f:DI 71 [ D.6688 ])
        (mem/f:DI (reg/f:DI 70 [ D.6686 ]) [0 *_16+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70 [ D.6686 ])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 ctx+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg:DI 2 cx)
        (const_int 0 [0])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:779 89 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 4 si)
        (reg/f:DI 71 [ D.6688 ])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 71 [ D.6688 ])
        (nil)))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 83)) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 46 45 47 5 (call (mem:QI (reg/f:DI 66 [ D.6689 ]) [0 *_12 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:779 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.6689 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 72 73
(code_label 47 46 48 6 168 "" [3 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 52 6 (set (reg:SI 72 [ D.6685 ])
        (const_int 0 [0])) ./ext/misc/csv.c:781 89 {*movsi_internal}
     (nil))
(insn 52 49 56 6 (set (reg:SI 73 [ <retval> ])
        (reg:SI 72 [ D.6685 ])) ./ext/misc/csv.c:781 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 72 [ D.6685 ])
        (nil)))
(insn 56 52 59 6 (set (reg/i:SI 0 ax)
        (reg:SI 73 [ <retval> ])) ./ext/misc/csv.c:782 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 73 [ <retval> ])
        (nil)))
(insn 59 56 0 6 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:782 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabRowid (csvtabRowid, funcdef_no=27, decl_uid=5612, cgraph_uid=27)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r61,l0) best AREG, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r61,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r61): [3..4]
 a1(r60): [5..6]
 a2(r64): [9..10]
 a3(r59): [9..12]
 a4(r63): [13..14]
 a5(r62): [17..18]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r61): [0..1]
 a1(r60): [2..3]
 a2(r64): [4..5]
 a3(r59): [4..5]
 a4(r63): [6..7]
 a5(r62): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r59  l0     1    1:r60  l0     0    0:r61  l0     0    5:r62  l0     0
    4:r63  l0     0    2:r64  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabRowid

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,8u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 49{26d,23u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60 61 62 63 64
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:787 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pRowid+0 S8 A64])
        (reg:DI 4 si [ pRowid ])) ./ext/misc/csv.c:787 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pRowid ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 62)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:788 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 62)) ./ext/misc/csv.c:788 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 62)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 59 [ D.6690 ])
        (mem/j:DI (plus:DI (reg/f:DI 63)
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pRowid+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem:DI (reg/f:DI 64) [0 *pRowid_4(D)+0 S8 A64])
        (reg:DI 59 [ D.6690 ])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_DEAD (reg:DI 59 [ D.6690 ])
            (nil))))
(insn 13 12 16 2 (set (reg:SI 60 [ D.6691 ])
        (const_int 0 [0])) ./ext/misc/csv.c:790 89 {*movsi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:SI 61 [ <retval> ])
        (reg:SI 60 [ D.6691 ])) ./ext/misc/csv.c:790 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ D.6691 ])
        (nil)))
(insn 20 16 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 61 [ <retval> ])) ./ext/misc/csv.c:791 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 61 [ <retval> ])
        (nil)))
(insn 23 20 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:791 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabEof (csvtabEof, funcdef_no=28, decl_uid=5605, cgraph_uid=28)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:131070 INT_SSE_REGS:131070 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:6
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 22(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r60): [7..8]
 a3(r65): [9..10]
 a4(r59): [11..12]
 a5(r64): [13..14]
 a6(r63): [17..18]
Compressing live ranges: from 23 to 14 - 60%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r60): [4..5]
 a3(r65): [6..7]
 a4(r59): [8..9]
 a5(r64): [10..11]
 a6(r63): [12..13]
  regions=1, blocks=3, points=14
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    4:r59  l0     0    2:r60  l0     0    1:r61  l0     0    0:r62  l0     0
    6:r63  l0     0    5:r64  l0     0    3:r65  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabEof

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} 
;;    total ref usage 49{28d,21u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 59 60 61 62 63 64 65
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:797 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 63)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:798 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 63)) ./ext/misc/csv.c:798 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:799 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 59 [ D.6692 ])
        (mem/j:DI (plus:DI (reg/f:DI 64)
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])) ./ext/misc/csv.c:799 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 65)
                (lshiftrt:DI (reg:DI 59 [ D.6692 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:799 547 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.6692 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (set (reg:QI 60 [ D.6693 ])
        (subreg:QI (reg:DI 65) 0)) ./ext/misc/csv.c:799 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 65)
        (nil)))
(insn 12 11 15 2 (set (reg:SI 61 [ D.6694 ])
        (zero_extend:SI (reg:QI 60 [ D.6693 ]))) ./ext/misc/csv.c:799 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 60 [ D.6693 ])
        (nil)))
(insn 15 12 19 2 (set (reg:SI 62 [ <retval> ])
        (reg:SI 61 [ D.6694 ])) ./ext/misc/csv.c:799 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6694 ])
        (nil)))
(insn 19 15 22 2 (set (reg/i:SI 0 ax)
        (reg:SI 62 [ <retval> ])) ./ext/misc/csv.c:800 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ <retval> ])
        (nil)))
(insn 22 19 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:800 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabFilter (csvtabFilter, funcdef_no=29, decl_uid=5601, cgraph_uid=29)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 12 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 91.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r78,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r77: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r77,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r71,l0) best AREG, allocno GENERAL_REGS
    r70: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r70,l0) best AREG, allocno GENERAL_REGS
    r69: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r69,l0) best DIREG, allocno GENERAL_REGS
    r68: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best SIREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r71,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r70,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a10(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a11(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a13(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a16(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a17(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a18(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a19(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a20(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a21(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a22(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a23(r77,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a25(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a26(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a27(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a28(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a29(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 102(l0): point = 0
   Insn 99(l0): point = 2
   Insn 95(l0): point = 4
   Insn 92(l0): point = 6
   Insn 91(l0): point = 8
   Insn 90(l0): point = 10
   Insn 89(l0): point = 12
   Insn 86(l0): point = 15
   Insn 85(l0): point = 17
   Insn 84(l0): point = 19
   Insn 83(l0): point = 21
   Insn 82(l0): point = 23
   Insn 81(l0): point = 25
   Insn 80(l0): point = 27
   Insn 79(l0): point = 29
   Insn 78(l0): point = 31
   Insn 77(l0): point = 33
   Insn 76(l0): point = 35
   Insn 75(l0): point = 37
   Insn 105(l0): point = 40
   Insn 70(l0): point = 42
   Insn 69(l0): point = 44
   Insn 68(l0): point = 46
   Insn 67(l0): point = 48
   Insn 66(l0): point = 50
   Insn 62(l0): point = 53
   Insn 61(l0): point = 55
   Insn 60(l0): point = 57
   Insn 59(l0): point = 59
   Insn 58(l0): point = 61
   Insn 56(l0): point = 64
   Insn 55(l0): point = 66
   Insn 54(l0): point = 68
   Insn 53(l0): point = 70
   Insn 52(l0): point = 72
   Insn 51(l0): point = 74
   Insn 50(l0): point = 76
   Insn 46(l0): point = 79
   Insn 45(l0): point = 81
   Insn 44(l0): point = 83
   Insn 43(l0): point = 85
   Insn 42(l0): point = 87
   Insn 40(l0): point = 90
   Insn 39(l0): point = 92
   Insn 38(l0): point = 94
   Insn 37(l0): point = 96
   Insn 33(l0): point = 99
   Insn 32(l0): point = 101
   Insn 31(l0): point = 103
   Insn 30(l0): point = 105
   Insn 29(l0): point = 107
   Insn 27(l0): point = 110
   Insn 26(l0): point = 112
   Insn 25(l0): point = 114
   Insn 24(l0): point = 116
   Insn 23(l0): point = 118
   Insn 22(l0): point = 120
   Insn 20(l0): point = 123
   Insn 19(l0): point = 125
   Insn 18(l0): point = 127
   Insn 17(l0): point = 129
   Insn 16(l0): point = 131
   Insn 15(l0): point = 133
   Insn 14(l0): point = 135
   Insn 13(l0): point = 137
   Insn 12(l0): point = 139
   Insn 11(l0): point = 141
   Insn 10(l0): point = 143
   Insn 6(l0): point = 145
   Insn 5(l0): point = 147
   Insn 4(l0): point = 149
   Insn 3(l0): point = 151
   Insn 2(l0): point = 153
 a0(r71): [3..4]
 a1(r70): [5..6]
 a2(r88): [11..12]
 a3(r87): [16..17]
 a4(r86): [20..21]
 a5(r69): [26..31]
 a6(r68): [28..35]
 a7(r85): [32..33]
 a8(r84): [36..37]
 a9(r83): [43..44]
 a10(r67): [43..46]
 a11(r66): [47..48]
 a12(r82): [49..50]
 a13(r65): [67..68]
 a14(r64): [67..72]
 a15(r81): [69..70]
 a16(r63): [73..74]
 a17(r80): [75..76]
 a18(r62): [93..94]
 a19(r79): [95..96]
 a20(r61): [113..114]
 a21(r60): [113..118]
 a22(r78): [115..116]
 a23(r77): [119..120]
 a24(r59): [126..127]
 a25(r76): [128..129]
 a26(r75): [132..133]
 a27(r74): [136..137]
 a28(r73): [138..139]
 a29(r72): [142..143]
Compressing live ranges: from 156 to 52 - 33%
Ranges after the compression:
 a0(r71): [0..1]
 a1(r70): [2..3]
 a2(r88): [4..5]
 a3(r87): [6..7]
 a4(r86): [8..9]
 a5(r69): [10..11]
 a6(r68): [10..13]
 a7(r85): [12..13]
 a8(r84): [14..15]
 a9(r83): [16..17]
 a10(r67): [16..17]
 a11(r66): [18..19]
 a12(r82): [20..21]
 a13(r65): [22..23]
 a14(r64): [22..25]
 a15(r81): [24..25]
 a16(r63): [26..27]
 a17(r80): [28..29]
 a18(r62): [30..31]
 a19(r79): [32..33]
 a20(r61): [34..35]
 a21(r60): [34..37]
 a22(r78): [36..37]
 a23(r77): [38..39]
 a24(r59): [40..41]
 a25(r76): [42..43]
 a26(r75): [44..45]
 a27(r74): [46..47]
 a28(r73): [48..49]
 a29(r72): [50..51]
  regions=1, blocks=12, points=52
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
   24:r59  l0     0   21:r60  l0     1   20:r61  l0     0   18:r62  l0     0
   16:r63  l0     0   14:r64  l0     1   13:r65  l0     0   11:r66  l0     0
   10:r67  l0     1    6:r68  l0     2    5:r69  l0     0    1:r70  l0     0
    0:r71  l0     0   29:r72  l0     0   28:r73  l0     0   27:r74  l0     0
   26:r75  l0     0   25:r76  l0     0   23:r77  l0     0   22:r78  l0     0
   19:r79  l0     0   17:r80  l0     0   15:r81  l0     0   12:r82  l0     0
    9:r83  l0     0    8:r84  l0     0    7:r85  l0     0    4:r86  l0     0
    3:r87  l0     0    2:r88  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabFilter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={7d,3u} r1={10d,5u} r2={9d,4u} r4={10d,5u} r5={11d,6u} r6={1d,11u} r7={1d,16u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,10u} r17={9d,4u} r18={5d} r19={5d} r20={1d,34u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d,1u} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 419{290d,129u,0e} in 73{68 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 59 72 73 74 75 76
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])
        (reg:DI 5 di [ pVtabCursor ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pVtabCursor ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 idxNum+0 S4 A32])
        (reg:SI 4 si [ idxNum ])) ./ext/misc/csv.c:810 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ idxNum ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 idxStr+0 S8 A64])
        (reg:DI 1 dx [ idxStr ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ idxStr ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 argc+0 S4 A32])
        (reg:SI 2 cx [ argc ])) ./ext/misc/csv.c:810 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ argc ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 argv+0 S8 A64])
        (reg:DI 37 r8 [ argv ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ argv ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:811 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])
        (reg/f:DI 72)) ./ext/misc/csv.c:811 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 73)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 74)
        (mem/f/j:DI (reg/f:DI 73) [0 pVtabCursor_1(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 73)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 74)) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 75)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:813 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/j:DI (plus:DI (reg/f:DI 75)
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:813 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 76)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:814 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 59 [ D.6695 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 pCur_2->rdr.in+0 S8 A64])) ./ext/misc/csv.c:814 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 76)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ D.6695 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:814 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 59 [ D.6695 ])
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ./ext/misc/csv.c:814 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
;;  succ:       3 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 77 78
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:DI 77)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 60 [ D.6696 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 77)
                (const_int 64 [0x40])) [0 pCur_2->rdr.zIn+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 77)
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 78)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg/f:DI 61 [ D.6696 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 78)
                (const_int 32 [0x20])) [0 pTab_3->zData+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 78)
        (nil)))
(insn 26 25 27 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 60 [ D.6696 ])
            (reg/f:DI 61 [ D.6696 ]))) ./ext/misc/csv.c:815 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.6696 ])
        (expr_list:REG_DEAD (reg/f:DI 60 [ D.6696 ])
            (nil))))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) ./ext/misc/csv.c:815 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 4 (set (reg:SI 1 dx)
        (const_int 815 [0x32f])) ./ext/misc/csv.c:815 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fbdb4598b48 *.LC31>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:815 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 35)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 79
(code_label 35 34 36 5 176 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:DI 79)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:DI 62 [ D.6697 ])
        (mem/j:DI (plus:DI (reg/f:DI 79)
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 79)
        (nil)))
(insn 39 38 40 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 62 [ D.6697 ])
            (const_int 0 [0]))) ./ext/misc/csv.c:816 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 62 [ D.6697 ])
        (nil)))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) ./ext/misc/csv.c:816 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 48)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 6 (set (reg:SI 1 dx)
        (const_int 816 [0x330])) ./ext/misc/csv.c:816 89 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fbdb4598be0 *.LC32>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 47 6 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:816 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 48)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64 65 80 81
(code_label 48 47 49 7 177 "" [1 uses])
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 80)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 7 (set (reg:DI 63 [ D.6697 ])
        (mem/j:DI (plus:DI (reg/f:DI 80)
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))
(insn 52 51 53 7 (set (reg:DI 64 [ D.6698 ])
        (reg:DI 63 [ D.6697 ])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 63 [ D.6697 ])
        (nil)))
(insn 53 52 54 7 (set (reg/f:DI 81)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 7 (set (reg:DI 65 [ D.6698 ])
        (mem/j:DI (plus:DI (reg/f:DI 81)
                (const_int 56 [0x38])) [0 pCur_2->rdr.nIn+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (nil)))
(insn 55 54 56 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 64 [ D.6698 ])
            (reg:DI 65 [ D.6698 ]))) ./ext/misc/csv.c:817 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 65 [ D.6698 ])
        (expr_list:REG_DEAD (reg:DI 64 [ D.6698 ])
            (nil))))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:817 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 64)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 8 (set (reg:SI 1 dx)
        (const_int 817 [0x331])) ./ext/misc/csv.c:817 89 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fbdb4598c78 *.LC33>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:817 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 63 62 64)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66 67 82 83
(code_label 64 63 65 9 178 "" [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 9 (set (reg:DI 66 [ D.6697 ])
        (mem/j:DI (plus:DI (reg/f:DI 82)
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 82)
        (nil)))
(insn 68 67 69 9 (set (reg:DI 67 [ D.6698 ])
        (reg:DI 66 [ D.6697 ])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66 [ D.6697 ])
        (nil)))
(insn 69 68 70 9 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 105 9 (set (mem/j:DI (plus:DI (reg/f:DI 83)
                (const_int 48 [0x30])) [0 pCur_2->rdr.iIn+0 S8 A64])
        (reg:DI 67 [ D.6698 ])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_DEAD (reg:DI 67 [ D.6698 ])
            (nil))))
(jump_insn 105 70 106 9 (set (pc)
        (label_ref 87)) 650 {jump}
     (nil)
 -> 87)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 106 105 73)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 84 85 86 87
(code_label 73 106 74 10 175 "" [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 10 (set (reg:DI 68 [ D.6697 ])
        (mem/j:DI (plus:DI (reg/f:DI 84)
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 77 76 78 10 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 10 (set (reg/f:DI 69 [ D.6695 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 85)
                (const_int 8 [0x8])) [0 pCur_2->rdr.in+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 79 78 80 10 (set (reg:SI 1 dx)
        (const_int 0 [0])) ./ext/misc/csv.c:820 89 {*movsi_internal}
     (nil))
(insn 80 79 81 10 (set (reg:DI 4 si)
        (reg:DI 68 [ D.6697 ])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68 [ D.6697 ])
        (nil)))
(insn 81 80 82 10 (set (reg:DI 5 di)
        (reg/f:DI 69 [ D.6695 ])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 69 [ D.6695 ])
        (nil)))
(call_insn 82 81 83 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7fbdb47c5900 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:820 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 83 82 84 10 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:821 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 10 (set (mem/j:DI (plus:DI (reg/f:DI 86)
                (const_int 48 [0x30])) [0 pCur_2->rdr.iIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:821 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 85 84 86 10 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:822 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 10 (set (mem/j:DI (plus:DI (reg/f:DI 87)
                (const_int 56 [0x38])) [0 pCur_2->rdr.nIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:822 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 71 88
(code_label 87 86 88 11 179 "" [1 uses])
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:824 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:DI 5 di)
        (reg:DI 88)) ./ext/misc/csv.c:824 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 91 90 92 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabNext") [flags 0x3]  <function_decl 0x7fbdb47dfa00 csvtabNext>) [0 csvtabNext S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:824 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 92 91 95 11 (set (reg:SI 70 [ D.6699 ])
        (reg:SI 0 ax)) ./ext/misc/csv.c:824 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 95 92 99 11 (set (reg:SI 71 [ <retval> ])
        (reg:SI 70 [ D.6699 ])) ./ext/misc/csv.c:824 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 70 [ D.6699 ])
        (nil)))
(insn 99 95 102 11 (set (reg/i:SI 0 ax)
        (reg:SI 71 [ <retval> ])) ./ext/misc/csv.c:825 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 71 [ <retval> ])
        (nil)))
(insn 102 99 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:825 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabBestIndex (csvtabBestIndex, funcdef_no=30, decl_uid=5588, cgraph_uid=30)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r62: preferred SSE_REGS, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a3 (r62,l0) best SSE_REGS, allocno INT_SSE_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r62,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:38 FP_SECOND_REG:38 FLOAT_REGS:38 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:38 FP_SECOND_SSE_REGS:38 FLOAT_SSE_REGS:38 FLOAT_INT_REGS:38 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:38 ALL_REGS:131070 MEM:12

   Insn 20(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r60): [3..4]
 a1(r59): [5..6]
 a2(r61): [9..12]
 a3(r62): [9..10]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
 a2(r61): [4..5]
 a3(r62): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r59  l0     0    0:r60  l0     0    2:r61  l0     1    3:r62  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


csvtabBestIndex

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} 
;;    total ref usage 42{24d,18u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60 61 62
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 tab+0 S8 A64])
        (reg:DI 5 di [ tab ])) ./ext/misc/csv.c:836 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ tab ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pIdxInfo+0 S8 A64])
        (reg:DI 4 si [ pIdxInfo ])) ./ext/misc/csv.c:836 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pIdxInfo ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 61)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 pIdxInfo+0 S8 A64])) ./ext/misc/csv.c:837 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DF 62)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [0  S8 A64])) ./ext/misc/csv.c:837 133 {*movdf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/j:DF (plus:DI (reg/f:DI 61)
                (const_int 64 [0x40])) [0 pIdxInfo_1(D)->estimatedCost+0 S8 A64])
        (reg:DF 62)) ./ext/misc/csv.c:837 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 62)
        (expr_list:REG_DEAD (reg/f:DI 61)
            (nil))))
(insn 10 9 13 2 (set (reg:SI 59 [ D.6703 ])
        (const_int 0 [0])) ./ext/misc/csv.c:868 89 {*movsi_internal}
     (nil))
(insn 13 10 17 2 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.6703 ])) ./ext/misc/csv.c:868 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.6703 ])
        (nil)))
(insn 17 13 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) ./ext/misc/csv.c:869 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ <retval> ])
        (nil)))
(insn 20 17 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:869 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sqlite3_csv_init (sqlite3_csv_init, funcdef_no=31, decl_uid=5806, cgraph_uid=31)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r67: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r67,l0) best AREG, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r66,l0) best DIREG, allocno GENERAL_REGS
    r65: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r65,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r67,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a6(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a7(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 32(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r67): [9..10]
 a3(r60): [13..24]
 a4(r66): [15..22]
 a5(r59): [25..26]
 a6(r65): [27..28]
 a7(r63): [31..34]
 a8(r64): [31..32]
Compressing live ranges: from 43 to 14 - 32%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r67): [4..5]
 a3(r60): [6..7]
 a4(r66): [6..7]
 a5(r59): [8..9]
 a6(r65): [10..11]
 a7(r63): [12..13]
 a8(r64): [12..13]
  regions=1, blocks=3, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    5:r59  l0     0    3:r60  l0     0    1:r61  l0     0    0:r62  l0     0
    7:r63  l0     0    8:r64  l0     1    6:r65  l0     0    4:r66  l0     5
    2:r67  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sqlite3_csv_init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} 
;;    total ref usage 111{77d,34u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 pzErrMsg+0 S8 A64])
        (reg:DI 4 si [ pzErrMsg ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pzErrMsg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 pApi+0 S8 A64])
        (reg:DI 1 dx [ pApi ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ pApi ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 63)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 64)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 pApi+0 S8 A64])) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (reg/f:DI 63) [0 sqlite3_api+0 S8 A64])
        (reg/f:DI 64)) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (expr_list:REG_DEAD (reg/f:DI 63)
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 65)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 59 [ sqlite3_api.44 ])
        (mem/f/c:DI (reg/f:DI 65) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 65)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 60 [ D.6704 ])
        (mem/f/j:DI (plus:DI (reg/f:DI 59 [ sqlite3_api.44 ])
                (const_int 376 [0x178])) [0 sqlite3_api.44_2->create_module+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 59 [ sqlite3_api.44 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 db+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("CsvModule") [flags 0x2]  <var_decl 0x7fbdb4415260 CsvModule>)) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fbdb45a8b48 *.LC35>)) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 66)) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 60 [ D.6704 ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:947 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 60 [ D.6704 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 20 19 21 2 (set (reg:SI 67)
        (reg:SI 0 ax)) ./ext/misc/csv.c:947 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 67)) ./ext/misc/csv.c:947 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
(insn 22 21 25 2 (set (reg:SI 61 [ D.6705 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) ./ext/misc/csv.c:953 89 {*movsi_internal}
     (nil))
(insn 25 22 29 2 (set (reg:SI 62 [ <retval> ])
        (reg:SI 61 [ D.6705 ])) ./ext/misc/csv.c:953 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 61 [ D.6705 ])
        (nil)))
(insn 29 25 32 2 (set (reg/i:SI 0 ax)
        (reg:SI 62 [ <retval> ])) ./ext/misc/csv.c:957 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 62 [ <retval> ])
        (nil)))
(insn 32 29 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:957 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

