
;; Function csv_reader_init (csv_reader_init, funcdef_no=2, decl_uid=5523, cgraph_uid=2)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) m  (1) qn {*movqi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
starting the processing of deferred insns
ending the processing of deferred insns


csv_reader_init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={10d,9u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,12u} r7={1d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 52{27d,25u,0e} in 19{19 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 60 61 62 63 64 65 66 67
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:89 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [59])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:90 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:DI (reg/f:DI 0 ax [59]) [0 p_1(D)->in+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:90 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [59])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [60])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:91 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [60])
                (const_int 8 [0x8])) [0 p_1(D)->z+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:91 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [60])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [61])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [61])
                (const_int 16 [0x10])) [0 p_1(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:92 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [61])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [62])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:93 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [62])
                (const_int 20 [0x14])) [0 p_1(D)->nAlloc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:93 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [62])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:94 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [63])
                (const_int 24 [0x18])) [0 p_1(D)->nLine+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:94 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [64])
                (const_int 28 [0x1c])) [0 p_1(D)->bNotFirst+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:95 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [65])
                (const_int 48 [0x30])) [0 p_1(D)->nIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:97 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [66])
                (const_int 56 [0x38])) [0 p_1(D)->zIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:97 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:98 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 0 2 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 64 [0x40])) [0 p_1(D)->zErr+0 S1 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:98 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_reader_reset (csv_reader_reset, funcdef_no=3, decl_uid=5526, cgraph_uid=3)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rzw {*call}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 21
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 30
changing reg in insn 28
changing reg in insn 29
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 32
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 30.
deleting insn with uid = 30.
verify found no changes in insn with uid = 33.


csv_reader_reset

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={16d,11u} r1={9d,4u} r2={5d} r4={5d} r5={9d,5u} r6={1d,10u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={5d,1u} r18={4d} r19={4d} r20={1d,1u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 254{214d,40u,0e} in 26{22 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 67
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:102 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:103 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:59 D.6520 ] [59])
        (mem/f/j:DI (reg/f:DI 0 ax [67]) [0 p_1(D)->in+0 S8 A64])) ./ext/misc/csv.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.6520 ] [59])
            (const_int 0 [0]))) ./ext/misc/csv.c:103 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6520 ] [59])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) ./ext/misc/csv.c:103 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 22)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 68 69 70
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [orig:60 D.6520 ] [60])
        (mem/f/j:DI (reg/f:DI 0 ax [68]) [0 p_1(D)->in+0 S8 A64])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:60 D.6520 ] [60])) ./ext/misc/csv.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6520 ] [60])
        (nil)))
(call_insn 14 13 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fbdb47a9900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:104 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 0 ax [69])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (set (reg/f:DI 0 ax [orig:61 sqlite3_api.0 ] [61])
        (mem/f/c:DI (reg/f:DI 0 ax [69]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 0 ax [orig:62 D.6521 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:61 sqlite3_api.0 ] [61])
                (const_int 464 [0x1d0])) [0 sqlite3_api.0_4->free+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 sqlite3_api.0 ] [61])
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 1 dx [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 1 dx [orig:63 D.6522 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [70])
                (const_int 56 [0x38])) [0 p_1(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [70])
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:63 D.6522 ] [63])) ./ext/misc/csv.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:63 D.6522 ] [63])
        (nil)))
(call_insn 21 20 22 3 (call (mem:QI (reg/f:DI 0 ax [orig:62 D.6521 ] [62]) [0 *_5 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:105 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6521 ] [62])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 66 71 72 73
(code_label 22 21 23 4 3 "" [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:DI 0 ax [71])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 0 ax [orig:64 sqlite3_api.1 ] [64])
        (mem/f/c:DI (reg/f:DI 0 ax [71]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 26 25 27 4 (set (reg/f:DI 0 ax [orig:65 D.6521 ] [65])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:64 sqlite3_api.1 ] [64])
                (const_int 464 [0x1d0])) [0 sqlite3_api.1_7->free+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 sqlite3_api.1 ] [64])
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 1 dx [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 1 dx [orig:66 D.6522 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [72])
                (const_int 8 [0x8])) [0 p_1(D)->z+0 S8 A64])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [72])
        (nil)))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:66 D.6522 ] [66])) ./ext/misc/csv.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:66 D.6522 ] [66])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (reg/f:DI 0 ax [orig:65 D.6521 ] [65]) [0 *_8 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:107 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6521 ] [65])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:108 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [73])) ./ext/misc/csv.c:108 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [73])
        (nil)))
(call_insn 33 32 0 4 (call (mem:QI (symbol_ref:DI ("csv_reader_init") [flags 0x3]  <function_decl 0x7fbdb47cdf00 csv_reader_init>) [0 csv_reader_init S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:108 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_errmsg (csv_errmsg, funcdef_no=4, decl_uid=5530, cgraph_uid=4)


********** Local #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=240, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=-176, prev_offset=0)
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 9:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 11:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) m  (1) x {*movv4sf_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=610,losers=1 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=610,losers=1 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 3 in insn 25:  (0) m  (1) re {*movdi_internal_rex64}
      Creating newreg=67, assigning class GENERAL_REGS to r67
   25: [frame:DI-0xc0]=r67:DI
    Inserting insn reload before:
   44: {r67:DI=argp:DI+0x10;clobber flags:CC;}

          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=17,losers=2,rld_nregs=2
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=1,losers=0,rld_nregs=0
          alt=0,overall=18,losers=2 -- reject
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=10,losers=1 -- reject
          alt=3,overall=10,losers=1 -- reject
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=610,losers=1 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=610,losers=1 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 3 in insn 26:  (0) m  (1) re {*movdi_internal_rex64}
      Creating newreg=68, assigning class GENERAL_REGS to r68
   26: [frame:DI-0xb8]=r68:DI
    Inserting insn reload before:
   45: {r68:DI=frame:DI-0xb0;clobber flags:CC;}

          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=17,losers=2,rld_nregs=2
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=1,losers=0,rld_nregs=0
          alt=0,overall=18,losers=2 -- reject
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=10,losers=1 -- reject
          alt=3,overall=10,losers=1 -- reject
	 Choosing alt 3 in insn 45:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 31:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rzw {*call_value}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 38: point = 0
   Insn 37: point = 1
   Insn 36: point = 1
   Insn 35: point = 2
   Insn 34: point = 3
   Insn 33: point = 4
   Insn 32: point = 5
   Insn 31: point = 6
   Insn 30: point = 8
   Insn 29: point = 9
   Insn 28: point = 11
   Insn 27: point = 13
   Insn 26: point = 14
   Insn 45: point = 15
   Insn 25: point = 16
   Insn 44: point = 17
   Insn 24: point = 18
   Insn 23: point = 18
   Insn 18: point = 18
  BB 3
   Insn 16: point = 18
   Insn 15: point = 18
   Insn 14: point = 18
   Insn 13: point = 18
   Insn 12: point = 18
   Insn 11: point = 18
   Insn 10: point = 18
   Insn 9: point = 18
  BB 2
   Insn 8: point = 18
   Insn 7: point = 18
   Insn 6: point = 18
   Insn 5: point = 18
   Insn 4: point = 18
   Insn 3: point = 18
   Insn 2: point = 18
 r59: [10..11]
 r60: [0..9]
 r61: [1..6]
 r63: [12..13]
 r64: [7..8]
 r65: [3..5]
 r66: [2..4]
 r67: [16..17]
 r68: [14..15]
Compressing live ranges: from 18 to 12 - 66%
Ranges after the compression:
 r59: [4..5]
 r60: [0..3]
 r61: [0..1]
 r63: [6..7]
 r64: [2..3]
 r65: [0..1]
 r66: [0..1]
 r67: [10..11]
 r68: [8..9]
	 Assigning to 67 (cl=GENERAL_REGS, orig=67, freq=2, tfirst=67, tfreq=2)...
	   Assign 0 to reload r67 (freq=2)
	 Assigning to 68 (cl=GENERAL_REGS, orig=68, freq=2, tfirst=68, tfreq=2)...
	   Assign 0 to reload r68 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=240, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=-176, prev_offset=-176)
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 38
changing reg in insn 31
changing reg in insn 36
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 35
starting the processing of deferred insns
ending the processing of deferred insns


csv_errmsg

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9]
;;  ref usage 	r0={7d,6u} r1={5d,4u} r2={4d,3u} r4={4d,3u} r5={3d,2u} r6={1d,27u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,1u} r18={1d} r19={1d} r20={1d,1u,1e} r21={2d,1u} r22={2d,1u} r23={2d,1u} r24={2d,1u} r25={2d,1u} r26={2d,1u} r27={2d,1u} r28={2d,1u} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 143{80d,62u,1e} in 34{33 regular + 1 call} insns.
(note 1 0 20 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags]
(note 20 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 20 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [0  S8 A8])
        (reg:DI 1 dx)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx)
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0  S8 A8])
        (reg:DI 2 cx)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0  S8 A8])
        (reg:DI 37 r8)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0  S8 A8])
        (reg:DI 38 r9)) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax)
            (const_int 0 [0]))) ./ext/misc/csv.c:112 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(jump_insn 8 7 41 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:112 612 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  def 	
(note 41 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 41 10 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0  S16 A128])
        (reg:V4SF 21 xmm0)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 21 xmm0)
        (nil)))
(insn 10 9 11 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0  S16 A128])
        (reg:V4SF 22 xmm1)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 22 xmm1)
        (nil)))
(insn 11 10 12 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0  S16 A128])
        (reg:V4SF 23 xmm2)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 23 xmm2)
        (nil)))
(insn 12 11 13 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0  S16 A128])
        (reg:V4SF 24 xmm3)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 24 xmm3)
        (nil)))
(insn 13 12 14 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0  S16 A128])
        (reg:V4SF 25 xmm4)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 25 xmm4)
        (nil)))
(insn 14 13 15 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0  S16 A128])
        (reg:V4SF 26 xmm5)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 26 xmm5)
        (nil)))
(insn 15 14 16 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0  S16 A128])
        (reg:V4SF 27 xmm6)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 27 xmm6)
        (nil)))
(insn 16 15 17 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0  S16 A128])
        (reg:V4SF 28 xmm7)) ./ext/misc/csv.c:112 1148 {*movv4sf_internal}
     (expr_list:REG_DEAD (reg:V4SF 28 xmm7)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 63 64 65 66
(code_label 17 16 42 4 5 "" [1 uses])
(note 42 17 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 42 19 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [0 zFormat+0 S8 A64])
        (reg:DI 4 si [ zFormat ])) ./ext/misc/csv.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zFormat ])
        (nil)))
(note 19 18 23 4 NOTE_INSN_FUNCTION_BEG)
(insn 23 19 24 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 MEM[(struct [1] *)&ap].gp_offset+0 S4 A64])
        (const_int 16 [0x10])) ./ext/misc/csv.c:114 89 {*movsi_internal}
     (nil))
(insn 24 23 44 4 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [0 MEM[(struct [1] *)&ap].fp_offset+0 S4 A32])
        (const_int 48 [0x30])) ./ext/misc/csv.c:114 89 {*movsi_internal}
     (nil))
(insn 44 24 25 4 (parallel [
            (set (reg:DI 0 ax [67])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:114 274 {*adddi_1}
     (nil))
(insn 25 44 45 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(struct [1] *)&ap].overflow_arg_area+0 S8 A64])
        (reg:DI 0 ax [67])) ./ext/misc/csv.c:114 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (nil)))
(insn 45 25 26 4 (parallel [
            (set (reg:DI 0 ax [68])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:114 274 {*adddi_1}
     (nil))
(insn 26 45 27 4 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 MEM[(struct [1] *)&ap].reg_save_area+0 S8 A64])
        (reg:DI 0 ax [68])) ./ext/misc/csv.c:114 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 0 ax [63])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 0 ax [orig:59 sqlite3_api.2 ] [59])
        (mem/f/c:DI (reg/f:DI 0 ax [63]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 0 ax [orig:60 D.6523 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:59 sqlite3_api.2 ] [59])
                (const_int 1520 [0x5f0])) [0 sqlite3_api.2_1->xvsnprintf+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 sqlite3_api.2 ] [59])
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 1 dx [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [0 p+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg/f:DI 4 si [orig:61 D.6524 ] [61])
                (plus:DI (reg/f:DI 1 dx [64])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:115 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [64])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
                (const_int 64 [0x40]))
            (nil))))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 2 cx [65])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -200 [0xffffffffffffff38])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:115 274 {*adddi_1}
     (nil))
(insn 33 32 34 4 (set (reg:DI 1 dx [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [0 zFormat+0 S8 A64])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 4 (set (reg:DI 2 cx)
        (reg:DI 2 cx [65])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [65])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 1 dx)
        (reg:DI 1 dx [66])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [66])
        (nil)))
(insn 36 35 37 4 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:61 D.6524 ] [61])) ./ext/misc/csv.c:115 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:61 D.6524 ] [61])
        (nil)))
(insn 37 36 38 4 (set (reg:SI 5 di)
        (const_int 200 [0xc8])) ./ext/misc/csv.c:115 89 {*movsi_internal}
     (nil))
(call_insn 38 37 0 4 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:60 D.6523 ] [60]) [0 *_2 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:115 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6523 ] [60])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_reader_open (csv_reader_open, funcdef_no=5, decl_uid=5536, cgraph_uid=5)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 75:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 76:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 92
changing reg in insn 63
changing reg in insn 29
changing reg in insn 95
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 38
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 52
changing reg in insn 50
changing reg in insn 51
changing reg in insn 69
changing reg in insn 70
changing reg in insn 87
changing reg in insn 89
changing reg in insn 95
changing reg in insn 99
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 26
changing reg in insn 34
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 60
changing reg in insn 68
changing reg in insn 69
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
starting the processing of deferred insns
ending the processing of deferred insns


csv_reader_open

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={37d,30u} r1={18d,10u} r2={10d,1u} r4={13d,5u} r5={17d,9u} r6={1d,30u} r7={1d,19u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={12d,4u} r18={8d} r19={8d} r20={1d,1u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} 
;;    total ref usage 533{424d,109u,0e} in 76{68 regular + 8 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])
        (reg:DI 4 si [ zFilename ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zFilename ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])
        (reg:DI 1 dx [ zData ])) ./ext/misc/csv.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ zData ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:127 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ./ext/misc/csv.c:127 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 66)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 72 73 74
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [orig:60 sqlite3_api.3 ] [60])
        (mem/f/c:DI (reg/f:DI 0 ax [72]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 13 12 14 3 (set (reg/f:DI 0 ax [orig:61 D.6528 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:60 sqlite3_api.3 ] [60])
                (const_int 544 [0x220])) [0 sqlite3_api.3_3->malloc+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 sqlite3_api.3 ] [60])
        (nil)))
(insn 14 13 15 3 (set (reg:SI 5 di)
        (const_int 1024 [0x400])) ./ext/misc/csv.c:128 89 {*movsi_internal}
     (nil))
(call_insn 15 14 16 3 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:61 D.6528 ] [61]) [0 *_4 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:128 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6528 ] [61])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 0 ax [orig:62 D.6529 ] [62])
        (reg:DI 0 ax)) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 3 (set (reg/f:DI 1 dx [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [73])
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])
        (reg/f:DI 0 ax [orig:62 D.6529 ] [62])) ./ext/misc/csv.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6529 ] [62])
            (nil))))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:129 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 0 ax [orig:63 D.6530 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [74])
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:129 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:63 D.6530 ] [63])
            (const_int 0 [0]))) ./ext/misc/csv.c:129 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6530 ] [63])
        (nil)))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ./ext/misc/csv.c:129 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 75
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [75])) ./ext/misc/csv.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [75])
        (nil)))
(insn 27 26 28 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:130 91 {*movqi_internal}
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:130 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 105 4 (set (reg:SI 0 ax [orig:59 D.6527 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:131 89 {*movsi_internal}
     (nil))
(jump_insn 105 29 106 4 (set (pc)
        (label_ref 93)) ./ext/misc/csv.c:131 650 {jump}
     (nil)
 -> 93)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 106 105 32)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 76 77 78
(code_label 32 106 33 5 8 "" [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fbdb44bf688 *.LC1>)) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [76])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [76])
        (nil)))
(call_insn 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7fbdb47a9c00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:133 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 5 (set (reg/f:DI 0 ax [orig:64 D.6531 ] [64])
        (reg:DI 0 ax)) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 5 (set (reg/f:DI 1 dx [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (mem/f/j:DI (reg/f:DI 1 dx [77]) [0 p_6(D)->in+0 S8 A64])
        (reg/f:DI 0 ax [orig:64 D.6531 ] [64])) ./ext/misc/csv.c:133 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6531 ] [64])
            (nil))))
(insn 41 40 42 5 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:134 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg/f:DI 0 ax [orig:65 D.6531 ] [65])
        (mem/f/j:DI (reg/f:DI 0 ax [78]) [0 p_6(D)->in+0 S8 A64])) ./ext/misc/csv.c:134 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:65 D.6531 ] [65])
            (const_int 0 [0]))) ./ext/misc/csv.c:134 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6531 ] [65])
        (nil)))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) ./ext/misc/csv.c:134 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 90)
;;  succ:       6 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 66 67 68 79 80 81 82 83
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:DI 0 ax [79])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 0 ax [orig:66 sqlite3_api.4 ] [66])
        (mem/f/c:DI (reg/f:DI 0 ax [79]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (nil)))
(insn 48 47 49 6 (set (reg/f:DI 0 ax [orig:67 D.6532 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:66 sqlite3_api.4 ] [66])
                (const_int 464 [0x1d0])) [0 sqlite3_api.4_11->free+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 sqlite3_api.4 ] [66])
        (nil)))
(insn 49 48 50 6 (set (reg/f:DI 1 dx [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 1 dx [orig:68 D.6530 ] [68])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [80])
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [80])
        (nil)))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:68 D.6530 ] [68])) ./ext/misc/csv.c:135 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:68 D.6530 ] [68])
        (nil)))
(call_insn 52 51 53 6 (call (mem:QI (reg/f:DI 0 ax [orig:67 D.6532 ] [67]) [0 *_12 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:135 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6532 ] [67])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 6 (set (reg:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:136 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [81])) ./ext/misc/csv.c:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [81])
        (nil)))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:136 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 6 (set (reg:DI 1 dx [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 zFilename+0 S8 A64])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 6 (set (reg:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 6 (set (reg:DI 1 dx)
        (reg:DI 1 dx [82])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [82])
        (nil)))
(insn 59 58 60 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fbdb44bf720 *.LC2>)) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [83])) ./ext/misc/csv.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 61 60 62 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:137 91 {*movqi_internal}
     (nil))
(call_insn 62 61 63 6 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:137 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 63 62 107 6 (set (reg:SI 0 ax [orig:59 D.6527 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:138 89 {*movsi_internal}
     (nil))
(jump_insn 107 63 108 6 (set (pc)
        (label_ref 93)) ./ext/misc/csv.c:138 650 {jump}
     (nil)
 -> 93)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 108 107 66)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 84
(code_label 66 108 67 7 7 "" [1 uses])
(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 7 (set (reg/f:DI 0 ax [orig:69 D.6531 ] [69])
        (mem/f/j:DI (reg/f:DI 0 ax [84]) [0 p_6(D)->in+0 S8 A64])) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:69 D.6531 ] [69])
            (const_int 0 [0]))) ./ext/misc/csv.c:141 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.6531 ] [69])
        (nil)))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ./ext/misc/csv.c:141 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5538") [flags 0x2]  <var_decl 0x7fbdb47c2980 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 8 (set (reg:SI 1 dx)
        (const_int 141 [0x8d])) ./ext/misc/csv.c:141 89 {*movsi_internal}
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fbdb44bf850 *.LC4>)) ./ext/misc/csv.c:141 87 {*movdi_internal_rex64}
     (nil))
(call_insn 77 76 78 8 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:141 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 78 77 79)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 85 86 87 88
(code_label 79 78 80 9 11 "" [1 uses])
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 9 (set (reg/f:DI 1 dx [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 9 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 56 [0x38])) [0 p_6(D)->zIn+0 S8 A64])
        (reg/f:DI 1 dx [86])) ./ext/misc/csv.c:142 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [86])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
            (nil))))
(insn 84 83 85 9 (set (reg:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 zData+0 S8 A64])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(call_insn/i 86 85 87 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:143 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 87 86 88 9 (set (reg:DI 0 ax [orig:70 D.6533 ] [70])
        (reg:DI 0 ax)) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 88 87 89 9 (set (reg/f:DI 1 dx [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 9 (set (mem/j:DI (plus:DI (reg/f:DI 1 dx [88])
                (const_int 48 [0x30])) [0 p_6(D)->nIn+0 S8 A64])
        (reg:DI 0 ax [orig:70 D.6533 ] [70])) ./ext/misc/csv.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [88])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 D.6533 ] [70])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 90 89 91 10 10 "" [1 uses])
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 10 (set (reg:SI 0 ax [orig:59 D.6527 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:145 89 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              4 [100.0%] 
;;              6 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 71
(code_label 93 92 94 11 9 "" [2 uses])
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 99 11 (set (reg:SI 0 ax [orig:71 <retval> ] [71])
        (reg:SI 0 ax [orig:59 D.6527 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6527 ] [59])
        (nil)))
(insn 99 95 102 11 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:71 <retval> ] [71])) ./ext/misc/csv.c:146 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 <retval> ] [71])
        (nil)))
(insn 102 99 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:146 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_getc_refill (csv_getc_refill, funcdef_no=6, decl_uid=5540, cgraph_uid=6)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 55:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) qm {extendqisi2}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 61
changing reg in insn 48
changing reg in insn 64
changing reg in insn 7
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 23
changing reg in insn 35
changing reg in insn 38
changing reg in insn 37
changing reg in insn 41
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 64
changing reg in insn 68
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 21
changing reg in insn 22
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 43
changing reg in insn 44
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
starting the processing of deferred insns
ending the processing of deferred insns


csv_getc_refill

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={22d,19u} r1={10d,6u} r2={7d,3u} r4={7d,3u} r5={7d,4u} r6={1d,21u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,3u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 258{186d,72u,0e} in 48{45 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 68 69
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:151 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 1 dx [orig:60 D.6540 ] [60])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [68])
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [orig:61 D.6540 ] [61])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (nil)))
(insn 10 9 11 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 1 dx [orig:60 D.6540 ] [60])
            (reg:DI 0 ax [orig:61 D.6540 ] [61]))) ./ext/misc/csv.c:154 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.6540 ] [61])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6540 ] [60])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) ./ext/misc/csv.c:154 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5543") [flags 0x2]  <var_decl 0x7fbdb47c2ab0 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 dx)
        (const_int 154 [0x9a])) ./ext/misc/csv.c:154 89 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fbdb44c6558 *.LC5>)) ./ext/misc/csv.c:154 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:154 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 70
(code_label 19 18 20 4 13 "" [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 0 ax [orig:62 D.6541 ] [62])
        (mem/f/j:DI (reg/f:DI 0 ax [70]) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.6541 ] [62])
            (const_int 0 [0]))) ./ext/misc/csv.c:155 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6541 ] [62])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) ./ext/misc/csv.c:155 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5543") [flags 0x2]  <var_decl 0x7fbdb47c2ab0 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 1 dx)
        (const_int 155 [0x9b])) ./ext/misc/csv.c:155 89 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fbdb44c65f0 *.LC6>)) ./ext/misc/csv.c:155 87 {*movdi_internal_rex64}
     (nil))
(call_insn 30 29 31 5 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:155 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 31 30 32)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 71 72 73
(code_label 32 31 33 6 14 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 6 (set (reg/f:DI 1 dx [orig:63 D.6541 ] [63])
        (mem/f/j:DI (reg/f:DI 0 ax [71]) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 36 35 37 6 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 0 ax [orig:64 D.6542 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [72])
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 38 37 39 6 (set (reg:DI 2 cx)
        (reg/f:DI 1 dx [orig:63 D.6541 ] [63])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:63 D.6541 ] [63])
        (nil)))
(insn 39 38 40 6 (set (reg:DI 1 dx)
        (const_int 1024 [0x400])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:64 D.6542 ] [64])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6542 ] [64])
        (nil)))
(call_insn 42 41 43 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7fbdb47c5500 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:157 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 43 42 44 6 (set (reg:DI 0 ax [73])
        (reg:DI 0 ax)) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 6 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])
        (reg:DI 0 ax [73])) ./ext/misc/csv.c:157 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [73])
        (nil)))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:158 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) ./ext/misc/csv.c:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 74 7 (set (reg:SI 0 ax [orig:59 D.6539 ] [59])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:158 89 {*movsi_internal}
     (nil))
(jump_insn 74 48 75 7 (set (pc)
        (label_ref 62)) ./ext/misc/csv.c:158 650 {jump}
     (nil)
 -> 62)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 75 74 51)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 65 66 74 75 76 77
(code_label 51 75 52 8 15 "" [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 8 (set (reg:DI 1 dx [75])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 got+0 S8 A64])) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 8 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [74])
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])
        (reg:DI 1 dx [75])) ./ext/misc/csv.c:159 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [75])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
            (nil))))
(insn 56 55 57 8 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:160 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 8 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [76])
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])
        (const_int 1 [0x1])) ./ext/misc/csv.c:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 58 57 59 8 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:161 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 8 (set (reg/f:DI 0 ax [orig:65 D.6542 ] [65])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [77])
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 60 59 61 8 (set (reg:QI 0 ax [orig:66 D.6543 ] [66])
        (mem:QI (reg/f:DI 0 ax [orig:65 D.6542 ] [65]) [0 *_10+0 S1 A8])) ./ext/misc/csv.c:161 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6542 ] [65])
        (nil)))
(insn 61 60 62 8 (set (reg:SI 0 ax [orig:59 D.6539 ] [59])
        (sign_extend:SI (reg:QI 0 ax [orig:66 D.6543 ] [66]))) ./ext/misc/csv.c:161 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:66 D.6543 ] [66])
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 67
(code_label 62 61 63 9 16 "" [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 68 9 (set (reg:SI 0 ax [orig:67 <retval> ] [67])
        (reg:SI 0 ax [orig:59 D.6539 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6539 ] [59])
        (nil)))
(insn 68 64 71 9 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:67 <retval> ] [67])) ./ext/misc/csv.c:162 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 <retval> ] [67])
        (nil)))
(insn 71 68 0 9 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:162 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_getc (csv_getc, funcdef_no=7, decl_uid=5545, cgraph_uid=7)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 38
	 Choosing alt 0 in insn 38:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) qm {*zero_extendqisi2}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 50: point = 0
   Insn 47: point = 0
   Insn 43: point = 1
  BB 5
   Insn 55: point = 4
   Insn 26: point = 4
  BB 4
   Insn 53: point = 5
   Insn 21: point = 5
   Insn 20: point = 6
   Insn 19: point = 6
   Insn 18: point = 7
  BB 3
   Insn 16: point = 8
   Insn 15: point = 8
   Insn 14: point = 9
   Insn 13: point = 11
  BB 6
   Insn 40: point = 12
   Insn 39: point = 14
   Insn 38: point = 16
   Insn 37: point = 18
   Insn 36: point = 19
   Insn 35: point = 20
   Insn 34: point = 21
   Insn 33: point = 23
   Insn 32: point = 24
   Insn 31: point = 26
  BB 2
   Insn 11: point = 27
   Insn 10: point = 27
   Insn 9: point = 28
   Insn 8: point = 30
   Insn 7: point = 31
   Insn 6: point = 33
   Insn 2: point = 34
 r59: [12..12] [2..5]
 r60: [27..31]
 r61: [27..28]
 r62: [8..9]
 r63: [17..24]
 r64: [17..21]
 r65: [18..20]
 r66: [15..16]
 r67: [13..14]
 r68: [0..1]
 r69: [32..33]
 r70: [29..30]
 r71: [10..11]
 r72: [6..7]
 r73: [25..26]
 r74: [22..23]
 r75: [18..19]
Compressing live ranges: from 34 to 27 - 79%
Ranges after the compression:
 r59: [10..10] [2..3]
 r60: [21..24]
 r61: [21..22]
 r62: [6..7]
 r63: [15..18]
 r64: [15..16]
 r65: [15..16]
 r66: [13..14]
 r67: [11..12]
 r68: [0..1]
 r69: [25..26]
 r70: [23..24]
 r71: [8..9]
 r72: [4..5]
 r73: [19..20]
 r74: [17..18]
 r75: [15..16]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 40
changing reg in insn 26
changing reg in insn 21
changing reg in insn 43
changing reg in insn 7
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 47
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.


csv_getc

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={18d,17u} r1={4d,2u} r2={3d,1u} r4={3d,1u} r5={3d,2u} r6={1d,15u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={5d,2u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 136{87d,49u,0e} in 31{30 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 69 70
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 1 dx [orig:60 D.6547 ] [60])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [69])
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [orig:61 D.6547 ] [61])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [70])
                (const_int 48 [0x30])) [0 p_2(D)->nIn+0 S8 A64])) ./ext/misc/csv.c:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (nil)))
(insn 10 9 11 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 1 dx [orig:60 D.6547 ] [60])
            (reg:DI 0 ax [orig:61 D.6547 ] [61]))) ./ext/misc/csv.c:166 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.6547 ] [61])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6547 ] [60])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ./ext/misc/csv.c:166 612 {*jcc_1}
     (nil)
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 71
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:62 D.6548 ] [62])
        (mem/f/j:DI (reg/f:DI 0 ax [71]) [0 p_2(D)->in+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.6548 ] [62])
            (const_int 0 [0]))) ./ext/misc/csv.c:167 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6548 ] [62])
        (nil)))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:167 612 {*jcc_1}
     (nil)
 -> 24)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 72
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [72])) ./ext/misc/csv.c:167 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [72])
        (nil)))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc_refill") [flags 0x3]  <function_decl 0x7fbdb47d2700 csv_getc_refill>) [0 csv_getc_refill S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:167 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 20 53 4 (set (reg:SI 0 ax [orig:59 D.6546 ] [59])
        (reg:SI 0 ax)) ./ext/misc/csv.c:167 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 53 21 54 4 (set (pc)
        (label_ref 41)) ./ext/misc/csv.c:167 650 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 54 53 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 24 54 25 5 19 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 55 5 (set (reg:SI 0 ax [orig:59 D.6546 ] [59])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:168 89 {*movsi_internal}
     (nil))
(jump_insn 55 26 56 5 (set (pc)
        (label_ref 41)) ./ext/misc/csv.c:168 650 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 56 55 29)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 63 64 65 66 67 73 74 75
(code_label 29 56 30 6 18 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 4 si [orig:63 D.6549 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [73])
                (const_int 56 [0x38])) [0 p_2(D)->zIn+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (nil)))
(insn 33 32 34 6 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:DI 0 ax [orig:64 D.6547 ] [64])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [74])
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 2 cx [orig:65 D.6547 ] [65])
                (plus:DI (reg:DI 0 ax [orig:64 D.6547 ] [64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:170 274 {*adddi_1}
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 1 dx [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 6 (set (mem/j:DI (plus:DI (reg/f:DI 1 dx [75])
                (const_int 40 [0x28])) [0 p_2(D)->iIn+0 S8 A64])
        (reg:DI 2 cx [orig:65 D.6547 ] [65])) ./ext/misc/csv.c:170 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [75])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:65 D.6547 ] [65])
            (nil))))
(insn 38 37 39 6 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.6550 ] [66])
                (plus:DI (reg:DI 0 ax [orig:64 D.6547 ] [64])
                    (reg/f:DI 4 si [orig:63 D.6549 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:170 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:64 D.6547 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:63 D.6549 ] [63])
            (nil))))
(insn 39 38 40 6 (set (reg:QI 0 ax [orig:67 D.6551 ] [67])
        (mem:QI (reg/f:DI 0 ax [orig:66 D.6550 ] [66]) [0 *_12+0 S1 A8])) ./ext/misc/csv.c:170 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6550 ] [66])
        (nil)))
(insn 40 39 41 6 (set (reg:SI 0 ax [orig:59 D.6546 ] [59])
        (zero_extend:SI (reg:QI 0 ax [orig:67 D.6551 ] [67]))) ./ext/misc/csv.c:170 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:67 D.6551 ] [67])
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              4 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 68
(code_label 41 40 42 7 20 "" [2 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 47 7 (set (reg:SI 0 ax [orig:68 <retval> ] [68])
        (reg:SI 0 ax [orig:59 D.6546 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6546 ] [59])
        (nil)))
(insn 47 43 50 7 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:68 <retval> ] [68])) ./ext/misc/csv.c:171 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 <retval> ] [68])
        (nil)))
(insn 50 47 0 7 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:171 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_resize_and_append (csv_resize_and_append, funcdef_no=8, decl_uid=5549, cgraph_uid=8)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 10:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 43:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 44:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 51:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 55
changing reg in insn 45
changing reg in insn 58
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 22
changing reg in insn 17
changing reg in insn 20
changing reg in insn 19
changing reg in insn 21
changing reg in insn 35
changing reg in insn 42
changing reg in insn 37
changing reg in insn 41
changing reg in insn 38
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 44
changing reg in insn 58
changing reg in insn 62
changing reg in insn 3
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 50
changing reg in insn 52
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 22.
deleting insn with uid = 22.
verify found no changes in insn with uid = 54.


csv_resize_and_append

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={25d,24u} r1={10d,7u} r2={5d,2u} r4={6d,4u} r5={5d,3u} r6={1d,22u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 218{147d,71u,0e} in 50{48 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 72 73 74 75 76 77 78
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 0 ax [72])
        (reg:SI 4 si [ c ])) ./ext/misc/csv.c:175 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ c ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 c+0 S1 A8])
        (reg:QI 0 ax [72])) ./ext/misc/csv.c:175 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [72])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:177 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:60 D.6552 ] [60])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [73])
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])) ./ext/misc/csv.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:61 D.6552 ] [61])
                (plus:SI (reg:SI 0 ax [orig:60 D.6552 ] [60])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:177 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6552 ] [60])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [74])
                (ashift:SI (reg:SI 0 ax [orig:61 D.6552 ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:177 512 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6552 ] [61])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])
        (reg:SI 0 ax [74])) ./ext/misc/csv.c:177 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [74])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 0 ax [75])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [orig:62 sqlite3_api.5 ] [62])
        (mem/f/c:DI (reg/f:DI 0 ax [75]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [orig:63 D.6553 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:62 sqlite3_api.5 ] [62])
                (const_int 1592 [0x638])) [0 sqlite3_api.5_6->realloc64+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 sqlite3_api.5 ] [62])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 1 dx [76])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])) ./ext/misc/csv.c:178 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 2 cx [orig:64 D.6554 ] [64])
        (sign_extend:DI (reg:SI 1 dx [76]))) ./ext/misc/csv.c:178 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [76])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 1 dx [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 1 dx [orig:65 D.6555 ] [65])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [77])
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [77])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [orig:64 D.6554 ] [64])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:64 D.6554 ] [64])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:65 D.6555 ] [65])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:65 D.6555 ] [65])
        (nil)))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:63 D.6553 ] [63]) [0 *_7 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:178 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6553 ] [63])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 2 (set (reg:DI 0 ax [78])
        (reg:DI 0 ax)) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
        (reg:DI 0 ax [78])) ./ext/misc/csv.c:178 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [78])
        (nil)))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:179 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) ./ext/misc/csv.c:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 66 67 68 69 70 79 80 81 82 83 84 85 86
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 3 (set (reg/f:DI 1 dx [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [79])
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])
        (reg/f:DI 1 dx [80])) ./ext/misc/csv.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [80])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
            (nil))))
(insn 31 30 32 3 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 3 (set (reg:SI 1 dx [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nNew+0 S4 A32])) ./ext/misc/csv.c:181 89 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [81])
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])
        (reg:SI 1 dx [82])) ./ext/misc/csv.c:181 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [82])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
            (nil))))
(insn 34 33 35 3 (set (reg/f:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 4 si [orig:66 D.6555 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [83])
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
        (nil)))
(insn 36 35 37 3 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 3 (set (reg:SI 0 ax [orig:67 D.6552 ] [67])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [84])
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:182 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (reg:SI 2 cx [orig:68 D.6552 ] [68])
                (plus:SI (reg:SI 0 ax [orig:67 D.6552 ] [67])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:182 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 3 (set (reg/f:DI 1 dx [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:182 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 3 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [85])
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])
        (reg:SI 2 cx [orig:68 D.6552 ] [68])) ./ext/misc/csv.c:182 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [85])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:68 D.6552 ] [68])
            (nil))))
(insn 41 40 42 3 (set (reg:DI 0 ax [orig:69 D.6556 ] [69])
        (sign_extend:DI (reg:SI 0 ax [orig:67 D.6552 ] [67]))) ./ext/misc/csv.c:182 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.6552 ] [67])
        (nil)))
(insn 42 41 43 3 (parallel [
            (set (reg/f:DI 1 dx [orig:70 D.6555 ] [70])
                (plus:DI (reg/f:DI 4 si [orig:66 D.6555 ] [66])
                    (reg:DI 0 ax [orig:69 D.6556 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:182 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.6556 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:66 D.6555 ] [66])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 3 (set (reg:QI 0 ax [86])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 c+0 S1 A8])) ./ext/misc/csv.c:182 91 {*movqi_internal}
     (nil))
(insn 44 43 45 3 (set (mem:QI (reg/f:DI 1 dx [orig:70 D.6555 ] [70]) [0 *_16+0 S1 A8])
        (reg:QI 0 ax [86])) ./ext/misc/csv.c:182 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [86])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:70 D.6555 ] [70])
            (nil))))
(insn 45 44 68 3 (set (reg:SI 0 ax [orig:59 D.6552 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:183 89 {*movsi_internal}
     (nil))
(jump_insn 68 45 69 3 (set (pc)
        (label_ref 56)) ./ext/misc/csv.c:183 650 {jump}
     (nil)
 -> 56)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 69 68 48)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 87
(code_label 48 69 49 4 22 "" [1 uses])
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) ./ext/misc/csv.c:185 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(insn 53 52 54 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:185 91 {*movqi_internal}
     (nil))
(call_insn 54 53 55 4 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:185 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 55 54 56 4 (set (reg:SI 0 ax [orig:59 D.6552 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:186 89 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 71
(code_label 56 55 57 5 23 "" [1 uses])
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 5 (set (reg:SI 0 ax [orig:71 <retval> ] [71])
        (reg:SI 0 ax [orig:59 D.6552 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6552 ] [59])
        (nil)))
(insn 62 58 65 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:71 <retval> ] [71])) ./ext/misc/csv.c:188 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 <retval> ] [71])
        (nil)))
(insn 65 62 0 5 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:188 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_append (csv_append, funcdef_no=9, decl_uid=5555, cgraph_uid=9)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 12:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 36:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 37
changing reg in insn 21
changing reg in insn 40
changing reg in insn 9
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 27
changing reg in insn 34
changing reg in insn 29
changing reg in insn 33
changing reg in insn 30
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 40
changing reg in insn 44
changing reg in insn 3
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.


csv_append

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,17u} r1={6d,4u} r2={3d,1u} r4={4d,3u} r5={3d,2u} r6={1d,15u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={5d,1u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 139{89d,50u,0e} in 32{31 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 70 71 72
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 0 ax [70])
        (reg:SI 4 si [ c ])) ./ext/misc/csv.c:192 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ c ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8])
        (reg:QI 0 ax [70])) ./ext/misc/csv.c:192 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [70])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx [orig:60 D.6557 ] [60])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [71])
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:61 D.6557 ] [61])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [72])
                (const_int 20 [0x14])) [0 p_2(D)->nAlloc+0 S4 A32])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 0 ax [orig:62 D.6557 ] [62])
                (plus:SI (reg:SI 0 ax [orig:61 D.6557 ] [61])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:193 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6557 ] [61])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:60 D.6557 ] [60])
            (reg:SI 0 ax [orig:62 D.6557 ] [62]))) ./ext/misc/csv.c:193 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.6557 ] [62])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:60 D.6557 ] [60])
            (nil))))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:193 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 63 73
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 1 dx [orig:63 D.6557 ] [63])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8]))) ./ext/misc/csv.c:193 155 {extendqisi2}
     (nil))
(insn 17 16 18 3 (set (reg:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:63 D.6557 ] [63])) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:63 D.6557 ] [63])
        (nil)))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [73])) ./ext/misc/csv.c:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [73])
        (nil)))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_resize_and_append") [flags 0x3]  <function_decl 0x7fbdb47d2b00 csv_resize_and_append>) [0 csv_resize_and_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:193 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 21 20 50 3 (set (reg:SI 0 ax [orig:59 D.6557 ] [59])
        (reg:SI 0 ax)) ./ext/misc/csv.c:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 50 21 51 3 (set (pc)
        (label_ref 38)) ./ext/misc/csv.c:193 650 {jump}
     (nil)
 -> 38)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 51 50 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 64 65 66 67 68 74 75 76 77
(code_label 24 51 25 4 25 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 4 si [orig:64 D.6558 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [74])
                (const_int 8 [0x8])) [0 p_2(D)->z+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (set (reg:SI 0 ax [orig:65 D.6557 ] [65])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [75])
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])) ./ext/misc/csv.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:SI 2 cx [orig:66 D.6557 ] [66])
                (plus:SI (reg:SI 0 ax [orig:65 D.6557 ] [65])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:194 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 4 (set (reg/f:DI 1 dx [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:194 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [76])
                (const_int 16 [0x10])) [0 p_2(D)->n+0 S4 A64])
        (reg:SI 2 cx [orig:66 D.6557 ] [66])) ./ext/misc/csv.c:194 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [76])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:66 D.6557 ] [66])
            (nil))))
(insn 33 32 34 4 (set (reg:DI 0 ax [orig:67 D.6559 ] [67])
        (sign_extend:DI (reg:SI 0 ax [orig:65 D.6557 ] [65]))) ./ext/misc/csv.c:194 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.6557 ] [65])
        (nil)))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 1 dx [orig:68 D.6558 ] [68])
                (plus:DI (reg/f:DI 4 si [orig:64 D.6558 ] [64])
                    (reg:DI 0 ax [orig:67 D.6559 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:194 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:67 D.6559 ] [67])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:64 D.6558 ] [64])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 35 34 36 4 (set (reg:QI 0 ax [77])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 c+0 S1 A8])) ./ext/misc/csv.c:194 91 {*movqi_internal}
     (nil))
(insn 36 35 37 4 (set (mem:QI (reg/f:DI 1 dx [orig:68 D.6558 ] [68]) [0 *_14+0 S1 A8])
        (reg:QI 0 ax [77])) ./ext/misc/csv.c:194 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [77])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:68 D.6558 ] [68])
            (nil))))
(insn 37 36 38 4 (set (reg:SI 0 ax [orig:59 D.6557 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:195 89 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 69
(code_label 38 37 39 5 26 "" [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 44 5 (set (reg:SI 0 ax [orig:69 <retval> ] [69])
        (reg:SI 0 ax [orig:59 D.6557 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6557 ] [59])
        (nil)))
(insn 44 40 47 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:69 <retval> ] [69])) ./ext/misc/csv.c:196 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 <retval> ] [69])
        (nil)))
(insn 47 44 0 5 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:196 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_read_one_field (csv_read_one_field, funcdef_no=10, decl_uid=5558, cgraph_uid=10)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 50:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 99:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 107
	 Choosing alt 0 in insn 107:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 108:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 132:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 147:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 179:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 212:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 225:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 229:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 237:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 253:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 292:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 293:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 294:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 295:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 300:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 302:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 305:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 306
	 Choosing alt 0 in insn 306:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 307:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) qm  (1) qn {*cmpqi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 311:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 313:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 314:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) qm {extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 321:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 322:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 332:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 335
	 Choosing alt 0 in insn 335:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 336:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 341:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 342:  (0) r  (1) rem {*movdi_internal_rex64}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54

********** Pseudo live ranges #1: **********

  BB 54
   Insn 352: point = 0
   Insn 349: point = 0
   Insn 345: point = 1
  BB 40
   Insn 376: point = 4
   Insn 261: point = 4
  BB 37
   Insn 372: point = 5
   Insn 242: point = 5
   Insn 241: point = 6
   Insn 240: point = 6
   Insn 239: point = 7
   Insn 238: point = 8
   Insn 237: point = 9
   Insn 236: point = 10
   Insn 235: point = 11
  BB 30
   Insn 366: point = 12
   Insn 171: point = 12
  BB 3
   Insn 356: point = 13
   Insn 18: point = 13
   Insn 17: point = 14
   Insn 16: point = 15
  BB 53
   Insn 342: point = 16
   Insn 341: point = 18
   Insn 340: point = 19
   Insn 339: point = 20
  BB 52
   Insn 336: point = 21
   Insn 335: point = 22
   Insn 334: point = 24
   Insn 333: point = 26
   Insn 332: point = 28
   Insn 331: point = 29
   Insn 330: point = 31
  BB 51
   Insn 328: point = 32
   Insn 327: point = 32
   Insn 326: point = 33
   Insn 325: point = 35
  BB 32
   Insn 370: point = 36
  BB 28
   Insn 364: point = 36
   Insn 155: point = 36
   Insn 154: point = 37
   Insn 153: point = 38
   Insn 152: point = 40
   Insn 151: point = 42
   Insn 150: point = 43
   Insn 149: point = 43
   Insn 148: point = 43
   Insn 147: point = 44
   Insn 146: point = 44
   Insn 145: point = 45
   Insn 144: point = 45
   Insn 143: point = 46
  BB 23
   Insn 360: point = 47
   Insn 116: point = 47
   Insn 115: point = 48
   Insn 114: point = 49
   Insn 113: point = 51
   Insn 112: point = 53
  BB 22
   Insn 110: point = 54
   Insn 109: point = 54
   Insn 108: point = 55
   Insn 107: point = 57
   Insn 106: point = 59
   Insn 105: point = 61
   Insn 104: point = 63
   Insn 103: point = 64
   Insn 102: point = 66
   Insn 101: point = 67
   Insn 100: point = 68
   Insn 99: point = 69
   Insn 98: point = 71
   Insn 97: point = 73
  BB 26
   Insn 362: point = 74
   Insn 135: point = 74
   Insn 134: point = 74
   Insn 133: point = 74
   Insn 132: point = 75
   Insn 131: point = 75
   Insn 130: point = 76
   Insn 129: point = 76
   Insn 128: point = 77
   Insn 127: point = 79
  BB 25
   Insn 125: point = 80
   Insn 124: point = 80
  BB 24
   Insn 122: point = 80
   Insn 121: point = 80
  BB 21
   Insn 94: point = 80
   Insn 93: point = 80
  BB 20
   Insn 91: point = 80
   Insn 90: point = 80
  BB 19
   Insn 87: point = 80
   Insn 86: point = 80
  BB 18
   Insn 84: point = 80
   Insn 83: point = 80
  BB 17
   Insn 81: point = 80
   Insn 80: point = 80
  BB 16
   Insn 77: point = 80
   Insn 76: point = 80
  BB 15
   Insn 74: point = 80
   Insn 73: point = 80
  BB 14
   Insn 70: point = 80
   Insn 69: point = 80
  BB 13
   Insn 67: point = 80
   Insn 66: point = 80
  BB 10
   Insn 56: point = 80
   Insn 55: point = 80
  BB 9
   Insn 52: point = 80
   Insn 51: point = 81
   Insn 50: point = 82
   Insn 49: point = 84
   Insn 48: point = 86
  BB 8
   Insn 46: point = 87
   Insn 45: point = 87
  BB 6
   Insn 39: point = 87
   Insn 38: point = 87
   Insn 37: point = 87
   Insn 36: point = 88
   Insn 35: point = 89
   Insn 34: point = 89
   Insn 33: point = 90
  BB 31
   Insn 368: point = 91
   Insn 179: point = 91
   Insn 178: point = 92
   Insn 177: point = 93
   Insn 176: point = 94
  BB 29
   Insn 169: point = 95
   Insn 168: point = 95
   Insn 167: point = 96
   Insn 166: point = 97
   Insn 165: point = 97
   Insn 164: point = 98
   Insn 163: point = 99
   Insn 162: point = 100
   Insn 161: point = 102
   Insn 160: point = 104
  BB 27
   Insn 141: point = 105
   Insn 140: point = 105
  BB 7
   Insn 42: point = 105
   Insn 41: point = 105
  BB 12
   Insn 358: point = 105
   Insn 355: point = 105
   Insn 61: point = 105
  BB 11
   Insn 59: point = 105
   Insn 58: point = 105
  BB 5
   Insn 31: point = 105
   Insn 30: point = 106
   Insn 29: point = 107
   Insn 28: point = 107
   Insn 27: point = 108
   Insn 26: point = 110
  BB 50
   Insn 322: point = 111
   Insn 321: point = 112
   Insn 320: point = 113
   Insn 319: point = 115
   Insn 318: point = 117
  BB 49
   Insn 315: point = 118
   Insn 314: point = 119
   Insn 313: point = 120
   Insn 312: point = 122
   Insn 311: point = 124
  BB 48
   Insn 309: point = 125
   Insn 308: point = 125
   Insn 307: point = 126
   Insn 306: point = 128
   Insn 305: point = 130
   Insn 304: point = 132
   Insn 303: point = 134
   Insn 302: point = 136
   Insn 301: point = 137
   Insn 300: point = 139
  BB 47
   Insn 298: point = 140
   Insn 297: point = 140
   Insn 296: point = 141
   Insn 295: point = 143
   Insn 294: point = 144
   Insn 293: point = 145
   Insn 292: point = 146
   Insn 291: point = 148
   Insn 290: point = 150
  BB 46
   Insn 288: point = 151
   Insn 287: point = 151
  BB 43
   Insn 278: point = 151
   Insn 277: point = 151
  BB 42
   Insn 275: point = 151
   Insn 274: point = 151
  BB 38
   Insn 374: point = 151
  BB 36
   Insn 233: point = 151
   Insn 232: point = 151
   Insn 231: point = 152
   Insn 230: point = 154
   Insn 229: point = 155
   Insn 228: point = 156
   Insn 227: point = 157
   Insn 226: point = 157
   Insn 225: point = 158
   Insn 224: point = 159
   Insn 223: point = 159
   Insn 222: point = 160
   Insn 221: point = 161
   Insn 220: point = 162
   Insn 219: point = 164
   Insn 218: point = 166
  BB 35
   Insn 216: point = 167
   Insn 215: point = 167
   Insn 214: point = 168
   Insn 213: point = 170
   Insn 212: point = 171
   Insn 211: point = 172
   Insn 210: point = 173
   Insn 209: point = 173
   Insn 208: point = 174
   Insn 207: point = 175
   Insn 206: point = 175
   Insn 205: point = 176
   Insn 204: point = 177
   Insn 203: point = 178
   Insn 202: point = 180
   Insn 201: point = 182
  BB 34
   Insn 199: point = 183
   Insn 198: point = 183
   Insn 197: point = 184
   Insn 196: point = 186
  BB 33
   Insn 194: point = 187
   Insn 193: point = 187
   Insn 192: point = 188
   Insn 191: point = 190
  BB 4
   Insn 24: point = 191
   Insn 23: point = 191
  BB 2
   Insn 14: point = 191
   Insn 13: point = 191
   Insn 12: point = 191
   Insn 11: point = 192
   Insn 10: point = 193
   Insn 9: point = 193
   Insn 8: point = 194
   Insn 7: point = 195
   Insn 6: point = 196
   Insn 2: point = 197
  BB 41
   Insn 270: point = 197
   Insn 269: point = 198
   Insn 268: point = 199
   Insn 267: point = 199
   Insn 266: point = 200
  BB 39
   Insn 259: point = 201
   Insn 258: point = 201
   Insn 257: point = 202
   Insn 256: point = 203
   Insn 255: point = 203
   Insn 254: point = 204
   Insn 253: point = 205
   Insn 252: point = 206
   Insn 251: point = 208
   Insn 250: point = 210
  BB 45
   Insn 284: point = 211
   Insn 283: point = 211
  BB 44
   Insn 281: point = 211
   Insn 280: point = 211
 r59: [16..16] [12..13] [2..5]
 r60: [83..84]
 r61: [80..82]
 r62: [75..77]
 r63: [39..40]
 r64: [36..38]
 r65: [70..71]
 r66: [67..69]
 r67: [58..64]
 r68: [60..61]
 r69: [58..59]
 r70: [56..57]
 r71: [54..55]
 r72: [50..51]
 r73: [47..49]
 r74: [101..102]
 r75: [98..100]
 r76: [95..96]
 r77: [187..188]
 r78: [183..184]
 r79: [179..180]
 r80: [176..178]
 r81: [167..168]
 r82: [163..164]
 r83: [160..162]
 r84: [151..152]
 r85: [147..148]
 r86: [144..146]
 r87: [140..141]
 r88: [129..137]
 r89: [133..134]
 r90: [131..132]
 r91: [129..130]
 r92: [127..128]
 r93: [125..126]
 r94: [121..122]
 r95: [118..120]
 r96: [114..115]
 r97: [111..113]
 r98: [207..208]
 r99: [204..206]
 r100: [201..202]
 r101: [32..33]
 r102: [23..29]
 r103: [25..26]
 r104: [23..24]
 r105: [21..22]
 r106: [0..1]
 r107: [195..196]
 r108: [193..194]
 r109: [191..192]
 r110: [14..15]
 r111: [109..110]
 r112: [107..108]
 r113: [105..106]
 r114: [89..90]
 r115: [87..88]
 r116: [85..86]
 r117: [80..81]
 r118: [72..73]
 r119: [67..68]
 r120: [65..66]
 r121: [62..63]
 r122: [52..53]
 r123: [47..48]
 r124: [78..79]
 r125: [74..76]
 r126: [44..46]
 r127: [43..45]
 r128: [41..42]
 r129: [36..37]
 r130: [103..104]
 r131: [97..99]
 r132: [93..94]
 r133: [91..92]
 r134: [189..190]
 r135: [185..186]
 r136: [181..182]
 r137: [175..177]
 r138: [173..174]
 r139: [171..172]
 r140: [169..170]
 r141: [165..166]
 r142: [159..161]
 r143: [157..158]
 r144: [155..156]
 r145: [153..154]
 r146: [10..11]
 r147: [8..9]
 r148: [6..7]
 r149: [209..210]
 r150: [203..205]
 r151: [199..200]
 r152: [197..198]
 r153: [149..150]
 r154: [144..145]
 r155: [142..143]
 r156: [138..139]
 r157: [135..136]
 r158: [123..124]
 r159: [118..119]
 r160: [116..117]
 r161: [111..112]
 r162: [34..35]
 r163: [30..31]
 r164: [27..28]
 r165: [19..20]
 r166: [17..18]
Compressing live ranges: from 211 to 187 - 88%
Ranges after the compression:
 r59: [14..14] [10..11] [2..3]
 r60: [71..72]
 r61: [69..70]
 r62: [65..66]
 r63: [35..36]
 r64: [33..34]
 r65: [61..62]
 r66: [59..60]
 r67: [51..56]
 r68: [53..54]
 r69: [51..52]
 r70: [49..50]
 r71: [47..48]
 r72: [43..44]
 r73: [41..42]
 r74: [87..88]
 r75: [85..86]
 r76: [83..84]
 r77: [165..166]
 r78: [161..162]
 r79: [157..158]
 r80: [155..156]
 r81: [147..148]
 r82: [143..144]
 r83: [141..142]
 r84: [133..134]
 r85: [129..130]
 r86: [127..128]
 r87: [123..124]
 r88: [113..120]
 r89: [117..118]
 r90: [115..116]
 r91: [113..114]
 r92: [111..112]
 r93: [109..110]
 r94: [105..106]
 r95: [103..104]
 r96: [99..100]
 r97: [97..98]
 r98: [183..184]
 r99: [181..182]
 r100: [179..180]
 r101: [29..30]
 r102: [21..26]
 r103: [23..24]
 r104: [21..22]
 r105: [19..20]
 r106: [0..1]
 r107: [173..174]
 r108: [171..172]
 r109: [169..170]
 r110: [12..13]
 r111: [95..96]
 r112: [93..94]
 r113: [91..92]
 r114: [77..78]
 r115: [75..76]
 r116: [73..74]
 r117: [69..70]
 r118: [63..64]
 r119: [59..60]
 r120: [57..58]
 r121: [55..56]
 r122: [45..46]
 r123: [41..42]
 r124: [67..68]
 r125: [65..66]
 r126: [39..40]
 r127: [39..40]
 r128: [37..38]
 r129: [33..34]
 r130: [89..90]
 r131: [85..86]
 r132: [81..82]
 r133: [79..80]
 r134: [167..168]
 r135: [163..164]
 r136: [159..160]
 r137: [155..156]
 r138: [153..154]
 r139: [151..152]
 r140: [149..150]
 r141: [145..146]
 r142: [141..142]
 r143: [139..140]
 r144: [137..138]
 r145: [135..136]
 r146: [8..9]
 r147: [6..7]
 r148: [4..5]
 r149: [185..186]
 r150: [181..182]
 r151: [177..178]
 r152: [175..176]
 r153: [131..132]
 r154: [127..128]
 r155: [125..126]
 r156: [121..122]
 r157: [119..120]
 r158: [107..108]
 r159: [103..104]
 r160: [101..102]
 r161: [97..98]
 r162: [31..32]
 r163: [27..28]
 r164: [25..26]
 r165: [17..18]
 r166: [15..16]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 342
changing reg in insn 261
changing reg in insn 242
changing reg in insn 171
changing reg in insn 18
changing reg in insn 345
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 52
changing reg in insn 128
changing reg in insn 131
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 101
changing reg in insn 103
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 116
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 164
changing reg in insn 167
changing reg in insn 168
changing reg in insn 192
changing reg in insn 193
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 205
changing reg in insn 214
changing reg in insn 215
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 222
changing reg in insn 231
changing reg in insn 232
changing reg in insn 291
changing reg in insn 292
changing reg in insn 292
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 301
changing reg in insn 303
changing reg in insn 304
changing reg in insn 304
changing reg in insn 305
changing reg in insn 305
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 308
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 315
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 322
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 254
changing reg in insn 257
changing reg in insn 258
changing reg in insn 326
changing reg in insn 327
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 335
changing reg in insn 336
changing reg in insn 345
changing reg in insn 349
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 112
changing reg in insn 115
changing reg in insn 116
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 133
changing reg in insn 143
changing reg in insn 146
changing reg in insn 144
changing reg in insn 148
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 160
changing reg in insn 163
changing reg in insn 165
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 191
changing reg in insn 196
changing reg in insn 197
changing reg in insn 201
changing reg in insn 204
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 218
changing reg in insn 221
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 235
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 240
changing reg in insn 250
changing reg in insn 253
changing reg in insn 255
changing reg in insn 266
changing reg in insn 267
changing reg in insn 269
changing reg in insn 270
changing reg in insn 290
changing reg in insn 291
changing reg in insn 293
changing reg in insn 294
changing reg in insn 295
changing reg in insn 296
changing reg in insn 300
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 311
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 318
changing reg in insn 321
changing reg in insn 322
changing reg in insn 325
changing reg in insn 326
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 333
changing reg in insn 339
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
starting the processing of deferred insns
ending the processing of deferred insns


csv_read_one_field

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={112d,104u} r1={31d,18u} r2={15d,2u} r4={19d,6u} r5={25d,13u} r6={1d,144u} r7={1d,66u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r17={54d,34u} r18={12d} r19={12d} r20={1d,1u,3e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} 
;;    total ref usage 1116{725d,388u,3e} in 255{243 regular + 12 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 107 108 109
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:211 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:213 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [107])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:213 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [107])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 0 ax [108])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:214 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) ./ext/misc/csv.c:214 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [108])
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:214 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 ax [109])
        (reg:SI 0 ax)) ./ext/misc/csv.c:214 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 0 ax [109])) ./ext/misc/csv.c:214 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [109])
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:215 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ./ext/misc/csv.c:215 612 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 110
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:216 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [110])
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:216 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [110])
        (nil)))
(insn 18 17 356 3 (set (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:217 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 356 18 357 3 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:217 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 357 356 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 21 357 22 4 28 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:219 7 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) ./ext/misc/csv.c:219 612 {*jcc_1}
     (nil)
 -> 189)
;;  succ:       5 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 111 112 113
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:221 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 0 ax [112])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [111])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:221 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (nil)))
(insn 28 27 29 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 startLine+0 S4 A32])
        (reg:SI 0 ax [112])) ./ext/misc/csv.c:221 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [112])
        (nil)))
(insn 29 28 30 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (nil))
(insn 31 30 182 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (reg:SI 0 ax [113])) ./ext/misc/csv.c:222 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [113])
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              12 [100.0%] 
;;              31
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 114 115
(code_label 182 31 32 6 44 "" [2 uses])
(note 32 182 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:224 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [114])) ./ext/misc/csv.c:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [114])
        (nil)))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:224 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 6 (set (reg:SI 0 ax [115])
        (reg:SI 0 ax)) ./ext/misc/csv.c:224 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 38 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 0 ax [115])) ./ext/misc/csv.c:224 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [115])
        (nil)))
(insn 38 37 39 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:225 7 {*cmpsi_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) ./ext/misc/csv.c:225 612 {*jcc_1}
     (nil)
 -> 43)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:225 7 {*cmpsi_1}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) ./ext/misc/csv.c:225 612 {*jcc_1}
     (nil)
 -> 158)
;;  succ:       8 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 43 42 44 8 31 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:226 7 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) ./ext/misc/csv.c:226 612 {*jcc_1}
     (nil)
 -> 53)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 116 117
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 9 (set (reg:SI 0 ax [orig:60 D.6561 ] [60])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [116])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [116])
        (nil)))
(insn 50 49 51 9 (parallel [
            (set (reg:SI 1 dx [orig:61 D.6561 ] [61])
                (plus:SI (reg:SI 0 ax [orig:60 D.6561 ] [60])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:226 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6561 ] [60])
        (nil)))
(insn 51 50 52 9 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:226 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 9 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])
        (reg:SI 1 dx [orig:61 D.6561 ] [61])) ./ext/misc/csv.c:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [117])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:61 D.6561 ] [61])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 53 52 54 10 33 "" [1 uses])
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:227 7 {*cmpsi_1}
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:227 612 {*jcc_1}
     (nil)
 -> 64)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:228 7 {*cmpsi_1}
     (nil))
(jump_insn 59 58 60 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:228 612 {*jcc_1}
     (nil)
 -> 64)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 355 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:229 89 {*movsi_internal}
     (nil))
(insn 355 61 358 12 (const_int 0 [0]) ./ext/misc/csv.c:230 676 {nop}
     (nil))
(jump_insn 358 355 359 12 (set (pc)
        (label_ref 182)) ./ext/misc/csv.c:256 650 {jump}
     (nil)
 -> 182)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 359 358 64)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 64 359 65 13 34 "" [2 uses])
(note 65 64 66 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:233 7 {*cmpsi_1}
     (nil))
(jump_insn 67 66 68 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) ./ext/misc/csv.c:233 612 {*jcc_1}
     (nil)
 -> 71)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:233 7 {*cmpsi_1}
     (nil))
(jump_insn 70 69 71 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:233 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       22
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 70 72 15 36 "" [1 uses])
(note 72 71 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:234 7 {*cmpsi_1}
     (nil))
(jump_insn 74 73 75 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) ./ext/misc/csv.c:234 612 {*jcc_1}
     (nil)
 -> 78)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 75 74 76 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:234 7 {*cmpsi_1}
     (nil))
(jump_insn 77 76 78 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:234 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       22
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 78 77 79 17 38 "" [1 uses])
(note 79 78 80 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 81 80 82 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       18 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 82 81 83 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 85 84 86 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:235 7 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:235 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       22
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 88 87 89 20 39 "" [2 uses])
(note 89 88 90 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:236 7 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:236 612 {*jcc_1}
     (nil)
 -> 119)
;;  succ:       21 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 92 91 93 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:236 7 {*cmpsi_1}
     (nil))
(jump_insn 94 93 95 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:236 612 {*jcc_1}
     (nil)
 -> 119)
;;  succ:       22 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              16
;;              19
;;              21 (FALLTHRU)
;;              22 (DFS_BACK)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 66 67 68 69 70 71 118 119 120 121
(code_label 95 94 96 22 37 "" [4 uses])
(note 96 95 97 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 22 (set (reg/f:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 22 (set (reg:SI 0 ax [orig:65 D.6561 ] [65])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [118])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [118])
        (nil)))
(insn 99 98 100 22 (parallel [
            (set (reg:SI 1 dx [orig:66 D.6561 ] [66])
                (plus:SI (reg:SI 0 ax [orig:65 D.6561 ] [65])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:238 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.6561 ] [65])
        (nil)))
(insn 100 99 101 22 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 22 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [119])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (reg:SI 1 dx [orig:66 D.6561 ] [66])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [119])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:66 D.6561 ] [66])
            (nil))))
(insn 102 101 103 22 (set (reg/f:DI 0 ax [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 22 (set (reg/f:DI 1 dx [orig:67 D.6560 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [120])
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [120])
        (nil)))
(insn 104 103 105 22 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:238 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 22 (set (reg:SI 0 ax [orig:68 D.6561 ] [68])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [121])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:238 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [121])
        (nil)))
(insn 106 105 107 22 (set (reg:DI 0 ax [orig:69 D.6563 ] [69])
        (sign_extend:DI (reg:SI 0 ax [orig:68 D.6561 ] [68]))) ./ext/misc/csv.c:238 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 D.6561 ] [68])
        (nil)))
(insn 107 106 108 22 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6560 ] [70])
                (plus:DI (reg:DI 0 ax [orig:69 D.6563 ] [69])
                    (reg/f:DI 1 dx [orig:67 D.6560 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:238 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.6563 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:67 D.6560 ] [67])
            (nil))))
(insn 108 107 109 22 (set (reg:QI 0 ax [orig:71 D.6562 ] [71])
        (mem:QI (reg/f:DI 0 ax [orig:70 D.6560 ] [70]) [0 *_26+0 S1 A8])) ./ext/misc/csv.c:238 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6560 ] [70])
        (nil)))
(insn 109 108 110 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:71 D.6562 ] [71])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:238 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:71 D.6562 ] [71])
        (nil)))
(jump_insn 110 109 111 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) ./ext/misc/csv.c:238 612 {*jcc_1}
     (nil)
 -> 95)
;;  succ:       22 (DFS_BACK)
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 72 73 122 123
(note 111 110 112 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 23 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:239 89 {*movsi_internal}
     (nil))
(insn 113 112 114 23 (set (reg:QI 0 ax [orig:72 D.6562 ] [72])
        (reg:QI 0 ax [122])) ./ext/misc/csv.c:239 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [122])
        (nil)))
(insn 114 113 115 23 (set (reg:SI 1 dx [orig:73 D.6561 ] [73])
        (sign_extend:SI (reg:QI 0 ax [orig:72 D.6562 ] [72]))) ./ext/misc/csv.c:239 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:72 D.6562 ] [72])
        (nil)))
(insn 115 114 116 23 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:239 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 360 23 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [123])
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 1 dx [orig:73 D.6561 ] [73])) ./ext/misc/csv.c:239 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [123])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:73 D.6561 ] [73])
            (nil))))
(jump_insn 360 116 361 23 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:240 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 361 360 119)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;;              21
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 119 361 120 24 40 "" [2 uses])
(note 120 119 121 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:242 7 {*cmpsi_1}
     (nil))
(jump_insn 122 121 123 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) ./ext/misc/csv.c:242 612 {*jcc_1}
     (nil)
 -> 138)
;;  succ:       25 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 123 122 124 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:242 7 {*cmpsi_1}
     (nil))
(jump_insn 125 124 126 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) ./ext/misc/csv.c:242 612 {*jcc_1}
     (nil)
 -> 138)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 124 125
(note 126 125 127 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 26 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 128 127 129 26 (set (reg:SI 1 dx [orig:62 D.6561 ] [62])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [124])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [124])
        (nil)))
(insn 129 128 130 26 (set (reg:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 26 (set (reg:SI 2 cx)
        (const_int 34 [0x22])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (nil))
(insn 131 130 132 26 (set (reg:SI 1 dx)
        (reg:SI 1 dx [orig:62 D.6561 ] [62])) ./ext/misc/csv.c:243 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:62 D.6561 ] [62])
        (nil)))
(insn 132 131 133 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fbdb44dab48 *.LC7>)) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (nil))
(insn 133 132 134 26 (set (reg:DI 5 di)
        (reg:DI 0 ax [125])) ./ext/misc/csv.c:243 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [125])
        (nil)))
(insn 134 133 135 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:243 91 {*movqi_internal}
     (nil))
(call_insn 135 134 362 26 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:243 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(jump_insn 362 135 363 26 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:244 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 363 362 138)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;;              25
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 138 363 139 27 42 "" [2 uses])
(note 139 138 140 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:246 7 {*cmpsi_1}
     (nil))
(jump_insn 141 140 142 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) ./ext/misc/csv.c:246 612 {*jcc_1}
     (nil)
 -> 158)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 126 127 128 129
(note 142 141 143 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 28 (set (reg:SI 1 dx [126])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 startLine+0 S4 A32])) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (nil))
(insn 144 143 145 28 (set (reg:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (nil))
(insn 145 144 146 28 (set (reg:SI 2 cx)
        (const_int 34 [0x22])) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (nil))
(insn 146 145 147 28 (set (reg:SI 1 dx)
        (reg:SI 1 dx [126])) ./ext/misc/csv.c:247 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [126])
        (nil)))
(insn 147 146 148 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fbdb44dabe0 *.LC8>)) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 28 (set (reg:DI 5 di)
        (reg:DI 0 ax [127])) ./ext/misc/csv.c:247 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [127])
        (nil)))
(insn 149 148 150 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:247 91 {*movqi_internal}
     (nil))
(call_insn 150 149 151 28 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:247 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 151 150 152 28 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:249 89 {*movsi_internal}
     (nil))
(insn 152 151 153 28 (set (reg:QI 0 ax [orig:63 D.6562 ] [63])
        (reg:QI 0 ax [128])) ./ext/misc/csv.c:249 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [128])
        (nil)))
(insn 153 152 154 28 (set (reg:SI 1 dx [orig:64 D.6561 ] [64])
        (sign_extend:SI (reg:QI 0 ax [orig:63 D.6562 ] [63]))) ./ext/misc/csv.c:249 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:63 D.6562 ] [63])
        (nil)))
(insn 154 153 155 28 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:249 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 364 28 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [129])
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 1 dx [orig:64 D.6561 ] [64])) ./ext/misc/csv.c:249 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [129])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:64 D.6561 ] [64])
            (nil))))
(jump_insn 364 155 365 28 (set (pc)
        (label_ref 185)) ./ext/misc/csv.c:250 650 {jump}
     (nil)
 -> 185)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 365 364 158)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 130 131
(code_label 158 365 159 29 32 "" [2 uses])
(note 159 158 160 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 29 (set (reg:SI 0 ax [130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (nil))
(insn 161 160 162 29 (set (reg:QI 0 ax [orig:74 D.6562 ] [74])
        (reg:QI 0 ax [130])) ./ext/misc/csv.c:253 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [130])
        (nil)))
(insn 162 161 163 29 (set (reg:SI 1 dx [orig:75 D.6561 ] [75])
        (sign_extend:SI (reg:QI 0 ax [orig:74 D.6562 ] [74]))) ./ext/misc/csv.c:253 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:74 D.6562 ] [74])
        (nil)))
(insn 163 162 164 29 (set (reg:DI 0 ax [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (nil))
(insn 164 163 165 29 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:75 D.6561 ] [75])) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:75 D.6561 ] [75])
        (nil)))
(insn 165 164 166 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [131])) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [131])
        (nil)))
(call_insn 166 165 167 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:253 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 167 166 168 29 (set (reg:SI 0 ax [orig:76 D.6561 ] [76])
        (reg:SI 0 ax)) ./ext/misc/csv.c:253 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 168 167 169 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:76 D.6561 ] [76])
            (const_int 0 [0]))) ./ext/misc/csv.c:253 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:76 D.6561 ] [76])
        (nil)))
(jump_insn 169 168 170 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) ./ext/misc/csv.c:253 612 {*jcc_1}
     (nil)
 -> 174)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 170 169 171 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 366 30 (set (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:253 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 366 171 367 30 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:253 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 367 366 174)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132 133
(code_label 174 367 175 31 43 "" [1 uses])
(note 175 174 176 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 31 (set (reg:SI 0 ax [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])) ./ext/misc/csv.c:254 89 {*movsi_internal}
     (nil))
(insn 177 176 178 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 ppc+0 S4 A32])
        (reg:SI 0 ax [132])) ./ext/misc/csv.c:254 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [132])
        (nil)))
(insn 178 177 179 31 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:255 89 {*movsi_internal}
     (nil))
(insn 179 178 368 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 pc+0 S4 A32])
        (reg:SI 0 ax [133])) ./ext/misc/csv.c:255 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [133])
        (nil)))
(jump_insn 368 179 369 31 (set (pc)
        (label_ref 182)) ./ext/misc/csv.c:256 650 {jump}
     (nil)
 -> 182)
;;  succ:       6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 369 368 185)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%] 
;;              23 [100.0%] 
;;              28 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 185 369 186 32 41 "" [3 uses])
(note 186 185 370 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 370 186 371 32 (set (pc)
        (label_ref 323)) 650 {jump}
     (nil)
 -> 323)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 371 370 189)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 77 134
(code_label 189 371 190 33 30 "" [1 uses])
(note 190 189 191 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 33 (set (reg:SI 0 ax [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:260 89 {*movsi_internal}
     (nil))
(insn 192 191 193 33 (set (reg:SI 0 ax [orig:77 D.6561 ] [77])
        (zero_extend:SI (reg:QI 0 ax [134]))) ./ext/misc/csv.c:260 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 0 ax [134])
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 193 192 194 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:77 D.6561 ] [77])
            (const_int 239 [0xef]))) ./ext/misc/csv.c:260 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 D.6561 ] [77])
        (nil)))
(jump_insn 194 193 195 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:260 612 {*jcc_1}
     (nil)
 -> 245)
;;  succ:       34 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 78 135
(note 195 194 196 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 34 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:260 87 {*movdi_internal_rex64}
     (nil))
(insn 197 196 198 34 (set (reg:SI 0 ax [orig:78 D.6561 ] [78])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [135])
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])) ./ext/misc/csv.c:260 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [135])
        (nil)))
(insn 198 197 199 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:78 D.6561 ] [78])
            (const_int 0 [0]))) ./ext/misc/csv.c:260 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 D.6561 ] [78])
        (nil)))
(jump_insn 199 198 200 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:260 612 {*jcc_1}
     (nil)
 -> 245)
;;  succ:       35 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 79 80 81 136 137 138 139 140
(note 200 199 201 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 35 (set (reg:SI 0 ax [136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:261 89 {*movsi_internal}
     (nil))
(insn 202 201 203 35 (set (reg:QI 0 ax [orig:79 D.6562 ] [79])
        (reg:QI 0 ax [136])) ./ext/misc/csv.c:261 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [136])
        (nil)))
(insn 203 202 204 35 (set (reg:SI 1 dx [orig:80 D.6561 ] [80])
        (sign_extend:SI (reg:QI 0 ax [orig:79 D.6562 ] [79]))) ./ext/misc/csv.c:261 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:79 D.6562 ] [79])
        (nil)))
(insn 204 203 205 35 (set (reg:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:261 87 {*movdi_internal_rex64}
     (nil))
(insn 205 204 206 35 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:80 D.6561 ] [80])) ./ext/misc/csv.c:261 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:80 D.6561 ] [80])
        (nil)))
(insn 206 205 207 35 (set (reg:DI 5 di)
        (reg:DI 0 ax [137])) ./ext/misc/csv.c:261 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [137])
        (nil)))
(call_insn 207 206 208 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:261 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 208 207 209 35 (set (reg:DI 0 ax [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:262 87 {*movdi_internal_rex64}
     (nil))
(insn 209 208 210 35 (set (reg:DI 5 di)
        (reg:DI 0 ax [138])) ./ext/misc/csv.c:262 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [138])
        (nil)))
(call_insn 210 209 211 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:262 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 211 210 212 35 (set (reg:SI 0 ax [139])
        (reg:SI 0 ax)) ./ext/misc/csv.c:262 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 212 211 213 35 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 0 ax [139])) ./ext/misc/csv.c:262 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [139])
        (nil)))
(insn 213 212 214 35 (set (reg:SI 0 ax [140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:263 89 {*movsi_internal}
     (nil))
(insn 214 213 215 35 (set (reg:SI 0 ax [orig:81 D.6561 ] [81])
        (zero_extend:SI (reg:QI 0 ax [140]))) ./ext/misc/csv.c:263 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 0 ax [140])
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 215 214 216 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:81 D.6561 ] [81])
            (const_int 187 [0xbb]))) ./ext/misc/csv.c:263 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:81 D.6561 ] [81])
        (nil)))
(jump_insn 216 215 217 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:263 612 {*jcc_1}
     (nil)
 -> 245)
;;  succ:       36 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 82 83 84 141 142 143 144 145
(note 217 216 218 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 36 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:264 89 {*movsi_internal}
     (nil))
(insn 219 218 220 36 (set (reg:QI 0 ax [orig:82 D.6562 ] [82])
        (reg:QI 0 ax [141])) ./ext/misc/csv.c:264 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [141])
        (nil)))
(insn 220 219 221 36 (set (reg:SI 1 dx [orig:83 D.6561 ] [83])
        (sign_extend:SI (reg:QI 0 ax [orig:82 D.6562 ] [82]))) ./ext/misc/csv.c:264 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:82 D.6562 ] [82])
        (nil)))
(insn 221 220 222 36 (set (reg:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:264 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 36 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:83 D.6561 ] [83])) ./ext/misc/csv.c:264 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:83 D.6561 ] [83])
        (nil)))
(insn 223 222 224 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [142])) ./ext/misc/csv.c:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [142])
        (nil)))
(call_insn 224 223 225 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:264 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 225 224 226 36 (set (reg:DI 0 ax [143])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:265 87 {*movdi_internal_rex64}
     (nil))
(insn 226 225 227 36 (set (reg:DI 5 di)
        (reg:DI 0 ax [143])) ./ext/misc/csv.c:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [143])
        (nil)))
(call_insn 227 226 228 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:265 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 36 (set (reg:SI 0 ax [144])
        (reg:SI 0 ax)) ./ext/misc/csv.c:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 229 228 230 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 0 ax [144])) ./ext/misc/csv.c:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [144])
        (nil)))
(insn 230 229 231 36 (set (reg:SI 0 ax [145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:266 89 {*movsi_internal}
     (nil))
(insn 231 230 232 36 (set (reg:SI 0 ax [orig:84 D.6561 ] [84])
        (zero_extend:SI (reg:QI 0 ax [145]))) ./ext/misc/csv.c:266 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 0 ax [145])
        (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
                (const_int 255 [0xff]))
            (nil))))
(insn 232 231 233 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 D.6561 ] [84])
            (const_int 191 [0xbf]))) ./ext/misc/csv.c:266 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 D.6561 ] [84])
        (nil)))
(jump_insn 233 232 234 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ./ext/misc/csv.c:266 612 {*jcc_1}
     (nil)
 -> 245)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 146 147 148
(note 234 233 235 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 37 (set (reg/f:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:267 87 {*movdi_internal_rex64}
     (nil))
(insn 236 235 237 37 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [146])
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:267 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [146])
        (nil)))
(insn 237 236 238 37 (set (reg/f:DI 0 ax [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:268 87 {*movdi_internal_rex64}
     (nil))
(insn 238 237 239 37 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [147])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:268 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [147])
        (nil)))
(insn 239 238 240 37 (set (reg:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (nil))
(insn 240 239 241 37 (set (reg:DI 5 di)
        (reg:DI 0 ax [148])) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [148])
        (nil)))
(call_insn 241 240 242 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:269 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 242 241 372 37 (set (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (reg:DI 0 ax)) ./ext/misc/csv.c:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 372 242 373 37 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:269 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 373 372 245)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
;;              34
;;              35
;;              36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 245 373 246 38 46 "" [4 uses])
(note 246 245 374 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 374 246 375 38 (set (pc)
        (label_ref 271)) ./ext/misc/csv.c:273 650 {jump}
     (nil)
 -> 271)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 375 374 273)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              45
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 98 99 100 149 150
(code_label 273 375 249 39 49 "" [2 uses])
(note 249 273 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 39 (set (reg:SI 0 ax [149])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (nil))
(insn 251 250 252 39 (set (reg:QI 0 ax [orig:98 D.6562 ] [98])
        (reg:QI 0 ax [149])) ./ext/misc/csv.c:274 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [149])
        (nil)))
(insn 252 251 253 39 (set (reg:SI 1 dx [orig:99 D.6561 ] [99])
        (sign_extend:SI (reg:QI 0 ax [orig:98 D.6562 ] [98]))) ./ext/misc/csv.c:274 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:98 D.6562 ] [98])
        (nil)))
(insn 253 252 254 39 (set (reg:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (nil))
(insn 254 253 255 39 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:99 D.6561 ] [99])) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:99 D.6561 ] [99])
        (nil)))
(insn 255 254 256 39 (set (reg:DI 5 di)
        (reg:DI 0 ax [150])) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [150])
        (nil)))
(call_insn 256 255 257 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_append") [flags 0x3]  <function_decl 0x7fbdb47d2d00 csv_append>) [0 csv_append S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:274 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 257 256 258 39 (set (reg:SI 0 ax [orig:100 D.6561 ] [100])
        (reg:SI 0 ax)) ./ext/misc/csv.c:274 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 258 257 259 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 D.6561 ] [100])
            (const_int 0 [0]))) ./ext/misc/csv.c:274 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:100 D.6561 ] [100])
        (nil)))
(jump_insn 259 258 260 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) ./ext/misc/csv.c:274 612 {*jcc_1}
     (nil)
 -> 264)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 260 259 261 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 376 40 (set (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:274 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 376 261 377 40 (set (pc)
        (label_ref 343)) ./ext/misc/csv.c:274 650 {jump}
     (nil)
 -> 343)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 377 376 264)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 151 152
(code_label 264 377 265 41 48 "" [1 uses])
(note 265 264 266 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 41 (set (reg:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:275 87 {*movdi_internal_rex64}
     (nil))
(insn 267 266 268 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [151])) ./ext/misc/csv.c:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [151])
        (nil)))
(call_insn 268 267 269 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_getc") [flags 0x3]  <function_decl 0x7fbdb47d2900 csv_getc>) [0 csv_getc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:275 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 269 268 270 41 (set (reg:SI 0 ax [152])
        (reg:SI 0 ax)) ./ext/misc/csv.c:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 270 269 271 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
        (reg:SI 0 ax [152])) ./ext/misc/csv.c:275 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [152])
        (nil)))
;;  succ:       42 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU,DFS_BACK)
;;              38 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 271 270 272 42 47 "" [1 uses])
(note 272 271 274 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 274 272 275 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 275 274 276 42 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (nil)
 -> 273)
;;  succ:       39
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 276 275 277 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 278 277 279 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (nil)
 -> 285)
;;  succ:       44 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 279 278 280 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 281 280 282 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (nil)
 -> 285)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 282 281 283 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:273 7 {*cmpsi_1}
     (nil))
(jump_insn 284 283 285 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:273 612 {*jcc_1}
     (nil)
 -> 273)
;;  succ:       39
;;              46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 285 284 286 46 50 "" [2 uses])
(note 286 285 287 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])
            (const_int 10 [0xa]))) ./ext/misc/csv.c:277 7 {*cmpsi_1}
     (nil))
(jump_insn 288 287 289 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:277 612 {*jcc_1}
     (nil)
 -> 316)
;;  succ:       47 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 85 86 87 153 154 155
(note 289 288 290 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 47 (set (reg/f:DI 0 ax [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:278 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 47 (set (reg:SI 0 ax [orig:85 D.6561 ] [85])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [153])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])) ./ext/misc/csv.c:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [153])
        (nil)))
(insn 292 291 293 47 (parallel [
            (set (reg:SI 1 dx [orig:86 D.6561 ] [86])
                (plus:SI (reg:SI 0 ax [orig:85 D.6561 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:278 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.6561 ] [85])
        (nil)))
(insn 293 292 294 47 (set (reg/f:DI 0 ax [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:278 87 {*movdi_internal_rex64}
     (nil))
(insn 294 293 295 47 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [154])
                (const_int 24 [0x18])) [0 p_8(D)->nLine+0 S4 A64])
        (reg:SI 1 dx [orig:86 D.6561 ] [86])) ./ext/misc/csv.c:278 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [154])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:86 D.6561 ] [86])
            (nil))))
(insn 295 294 296 47 (set (reg/f:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 296 295 297 47 (set (reg:SI 0 ax [orig:87 D.6561 ] [87])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [155])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [155])
        (nil)))
(insn 297 296 298 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:87 D.6561 ] [87])
            (const_int 0 [0]))) ./ext/misc/csv.c:279 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:87 D.6561 ] [87])
        (nil)))
(jump_insn 298 297 299 47 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:279 612 {*jcc_1}
     (nil)
 -> 316)
;;  succ:       48 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 91 92 93 156 157
(note 299 298 300 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 48 (set (reg/f:DI 0 ax [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 301 300 302 48 (set (reg/f:DI 1 dx [orig:88 D.6560 ] [88])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [156])
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [156])
        (nil)))
(insn 302 301 303 48 (set (reg/f:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 303 302 304 48 (set (reg:SI 0 ax [orig:89 D.6561 ] [89])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [157])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [157])
        (nil)))
(insn 304 303 305 48 (set (reg:DI 0 ax [orig:90 D.6563 ] [90])
        (sign_extend:DI (reg:SI 0 ax [orig:89 D.6561 ] [89]))) ./ext/misc/csv.c:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 D.6561 ] [89])
        (nil)))
(insn 305 304 306 48 (parallel [
            (set (reg:DI 0 ax [orig:91 D.6563 ] [91])
                (plus:DI (reg:DI 0 ax [orig:90 D.6563 ] [90])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:90 D.6563 ] [90])
        (nil)))
(insn 306 305 307 48 (parallel [
            (set (reg/f:DI 0 ax [orig:92 D.6560 ] [92])
                (plus:DI (reg:DI 0 ax [orig:91 D.6563 ] [91])
                    (reg/f:DI 1 dx [orig:88 D.6560 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:91 D.6563 ] [91])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:88 D.6560 ] [88])
            (nil))))
(insn 307 306 308 48 (set (reg:QI 0 ax [orig:93 D.6562 ] [93])
        (mem:QI (reg/f:DI 0 ax [orig:92 D.6560 ] [92]) [0 *_54+0 S1 A8])) ./ext/misc/csv.c:279 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.6560 ] [92])
        (nil)))
(insn 308 307 309 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:93 D.6562 ] [93])
            (const_int 13 [0xd]))) ./ext/misc/csv.c:279 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:93 D.6562 ] [93])
        (nil)))
(jump_insn 309 308 310 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) ./ext/misc/csv.c:279 612 {*jcc_1}
     (nil)
 -> 316)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 95 158 159
(note 310 309 311 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 49 (set (reg/f:DI 0 ax [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 312 311 313 49 (set (reg:SI 0 ax [orig:94 D.6561 ] [94])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [158])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [158])
        (nil)))
(insn 313 312 314 49 (parallel [
            (set (reg:SI 1 dx [orig:95 D.6561 ] [95])
                (plus:SI (reg:SI 0 ax [orig:94 D.6561 ] [94])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:279 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:94 D.6561 ] [94])
        (nil)))
(insn 314 313 315 49 (set (reg/f:DI 0 ax [159])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:279 87 {*movdi_internal_rex64}
     (nil))
(insn 315 314 316 49 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [159])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])
        (reg:SI 1 dx [orig:95 D.6561 ] [95])) ./ext/misc/csv.c:279 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [159])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:95 D.6561 ] [95])
            (nil))))
;;  succ:       50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;;              47
;;              48
;;              49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 96 97 160 161
(code_label 316 315 317 50 51 "" [3 uses])
(note 317 316 318 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 50 (set (reg:SI 0 ax [160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 c+0 S4 A32])) ./ext/misc/csv.c:281 89 {*movsi_internal}
     (nil))
(insn 319 318 320 50 (set (reg:QI 0 ax [orig:96 D.6562 ] [96])
        (reg:QI 0 ax [160])) ./ext/misc/csv.c:281 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [160])
        (nil)))
(insn 320 319 321 50 (set (reg:SI 1 dx [orig:97 D.6561 ] [97])
        (sign_extend:SI (reg:QI 0 ax [orig:96 D.6562 ] [96]))) ./ext/misc/csv.c:281 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:96 D.6562 ] [96])
        (nil)))
(insn 321 320 322 50 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:281 87 {*movdi_internal_rex64}
     (nil))
(insn 322 321 323 50 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [161])
                (const_int 32 [0x20])) [0 p_8(D)->cTerm+0 S4 A64])
        (reg:SI 1 dx [orig:97 D.6561 ] [97])) ./ext/misc/csv.c:281 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [161])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:97 D.6561 ] [97])
            (nil))))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              32 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 162
(code_label 323 322 324 51 45 "" [1 uses])
(note 324 323 325 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 51 (set (reg/f:DI 0 ax [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 326 325 327 51 (set (reg/f:DI 0 ax [orig:101 D.6560 ] [101])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [162])
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [162])
        (nil)))
(insn 327 326 328 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:101 D.6560 ] [101])
            (const_int 0 [0]))) ./ext/misc/csv.c:283 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:101 D.6560 ] [101])
        (nil)))
(jump_insn 328 327 329 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) ./ext/misc/csv.c:283 612 {*jcc_1}
     (nil)
 -> 337)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 103 104 105 163 164
(note 329 328 330 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 52 (set (reg/f:DI 0 ax [163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 331 330 332 52 (set (reg/f:DI 1 dx [orig:102 D.6560 ] [102])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [163])
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [163])
        (nil)))
(insn 332 331 333 52 (set (reg/f:DI 0 ax [164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:283 87 {*movdi_internal_rex64}
     (nil))
(insn 333 332 334 52 (set (reg:SI 0 ax [orig:103 D.6561 ] [103])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [164])
                (const_int 16 [0x10])) [0 p_8(D)->n+0 S4 A64])) ./ext/misc/csv.c:283 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [164])
        (nil)))
(insn 334 333 335 52 (set (reg:DI 0 ax [orig:104 D.6563 ] [104])
        (sign_extend:DI (reg:SI 0 ax [orig:103 D.6561 ] [103]))) ./ext/misc/csv.c:283 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:103 D.6561 ] [103])
        (nil)))
(insn 335 334 336 52 (parallel [
            (set (reg/f:DI 0 ax [orig:105 D.6560 ] [105])
                (plus:DI (reg:DI 0 ax [orig:104 D.6563 ] [104])
                    (reg/f:DI 1 dx [orig:102 D.6560 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:283 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:104 D.6563 ] [104])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:102 D.6560 ] [102])
            (nil))))
(insn 336 335 337 52 (set (mem:QI (reg/f:DI 0 ax [orig:105 D.6560 ] [105]) [0 *_69+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:283 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:105 D.6560 ] [105])
        (nil)))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51
;;              52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 165 166
(code_label 337 336 338 53 52 "" [1 uses])
(note 338 337 339 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 53 (set (reg/f:DI 0 ax [165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:284 87 {*movdi_internal_rex64}
     (nil))
(insn 340 339 341 53 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [165])
                (const_int 28 [0x1c])) [0 p_8(D)->bNotFirst+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:284 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [165])
        (nil)))
(insn 341 340 342 53 (set (reg/f:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:285 87 {*movdi_internal_rex64}
     (nil))
(insn 342 341 343 53 (set (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [166])
                (const_int 8 [0x8])) [0 p_8(D)->z+0 S8 A64])) ./ext/misc/csv.c:285 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [166])
        (nil)))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              3 [100.0%] 
;;              30 [100.0%] 
;;              37 [100.0%] 
;;              40 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 106
(code_label 343 342 344 54 29 "" [4 uses])
(note 344 343 345 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 349 54 (set (reg:DI 0 ax [orig:106 <retval> ] [106])
        (reg/f:DI 0 ax [orig:59 D.6560 ] [59])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6560 ] [59])
        (nil)))
(insn 349 345 352 54 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:106 <retval> ] [106])) ./ext/misc/csv.c:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:106 <retval> ] [106])
        (nil)))
(insn 352 349 0 54 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:286 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_xfer_error (csv_xfer_error, funcdef_no=11, decl_uid=5630, cgraph_uid=11)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 18:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 22
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 25
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 22.
deleting insn with uid = 22.


csv_xfer_error

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,10u} r1={7d,4u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,7u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d} r18={2d} r19={2d} r20={1d,1u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 155{123d,31u,1e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg:DI 5 di [ pTab ])) ./ext/misc/csv.c:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pTab ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])
        (reg:DI 4 si [ pRdr ])) ./ext/misc/csv.c:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pRdr ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [66])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [orig:59 sqlite3_api.6 ] [59])
        (mem/f/c:DI (reg/f:DI 0 ax [66]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [orig:60 D.6566 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:59 sqlite3_api.6 ] [59])
                (const_int 464 [0x1d0])) [0 sqlite3_api.6_1->free+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 sqlite3_api.6 ] [59])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 1 dx [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 1 dx [orig:61 D.6567 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [67])
                (const_int 16 [0x10])) [0 pTab_3(D)->base.zErrMsg+0 S8 A64])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [67])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:61 D.6567 ] [61])) ./ext/misc/csv.c:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.6567 ] [61])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (reg/f:DI 0 ax [orig:60 D.6566 ] [60]) [0 *_2 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:330 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6566 ] [60])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [68])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [orig:62 sqlite3_api.7 ] [62])
        (mem/f/c:DI (reg/f:DI 0 ax [68]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 1 dx [orig:63 D.6568 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:62 sqlite3_api.7 ] [62])
                (const_int 552 [0x228])) [0 sqlite3_api.7_5->mprintf+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 sqlite3_api.7 ] [62])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 0 ax [orig:64 D.6569 ] [64])
                (plus:DI (reg/f:DI 0 ax [69])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:331 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 pRdr+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:64 D.6569 ] [64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6569 ] [64])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:331 91 {*movqi_internal}
     (nil))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:63 D.6568 ] [63]) [0 *_6 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:331 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:63 D.6568 ] [63])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [orig:65 D.6567 ] [65])
        (reg:DI 0 ax)) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 1 dx [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 0 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [70])
                (const_int 16 [0x10])) [0 pTab_3(D)->base.zErrMsg+0 S8 A64])
        (reg/f:DI 0 ax [orig:65 D.6567 ] [65])) ./ext/misc/csv.c:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [70])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6567 ] [65])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabDisconnect (csvtabDisconnect, funcdef_no=12, decl_uid=5590, cgraph_uid=12)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 21
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 31
changing reg in insn 35
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 14.
deleting insn with uid = 14.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 27.
deleting insn with uid = 27.


csvtabDisconnect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={17d,14u} r1={9d,5u} r2={4d} r4={4d} r5={7d,4u} r6={1d,8u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 208{171d,37u,0e} in 27{24 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtab+0 S8 A64])
        (reg:DI 5 di [ pVtab ])) ./ext/misc/csv.c:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pVtab ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtab+0 S8 A64])) ./ext/misc/csv.c:338 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg/f:DI 0 ax [69])) ./ext/misc/csv.c:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [70])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [orig:59 sqlite3_api.8 ] [59])
        (mem/f/c:DI (reg/f:DI 0 ax [70]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [orig:60 D.6571 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:59 sqlite3_api.8 ] [59])
                (const_int 464 [0x1d0])) [0 sqlite3_api.8_3->free+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 sqlite3_api.8 ] [59])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 1 dx [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 1 dx [orig:61 D.6572 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [71])
                (const_int 24 [0x18])) [0 p_2->zFilename+0 S8 A64])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [71])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:61 D.6572 ] [61])) ./ext/misc/csv.c:339 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.6572 ] [61])
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (reg/f:DI 0 ax [orig:60 D.6571 ] [60]) [0 *_4 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:339 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6571 ] [60])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [72])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [orig:62 sqlite3_api.9 ] [62])
        (mem/f/c:DI (reg/f:DI 0 ax [72]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [orig:63 D.6571 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:62 sqlite3_api.9 ] [62])
                (const_int 464 [0x1d0])) [0 sqlite3_api.9_6->free+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 sqlite3_api.9 ] [62])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 1 dx [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 1 dx [orig:64 D.6572 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [73])
                (const_int 32 [0x20])) [0 p_2->zData+0 S8 A64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [73])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:64 D.6572 ] [64])) ./ext/misc/csv.c:340 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:64 D.6572 ] [64])
        (nil)))
(call_insn 21 20 22 2 (call (mem:QI (reg/f:DI 0 ax [orig:63 D.6571 ] [63]) [0 *_7 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:340 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6571 ] [63])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 0 ax [74])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [orig:65 sqlite3_api.10 ] [65])
        (mem/f/c:DI (reg/f:DI 0 ax [74]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [orig:66 D.6571 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:65 sqlite3_api.10 ] [65])
                (const_int 464 [0x1d0])) [0 sqlite3_api.10_9->free+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 sqlite3_api.10 ] [65])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 1 dx [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 1 dx [75])) ./ext/misc/csv.c:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [75])
        (nil)))
(call_insn 27 26 28 2 (call (mem:QI (reg/f:DI 0 ax [orig:66 D.6571 ] [66]) [0 *_10 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:341 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6571 ] [66])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 28 27 31 2 (set (reg:SI 0 ax [orig:67 D.6573 ] [67])
        (const_int 0 [0])) ./ext/misc/csv.c:342 89 {*movsi_internal}
     (nil))
(insn 31 28 35 2 (set (reg:SI 0 ax [orig:68 <retval> ] [68])
        (reg:SI 0 ax [orig:67 D.6573 ] [67])) ./ext/misc/csv.c:342 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.6573 ] [67])
        (nil)))
(insn 35 31 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:68 <retval> ] [68])) ./ext/misc/csv.c:343 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 <retval> ] [68])
        (nil)))
(insn 38 35 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:343 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_skip_whitespace (csv_skip_whitespace, funcdef_no=13, decl_uid=5637, cgraph_uid=13)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 9:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) qm {zero_extendqidi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 20
	 Choosing alt 0 in insn 20:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 38: point = 0
   Insn 35: point = 0
   Insn 31: point = 1
   Insn 28: point = 3
  BB 4
   Insn 26: point = 4
   Insn 25: point = 4
   Insn 23: point = 5
   Insn 22: point = 7
   Insn 21: point = 9
   Insn 20: point = 11
   Insn 19: point = 13
   Insn 18: point = 15
   Insn 17: point = 17
   Insn 16: point = 19
   Insn 15: point = 21
   Insn 14: point = 22
   Insn 13: point = 24
   Insn 12: point = 25
  BB 2
   Insn 41: point = 25
   Insn 2: point = 25
  BB 3
   Insn 9: point = 25
 r59: [23..24]
 r60: [12..22]
 r61: [18..19]
 r62: [16..17]
 r63: [14..15]
 r64: [12..13]
 r65: [10..11]
 r66: [8..9]
 r67: [6..7]
 r68: [4..5]
 r69: [2..3]
 r70: [0..1]
 r71: [20..21]
Compressing live ranges: from 25 to 24 - 96%
Ranges after the compression:
 r59: [22..23]
 r60: [12..21]
 r61: [18..19]
 r62: [16..17]
 r63: [14..15]
 r64: [12..13]
 r65: [10..11]
 r66: [8..9]
 r67: [6..7]
 r68: [4..5]
 r69: [2..3]
 r70: [0..1]
 r71: [20..21]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 28
changing reg in insn 31
changing reg in insn 31
changing reg in insn 35
changing reg in insn 15
changing reg in insn 16
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.


csv_skip_whitespace

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={15d,15u} r1={3d,1u} r2={2d} r4={2d} r5={2d,1u} r6={1d,10u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,1u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 116{81d,35u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 41 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 41 3 42 2 (set (pc)
        (label_ref 10)) ./ext/misc/csv.c:348 650 {jump}
     (nil)
 -> 10)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 24)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 24 42 8 3 58 "" [1 uses])
(note 8 24 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 274 {*adddi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 71
(code_label 10 9 11 4 57 "" [1 uses])
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 12 11 13 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fbdb4772900 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:348 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 13 12 14 4 (set (reg/f:DI 0 ax [orig:59 D.6574 ] [59])
        (reg:DI 0 ax)) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 4 (set (reg/f:DI 1 dx [orig:60 D.6575 ] [60])
        (mem/f:DI (reg/f:DI 0 ax [orig:59 D.6574 ] [59]) [0 *_3+0 S8 A64])) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6574 ] [59])
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:348 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 4 (set (reg:QI 0 ax [orig:61 D.6576 ] [61])
        (mem:QI (reg/f:DI 0 ax [71]) [0 *z_1+0 S1 A8])) ./ext/misc/csv.c:348 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [71])
        (nil)))
(insn 17 16 18 4 (set (reg:QI 0 ax [orig:62 D.6577 ] [62])
        (reg:QI 0 ax [orig:61 D.6576 ] [61])) ./ext/misc/csv.c:348 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.6576 ] [61])
        (nil)))
(insn 18 17 19 4 (set (reg:DI 0 ax [orig:63 D.6578 ] [63])
        (zero_extend:DI (reg:QI 0 ax [orig:62 D.6577 ] [62]))) ./ext/misc/csv.c:348 141 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:62 D.6577 ] [62])
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 0 ax [orig:64 D.6578 ] [64])
                (ashift:DI (reg:DI 0 ax [orig:63 D.6578 ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6578 ] [63])
        (nil)))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.6575 ] [65])
                (plus:DI (reg:DI 0 ax [orig:64 D.6578 ] [64])
                    (reg/f:DI 1 dx [orig:60 D.6575 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:64 D.6578 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:60 D.6575 ] [60])
            (nil))))
(insn 21 20 22 4 (set (reg:HI 0 ax [orig:66 D.6579 ] [66])
        (mem:HI (reg/f:DI 0 ax [orig:65 D.6575 ] [65]) [0 *_9+0 S2 A16])) ./ext/misc/csv.c:348 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6575 ] [65])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:67 D.6580 ] [67])
        (zero_extend:SI (reg:HI 0 ax [orig:66 D.6579 ] [66]))) ./ext/misc/csv.c:348 146 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 0 ax [orig:66 D.6579 ] [66])
        (nil)))
(insn 23 22 25 4 (parallel [
            (set (reg:SI 0 ax [orig:68 D.6580 ] [68])
                (and:SI (reg:SI 0 ax [orig:67 D.6580 ] [67])
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:348 393 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.6580 ] [67])
        (nil)))
(insn 25 23 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:68 D.6580 ] [68])
            (const_int 0 [0]))) ./ext/misc/csv.c:348 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 D.6580 ] [68])
        (nil)))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:348 612 {*jcc_1}
     (nil)
 -> 24)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 69 70
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 5 (set (reg/f:DI 0 ax [orig:69 D.6581 ] [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:349 87 {*movdi_internal_rex64}
     (nil))
(insn 31 28 35 5 (set (reg:DI 0 ax [orig:70 <retval> ] [70])
        (reg/f:DI 0 ax [orig:69 D.6581 ] [69])) ./ext/misc/csv.c:349 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.6581 ] [69])
        (nil)))
(insn 35 31 38 5 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:70 <retval> ] [70])) ./ext/misc/csv.c:350 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 <retval> ] [70])
        (nil)))
(insn 38 35 0 5 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:350 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_trim_whitespace (csv_trim_whitespace, funcdef_no=14, decl_uid=5643, cgraph_uid=14)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 14:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 25
	 Choosing alt 0 in insn 25:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) qm {zero_extendqidi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 41
	 Choosing alt 0 in insn 41:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 42:  (0) m  (1) qn {*movqi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 42: point = 0
   Insn 41: point = 1
   Insn 40: point = 3
   Insn 39: point = 4
  BB 4
   Insn 18: point = 5
   Insn 17: point = 5
  BB 2
   Insn 45: point = 5
   Insn 10: point = 5
   Insn 9: point = 6
   Insn 8: point = 7
   Insn 7: point = 7
   Insn 6: point = 8
   Insn 2: point = 9
  BB 3
   Insn 14: point = 9
  BB 5
   Insn 36: point = 9
   Insn 35: point = 9
   Insn 33: point = 10
   Insn 32: point = 12
   Insn 31: point = 14
   Insn 30: point = 16
   Insn 29: point = 18
   Insn 28: point = 20
   Insn 27: point = 22
   Insn 26: point = 24
   Insn 25: point = 26
   Insn 24: point = 28
   Insn 23: point = 29
   Insn 22: point = 30
   Insn 21: point = 32
   Insn 20: point = 33
 r59: [31..32]
 r60: [17..30]
 r61: [25..26]
 r62: [23..24]
 r63: [21..22]
 r64: [19..20]
 r65: [17..18]
 r66: [15..16]
 r67: [13..14]
 r68: [11..12]
 r69: [9..10]
 r70: [0..1]
 r71: [7..8]
 r72: [5..6]
 r73: [27..29]
 r74: [27..28]
 r75: [2..4]
 r76: [2..3]
Compressing live ranges: from 33 to 30 - 90%
Ranges after the compression:
 r59: [28..29]
 r60: [16..27]
 r61: [24..25]
 r62: [22..23]
 r63: [20..21]
 r64: [18..19]
 r65: [16..17]
 r66: [14..15]
 r67: [12..13]
 r68: [10..11]
 r69: [8..9]
 r70: [0..1]
 r71: [6..7]
 r72: [4..5]
 r73: [26..27]
 r74: [26..27]
 r75: [2..3]
 r76: [2..3]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 30
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 23
changing reg in insn 24
changing reg in insn 39
changing reg in insn 40
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 20.


csv_trim_whitespace

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={13d,12u} r1={10d,7u} r2={4d,1u} r4={3d} r5={4d,2u} r6={1d,16u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,2u} r18={2d} r19={2d} r20={1d,1u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 186{133d,49u,4e} in 30{28 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 71 72
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [71])) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [71])
        (nil)))
(call_insn/i 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:354 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 0 ax [72])
        (reg:DI 0 ax)) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 0 ax [72])) ./ext/misc/csv.c:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [72])
        (nil)))
(jump_insn 45 10 46 2 (set (pc)
        (label_ref 15)) ./ext/misc/csv.c:355 650 {jump}
     (nil)
 -> 15)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 46 45 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 34 46 13 3 63 "" [1 uses])
(note 13 34 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 15 14 16 4 61 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ./ext/misc/csv.c:355 612 {*jcc_1}
     (nil)
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 73 74
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 20 19 21 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x7fbdb4772900 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 21 20 22 5 (set (reg/f:DI 0 ax [orig:59 D.6582 ] [59])
        (reg:DI 0 ax)) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 21 23 5 (set (reg/f:DI 0 ax [orig:60 D.6583 ] [60])
        (mem/f:DI (reg/f:DI 0 ax [orig:59 D.6582 ] [59]) [0 *_4+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6582 ] [59])
        (nil)))
(insn 23 22 24 5 (set (reg:DI 1 dx [73])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 2 cx [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:355 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg/f:DI 1 dx [orig:61 D.6584 ] [61])
                (plus:DI (reg:DI 1 dx [73])
                    (reg/f:DI 2 cx [74])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [74])
        (expr_list:REG_DEAD (reg:DI 1 dx [73])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64]))
                (nil)))))
(insn 26 25 27 5 (set (reg:QI 1 dx [orig:62 D.6585 ] [62])
        (mem:QI (reg/f:DI 1 dx [orig:61 D.6584 ] [61]) [0 *_6+0 S1 A8])) ./ext/misc/csv.c:355 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.6584 ] [61])
        (nil)))
(insn 27 26 28 5 (set (reg:QI 1 dx [orig:63 D.6586 ] [63])
        (reg:QI 1 dx [orig:62 D.6585 ] [62])) ./ext/misc/csv.c:355 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:62 D.6585 ] [62])
        (nil)))
(insn 28 27 29 5 (set (reg:DI 1 dx [orig:64 D.6587 ] [64])
        (zero_extend:DI (reg:QI 1 dx [orig:63 D.6586 ] [63]))) ./ext/misc/csv.c:355 141 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 1 dx [orig:63 D.6586 ] [63])
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:DI 1 dx [orig:65 D.6587 ] [65])
                (ashift:DI (reg:DI 1 dx [orig:64 D.6587 ] [64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.6587 ] [64])
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.6583 ] [66])
                (plus:DI (reg/f:DI 0 ax [orig:60 D.6583 ] [60])
                    (reg:DI 1 dx [orig:65 D.6587 ] [65])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:65 D.6587 ] [65])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6583 ] [60])
            (nil))))
(insn 31 30 32 5 (set (reg:HI 0 ax [orig:67 D.6588 ] [67])
        (mem:HI (reg/f:DI 0 ax [orig:66 D.6583 ] [66]) [0 *_11+0 S2 A16])) ./ext/misc/csv.c:355 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6583 ] [66])
        (nil)))
(insn 32 31 33 5 (set (reg:SI 0 ax [orig:68 D.6589 ] [68])
        (zero_extend:SI (reg:HI 0 ax [orig:67 D.6588 ] [67]))) ./ext/misc/csv.c:355 146 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 0 ax [orig:67 D.6588 ] [67])
        (nil)))
(insn 33 32 35 5 (parallel [
            (set (reg:SI 0 ax [orig:69 D.6589 ] [69])
                (and:SI (reg:SI 0 ax [orig:68 D.6589 ] [68])
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:355 393 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 D.6589 ] [68])
        (nil)))
(insn 35 33 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:69 D.6589 ] [69])
            (const_int 0 [0]))) ./ext/misc/csv.c:355 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 D.6589 ] [69])
        (nil)))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ./ext/misc/csv.c:355 612 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       3
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 75 76
(code_label 37 36 38 6 62 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg:DI 0 ax [75])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:356 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 1 dx [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:356 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6584 ] [70])
                (plus:DI (reg:DI 0 ax [75])
                    (reg/f:DI 1 dx [76])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:356 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [76])
        (expr_list:REG_DEAD (reg:DI 0 ax [75])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64]))
                (nil)))))
(insn 42 41 0 6 (set (mem:QI (reg/f:DI 0 ax [orig:70 D.6584 ] [70]) [0 *_16+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:356 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6584 ] [70])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_dequote (csv_dequote, funcdef_no=15, decl_uid=5650, cgraph_uid=15)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) qm  (1) qn {*cmpqi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 30
	 Choosing alt 0 in insn 30:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) q  (1) qm {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 49
	 Choosing alt 0 in insn 49:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 50:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) q  (1) qm {*cmpqi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 57
	 Choosing alt 0 in insn 57:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) q  (1) qm {*cmpqi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 62:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 66:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 73
	 Choosing alt 0 in insn 73:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 74:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 75:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 76:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 80:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 88
	 Choosing alt 0 in insn 88:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 89:  (0) m  (1) qn {*movqi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
  BB 7
   Insn 96: point = 0
  BB 4
   Insn 94: point = 0
  BB 14
   Insn 89: point = 0
   Insn 88: point = 1
   Insn 87: point = 3
   Insn 86: point = 4
   Insn 85: point = 6
  BB 13
   Insn 83: point = 7
   Insn 82: point = 7
   Insn 80: point = 8
   Insn 79: point = 10
  BB 8
   Insn 98: point = 11
   Insn 43: point = 11
   Insn 42: point = 11
  BB 6
   Insn 35: point = 11
   Insn 34: point = 11
   Insn 33: point = 12
   Insn 32: point = 14
   Insn 31: point = 15
   Insn 30: point = 17
   Insn 29: point = 19
   Insn 28: point = 20
   Insn 27: point = 22
  BB 5
   Insn 25: point = 23
   Insn 24: point = 23
   Insn 23: point = 23
   Insn 22: point = 24
   Insn 21: point = 25
   Insn 20: point = 25
   Insn 19: point = 26
  BB 3
   Insn 13: point = 27
   Insn 12: point = 27
  BB 2
   Insn 10: point = 27
   Insn 9: point = 27
   Insn 8: point = 27
   Insn 7: point = 28
   Insn 6: point = 30
   Insn 2: point = 31
  BB 12
   Insn 76: point = 31
   Insn 75: point = 31
   Insn 74: point = 32
   Insn 73: point = 34
   Insn 72: point = 36
   Insn 71: point = 37
   Insn 70: point = 38
   Insn 69: point = 40
   Insn 68: point = 41
   Insn 67: point = 43
   Insn 66: point = 44
   Insn 65: point = 45
  BB 11
   Insn 62: point = 46
  BB 10
   Insn 60: point = 46
   Insn 59: point = 46
   Insn 58: point = 47
   Insn 57: point = 49
   Insn 56: point = 51
   Insn 55: point = 52
   Insn 54: point = 54
  BB 9
   Insn 52: point = 55
   Insn 51: point = 55
   Insn 50: point = 56
   Insn 49: point = 58
   Insn 48: point = 60
   Insn 47: point = 61
 r59: [18..20]
 r60: [16..17]
 r61: [11..15]
 r62: [11..12]
 r63: [7..8]
 r64: [57..58]
 r65: [55..56]
 r66: [50..52]
 r67: [48..49]
 r68: [46..47]
 r69: [42..45]
 r70: [39..41]
 r71: [31..38]
 r72: [33..34]
 r73: [31..32]
 r74: [2..4]
 r75: [0..1]
 r76: [29..30]
 r77: [27..28]
 r78: [25..26]
 r79: [23..24]
 r80: [21..22]
 r81: [18..19]
 r82: [13..14]
 r83: [59..61]
 r84: [59..60]
 r85: [53..54]
 r86: [50..51]
 r87: [43..44]
 r88: [39..40]
 r89: [35..37]
 r90: [35..36]
 r91: [9..10]
 r92: [5..6]
 r93: [2..3]
Compressing live ranges: from 62 to 52 - 83%
Ranges after the compression:
 r59: [16..17]
 r60: [14..15]
 r61: [10..13]
 r62: [10..11]
 r63: [6..7]
 r64: [48..49]
 r65: [46..47]
 r66: [42..43]
 r67: [40..41]
 r68: [38..39]
 r69: [36..37]
 r70: [34..35]
 r71: [28..33]
 r72: [30..31]
 r73: [28..29]
 r74: [2..3]
 r75: [0..1]
 r76: [26..27]
 r77: [24..25]
 r78: [22..23]
 r79: [20..21]
 r80: [18..19]
 r81: [16..17]
 r82: [12..13]
 r83: [50..51]
 r84: [50..51]
 r85: [44..45]
 r86: [42..43]
 r87: [36..37]
 r88: [34..35]
 r89: [32..33]
 r90: [32..33]
 r91: [8..9]
 r92: [4..5]
 r93: [2..3]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 28
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 80
changing reg in insn 82
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 55
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 65
changing reg in insn 68
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 70
changing reg in insn 70
changing reg in insn 75
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 86
changing reg in insn 88
changing reg in insn 88
changing reg in insn 89
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 33
changing reg in insn 47
changing reg in insn 48
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 79
changing reg in insn 80
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.


csv_dequote

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={28d,28u,1e} r1={10d,8u,4e} r2={3d,1u} r4={2d} r5={3d,2u} r6={1d,47u} r7={1d,16u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={20d,7u} r18={1d} r19={1d} r20={1d,1u,11e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 243{117d,110u,16e} in 64{63 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 76 77
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:362 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:QI 0 ax [77])
        (mem:QI (reg/f:DI 0 ax [76]) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:362 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 8 7 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
        (reg:QI 0 ax [77])) ./ext/misc/csv.c:362 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [77])
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
            (const_int 39 [0x27]))) ./ext/misc/csv.c:365 5 {*cmpqi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:365 612 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8])
            (const_int 34 [0x22]))) ./ext/misc/csv.c:365 5 {*cmpqi_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) ./ext/misc/csv.c:365 612 {*jcc_1}
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 14 13 94 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 94 14 95 4 (set (pc)
        (label_ref 92)) ./ext/misc/csv.c:365 650 {jump}
     (nil)
 -> 92)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 95 94 17)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79
(code_label 17 95 18 5 65 "" [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [78])) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [78])
        (nil)))
(call_insn/i 21 20 22 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:366 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 5 (set (reg:DI 0 ax [79])
        (reg:DI 0 ax)) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 24 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
        (reg:DI 0 ax [79])) ./ext/misc/csv.c:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [79])
        (nil)))
(insn 24 23 25 5 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:367 8 {*cmpdi_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) ./ext/misc/csv.c:367 612 {*jcc_1}
     (nil)
 -> 36)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 80 81 82
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 0 ax [80])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 1 dx [orig:59 D.6590 ] [59])
                (plus:DI (reg:DI 0 ax [80])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:367 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [80])
        (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 29 28 30 6 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 0 ax [orig:60 D.6591 ] [60])
                (plus:DI (reg/f:DI 0 ax [81])
                    (reg:DI 1 dx [orig:59 D.6590 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:367 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.6590 ] [59])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:59 D.6590 ] [59]))
                (nil)))))
(insn 31 30 32 6 (set (reg:QI 1 dx [orig:61 D.6592 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 D.6591 ] [60]) [0 *_8+0 S1 A8])) ./ext/misc/csv.c:367 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6591 ] [60])
        (nil)))
(insn 32 31 33 6 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:367 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 6 (set (reg:QI 0 ax [orig:62 D.6592 ] [62])
        (mem:QI (reg/f:DI 0 ax [82]) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:367 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (nil)))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:61 D.6592 ] [61])
            (reg:QI 0 ax [orig:62 D.6592 ] [62]))) ./ext/misc/csv.c:367 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:62 D.6592 ] [62])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:61 D.6592 ] [61])
            (nil))))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ./ext/misc/csv.c:367 612 {*jcc_1}
     (nil)
 -> 40)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 35 37 7 67 "" [1 uses])
(note 37 36 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 37 97 7 (set (pc)
        (label_ref 92)) ./ext/misc/csv.c:367 650 {jump}
     (nil)
 -> 92)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 97 96 40)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 40 97 41 8 68 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
        (const_int 1 [0x1])) ./ext/misc/csv.c:368 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 98 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:368 89 {*movsi_internal}
     (nil))
(jump_insn 98 43 99 8 (set (pc)
        (label_ref 77)) ./ext/misc/csv.c:368 650 {jump}
     (nil)
 -> 77)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 99 98 81)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 65 83 84
(code_label 81 99 46 9 71 "" [1 uses])
(note 46 81 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:DI 0 ax [83])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 9 (set (reg/f:DI 1 dx [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg/f:DI 0 ax [orig:64 D.6591 ] [64])
                (plus:DI (reg:DI 0 ax [83])
                    (reg/f:DI 1 dx [84])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [84])
        (expr_list:REG_DEAD (reg:DI 0 ax [83])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))
                (nil)))))
(insn 50 49 51 9 (set (reg:QI 0 ax [orig:65 D.6592 ] [65])
        (mem:QI (reg/f:DI 0 ax [orig:64 D.6591 ] [64]) [0 *_14+0 S1 A8])) ./ext/misc/csv.c:369 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6591 ] [64])
        (nil)))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:65 D.6592 ] [65])
            (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8]))) ./ext/misc/csv.c:369 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:65 D.6592 ] [65])
        (nil)))
(jump_insn 52 51 53 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ./ext/misc/csv.c:369 612 {*jcc_1}
     (nil)
 -> 63)
;;  succ:       10 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68 85 86
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (reg:DI 0 ax [85])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 10 (parallel [
            (set (reg:DI 1 dx [orig:66 D.6590 ] [66])
                (plus:DI (reg:DI 0 ax [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [85])
        (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (const_int 1 [0x1]))
            (nil))))
(insn 56 55 57 10 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:369 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.6591 ] [67])
                (plus:DI (reg/f:DI 0 ax [86])
                    (reg:DI 1 dx [orig:66 D.6590 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [86])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.6590 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.6590 ] [66]))
                (nil)))))
(insn 58 57 59 10 (set (reg:QI 0 ax [orig:68 D.6592 ] [68])
        (mem:QI (reg/f:DI 0 ax [orig:67 D.6591 ] [67]) [0 *_17+0 S1 A8])) ./ext/misc/csv.c:369 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6591 ] [67])
        (nil)))
(insn 59 58 60 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:68 D.6592 ] [68])
            (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -21 [0xffffffffffffffeb])) [0 cQuote+0 S1 A8]))) ./ext/misc/csv.c:369 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.6592 ] [68])
        (nil)))
(jump_insn 60 59 61 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ./ext/misc/csv.c:369 612 {*jcc_1}
     (nil)
 -> 63)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:369 274 {*adddi_1}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71 72 73 87 88 89 90
(code_label 63 62 64 12 70 "" [2 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:SI 0 ax [orig:69 j.11 ] [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) ./ext/misc/csv.c:370 89 {*movsi_internal}
     (nil))
(insn 66 65 67 12 (parallel [
            (set (reg:SI 1 dx [87])
                (plus:SI (reg:SI 0 ax [orig:69 j.11 ] [69])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 273 {*addsi_1}
     (nil))
(insn 67 66 68 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])
        (reg:SI 1 dx [87])) ./ext/misc/csv.c:370 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [87])
        (expr_list:REG_EQUAL (plus:SI (reg:SI 0 ax [orig:69 j.11 ] [69])
                (const_int 1 [0x1]))
            (nil))))
(insn 68 67 69 12 (set (reg:DI 1 dx [orig:70 D.6590 ] [70])
        (sign_extend:DI (reg:SI 0 ax [orig:69 j.11 ] [69]))) ./ext/misc/csv.c:370 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 j.11 ] [69])
        (nil)))
(insn 69 68 70 12 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:DI 1 dx [orig:71 D.6591 ] [71])
                (plus:DI (reg:DI 1 dx [orig:70 D.6590 ] [70])
                    (reg/f:DI 0 ax [88])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.6590 ] [70])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:70 D.6590 ] [70]))
                (nil)))))
(insn 71 70 72 12 (set (reg:DI 0 ax [89])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 2 cx [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:370 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (reg/f:DI 0 ax [orig:72 D.6591 ] [72])
                (plus:DI (reg:DI 0 ax [89])
                    (reg/f:DI 2 cx [90])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:370 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [90])
        (expr_list:REG_DEAD (reg:DI 0 ax [89])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))
                (nil)))))
(insn 74 73 75 12 (set (reg:QI 0 ax [orig:73 D.6592 ] [73])
        (mem:QI (reg/f:DI 0 ax [orig:72 D.6591 ] [72]) [0 *_24+0 S1 A8])) ./ext/misc/csv.c:370 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 D.6591 ] [72])
        (nil)))
(insn 75 74 76 12 (set (mem:QI (reg/f:DI 1 dx [orig:71 D.6591 ] [71]) [0 *_23+0 S1 A8])
        (reg:QI 0 ax [orig:73 D.6592 ] [73])) ./ext/misc/csv.c:370 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:73 D.6592 ] [73])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:71 D.6591 ] [71])
            (nil))))
(insn 76 75 77 12 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:368 274 {*adddi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              8 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 91
(code_label 77 76 78 13 69 "" [1 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg:DI 0 ax [91])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])) ./ext/misc/csv.c:368 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 82 13 (parallel [
            (set (reg:DI 0 ax [orig:63 D.6593 ] [63])
                (plus:DI (reg:DI 0 ax [91])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:368 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [91])
        (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 n+0 S8 A64])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 82 80 83 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:63 D.6593 ] [63])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S8 A64]))) ./ext/misc/csv.c:368 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6593 ] [63])
        (nil)))
(jump_insn 83 82 84 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:368 612 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       9
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 75 92 93
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 14 (set (reg:SI 0 ax [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 j+0 S4 A32])) ./ext/misc/csv.c:372 89 {*movsi_internal}
     (nil))
(insn 86 85 87 14 (set (reg:DI 1 dx [orig:74 D.6590 ] [74])
        (sign_extend:DI (reg:SI 0 ax [92]))) ./ext/misc/csv.c:372 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [92])
        (nil)))
(insn 87 86 88 14 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:372 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg/f:DI 0 ax [orig:75 D.6591 ] [75])
                (plus:DI (reg/f:DI 0 ax [93])
                    (reg:DI 1 dx [orig:74 D.6590 ] [74])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:372 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:74 D.6590 ] [74])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:74 D.6590 ] [74]))
                (nil)))))
(insn 89 88 92 14 (set (mem:QI (reg/f:DI 0 ax [orig:75 D.6591 ] [75]) [0 *_28+0 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:372 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.6591 ] [75])
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              4 [100.0%] 
;;              7 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 92 89 93 15 64 "" [2 uses])
(note 93 92 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_parameter (csv_parameter, funcdef_no=16, decl_uid=5662, cgraph_uid=16)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 0 in insn 33:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 49:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) rzw {*call_value}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 62: point = 0
   Insn 59: point = 0
   Insn 55: point = 1
  BB 5
   Insn 67: point = 4
   Insn 43: point = 4
  BB 3
   Insn 65: point = 5
   Insn 25: point = 5
  BB 6
   Insn 52: point = 6
   Insn 51: point = 7
   Insn 50: point = 7
   Insn 49: point = 8
   Insn 48: point = 10
  BB 4
   Insn 41: point = 11
   Insn 40: point = 11
   Insn 39: point = 12
   Insn 38: point = 14
   Insn 37: point = 15
   Insn 36: point = 16
   Insn 35: point = 17
   Insn 34: point = 17
   Insn 33: point = 18
   Insn 32: point = 20
   Insn 31: point = 21
   Insn 30: point = 23
  BB 2
   Insn 23: point = 24
   Insn 22: point = 24
   Insn 21: point = 25
   Insn 20: point = 26
   Insn 19: point = 26
   Insn 18: point = 27
   Insn 17: point = 28
   Insn 16: point = 29
   Insn 15: point = 30
   Insn 14: point = 31
   Insn 13: point = 33
   Insn 12: point = 34
   Insn 11: point = 35
   Insn 10: point = 36
   Insn 9: point = 36
   Insn 8: point = 37
   Insn 4: point = 38
   Insn 3: point = 38
   Insn 2: point = 38
 r59: [2..6]
 r60: [28..31]
 r61: [24..25]
 r62: [19..21]
 r63: [17..18]
 r64: [11..12]
 r65: [7..8]
 r66: [0..1]
 r67: [36..37]
 r68: [34..35]
 r69: [32..33]
 r70: [27..30]
 r71: [26..29]
 r72: [22..23]
 r73: [19..20]
 r74: [15..16]
 r75: [13..14]
 r76: [9..10]
Compressing live ranges: from 38 to 30 - 78%
Ranges after the compression:
 r59: [2..3]
 r60: [22..23]
 r61: [20..21]
 r62: [16..17]
 r63: [14..15]
 r64: [8..9]
 r65: [4..5]
 r66: [0..1]
 r67: [28..29]
 r68: [26..27]
 r69: [24..25]
 r70: [22..23]
 r71: [22..23]
 r72: [18..19]
 r73: [16..17]
 r74: [12..13]
 r75: [10..11]
 r76: [6..7]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 43
changing reg in insn 25
changing reg in insn 55
changing reg in insn 14
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 31
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 59
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 19
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 48
changing reg in insn 49
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 51.


csv_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={23d,21u} r1={8d,4u,1e} r2={6d,1u} r4={6d,2u} r5={9d,5u} r6={1d,20u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={8d,2u} r18={4d} r19={4d} r20={1d,1u,2e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 295{225d,67u,3e} in 43{39 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 67 68 69 70 71
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zTag+0 S8 A64])
        (reg:DI 5 di [ zTag ])) ./ext/misc/csv.c:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ zTag ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])
        (reg:SI 4 si [ nTag ])) ./ext/misc/csv.c:379 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nTag ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 1 dx [ z ])) ./ext/misc/csv.c:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ z ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [67])) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:380 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 0 ax [68])
        (reg:DI 0 ax)) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [68])) ./ext/misc/csv.c:380 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 0 ax [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:381 89 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx [orig:60 D.6595 ] [60])
        (sign_extend:DI (reg:SI 0 ax [69]))) ./ext/misc/csv.c:381 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [69])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 2 cx [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 0 ax [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zTag+0 S8 A64])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:60 D.6595 ] [60])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6595 ] [60])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [70])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [70])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [71])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [71])
        (nil)))
(call_insn/i 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fbdb4907e00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:381 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 22 2 (set (reg:SI 0 ax [orig:61 D.6596 ] [61])
        (reg:SI 0 ax)) ./ext/misc/csv.c:381 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.6596 ] [61])
            (const_int 0 [0]))) ./ext/misc/csv.c:381 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6596 ] [61])
        (nil)))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) ./ext/misc/csv.c:381 612 {*jcc_1}
     (nil)
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 65 3 (set (reg/f:DI 0 ax [orig:59 D.6594 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:381 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 65 25 66 3 (set (pc)
        (label_ref 53)) ./ext/misc/csv.c:381 650 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 66 65 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 72 73 74 75
(code_label 28 66 29 4 73 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 0 ax [72])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:382 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 1 dx [orig:62 D.6597 ] [62])
        (sign_extend:DI (reg:SI 0 ax [72]))) ./ext/misc/csv.c:382 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [72])
        (nil)))
(insn 32 31 33 4 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.6594 ] [63])
                (plus:DI (reg/f:DI 0 ax [73])
                    (reg:DI 1 dx [orig:62 D.6597 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:382 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.6597 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.6597 ] [62]))
                (nil)))))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:63 D.6594 ] [63])) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6594 ] [63])
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:382 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 36 35 37 4 (set (reg:DI 0 ax [74])
        (reg:DI 0 ax)) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [74])) ./ext/misc/csv.c:382 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [74])
        (nil)))
(insn 38 37 39 4 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:383 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 4 (set (reg:QI 0 ax [orig:64 D.6598 ] [64])
        (mem:QI (reg/f:DI 0 ax [75]) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:383 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 D.6598 ] [64])
            (const_int 61 [0x3d]))) ./ext/misc/csv.c:383 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:64 D.6598 ] [64])
        (nil)))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) ./ext/misc/csv.c:383 612 {*jcc_1}
     (nil)
 -> 46)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 67 5 (set (reg/f:DI 0 ax [orig:59 D.6594 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:383 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 67 43 68 5 (set (pc)
        (label_ref 53)) ./ext/misc/csv.c:383 650 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 68 67 46)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 65 76
(code_label 46 68 47 6 75 "" [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.6594 ] [65])
                (plus:DI (reg/f:DI 0 ax [76])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:384 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 z+0 S8 A64])
                (const_int 1 [0x1]))
            (nil))))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:65 D.6594 ] [65])) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6594 ] [65])
        (nil)))
(call_insn 51 50 52 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:384 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 6 (set (reg/f:DI 0 ax [orig:59 D.6594 ] [59])
        (reg:DI 0 ax)) ./ext/misc/csv.c:384 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 66
(code_label 53 52 54 7 74 "" [2 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 7 (set (reg:DI 0 ax [orig:66 <retval> ] [66])
        (reg/f:DI 0 ax [orig:59 D.6594 ] [59])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6594 ] [59])
        (nil)))
(insn 59 55 62 7 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:66 <retval> ] [66])) ./ext/misc/csv.c:385 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 <retval> ] [66])
        (nil)))
(insn 62 59 0 7 (use (reg/i:DI 0 ax)) ./ext/misc/csv.c:385 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_string_parameter (csv_string_parameter, funcdef_no=17, decl_uid=5668, cgraph_uid=17)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 31:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 54:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 66:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 83
changing reg in insn 70
changing reg in insn 44
changing reg in insn 25
changing reg in insn 86
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 33
changing reg in insn 34
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 76
changing reg in insn 77
changing reg in insn 80
changing reg in insn 81
changing reg in insn 86
changing reg in insn 90
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 16
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 41
changing reg in insn 49
changing reg in insn 50
changing reg in insn 52
changing reg in insn 53
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 67
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
starting the processing of deferred insns
ending the processing of deferred insns


csv_string_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={36d,29u} r1={14d,7u} r2={9d,2u} r4={12d,5u} r5={15d,8u} r6={1d,28u} r7={1d,16u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={10d,3u} r18={7d} r19={7d} r20={1d,1u} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} 
;;    total ref usage 474{375d,99u,0e} in 70{63 regular + 7 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 70 71 72 73
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])
        (reg:DI 4 si [ zParam ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ zParam ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 zArg+0 S8 A64])
        (reg:DI 1 dx [ zArg ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ zArg ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])
        (reg:DI 2 cx [ pzVal ])) ./ext/misc/csv.c:398 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ pzVal ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [70])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(call_insn/i 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fbdb4907800 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:400 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 0 ax [orig:60 D.6600 ] [60])
        (reg:DI 0 ax)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 2 cx [orig:61 D.6599 ] [61])
        (reg:SI 0 ax [orig:60 D.6600 ] [60])) ./ext/misc/csv.c:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.6600 ] [60])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 zArg+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [71])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [71])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:61 D.6599 ] [61])) ./ext/misc/csv.c:400 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:61 D.6599 ] [61])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [72])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [72])
        (nil)))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_parameter") [flags 0x3]  <function_decl 0x7fbdb43ec800 csv_parameter>) [0 csv_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:400 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 2 (set (reg:DI 0 ax [73])
        (reg:DI 0 ax)) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])
        (reg:DI 0 ax [73])) ./ext/misc/csv.c:400 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [73])
        (nil)))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:401 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) ./ext/misc/csv.c:401 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 96 3 (set (reg:SI 0 ax [orig:59 D.6599 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:401 89 {*movsi_internal}
     (nil))
(jump_insn 96 25 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:401 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 28)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 74 75
(code_label 28 97 29 4 77 "" [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:402 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 4 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [74])
                (const_int 64 [0x40])) [0 p_8(D)->zErr+0 S1 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:402 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 32 31 33 4 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:403 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 0 ax [orig:62 D.6601 ] [62])
        (mem/f:DI (reg/f:DI 0 ax [75]) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:403 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 34 33 35 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.6601 ] [62])
            (const_int 0 [0]))) ./ext/misc/csv.c:403 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6601 ] [62])
        (nil)))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:403 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 76 77
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg:DI 1 dx [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 zParam+0 S8 A64])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 5 (set (reg:DI 1 dx)
        (reg:DI 1 dx [76])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [76])
        (nil)))
(insn 40 39 41 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fbdb4516980 *.LC10>)) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [77])) ./ext/misc/csv.c:404 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [77])
        (nil)))
(insn 42 41 43 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:404 91 {*movqi_internal}
     (nil))
(call_insn 43 42 44 5 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:404 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 44 43 98 5 (set (reg:SI 0 ax [orig:59 D.6599 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:405 89 {*movsi_internal}
     (nil))
(jump_insn 98 44 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:405 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 47)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 66 78 79 80 81
(code_label 47 99 48 6 79 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 0 ax [78])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 0 ax [orig:63 sqlite3_api.12 ] [63])
        (mem/f/c:DI (reg/f:DI 0 ax [78]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 51 50 52 6 (set (reg/f:DI 1 dx [orig:64 D.6602 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 sqlite3_api.12 ] [63])
                (const_int 552 [0x228])) [0 sqlite3_api.12_12->mprintf+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 sqlite3_api.12 ] [63])
        (nil)))
(insn 52 51 53 6 (set (reg:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zValue+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 6 (set (reg:DI 4 si)
        (reg:DI 0 ax [79])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [79])
        (nil)))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:407 91 {*movqi_internal}
     (nil))
(call_insn 56 55 57 6 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:64 D.6602 ] [64]) [0 *_13 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:407 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:64 D.6602 ] [64])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 57 56 58 6 (set (reg/f:DI 0 ax [orig:65 D.6601 ] [65])
        (reg:DI 0 ax)) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 57 59 6 (set (reg/f:DI 1 dx [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 6 (set (mem/f:DI (reg/f:DI 1 dx [80]) [0 *pzVal_9(D)+0 S8 A64])
        (reg/f:DI 0 ax [orig:65 D.6601 ] [65])) ./ext/misc/csv.c:407 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [80])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6601 ] [65])
            (nil))))
(insn 60 59 61 6 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:408 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 6 (set (reg/f:DI 0 ax [orig:66 D.6601 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [81]) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:408 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (nil)))
(insn 62 61 63 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:66 D.6601 ] [66])
            (const_int 0 [0]))) ./ext/misc/csv.c:408 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6601 ] [66])
        (nil)))
(jump_insn 63 62 64 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ./ext/misc/csv.c:408 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 82
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) ./ext/misc/csv.c:409 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [82])
        (nil)))
(insn 68 67 69 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:409 91 {*movqi_internal}
     (nil))
(call_insn 69 68 70 7 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:409 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 70 69 100 7 (set (reg:SI 0 ax [orig:59 D.6599 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:410 89 {*movsi_internal}
     (nil))
(jump_insn 100 70 101 7 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:410 650 {jump}
     (nil)
 -> 84)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 101 100 73)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 67 68 83 84
(code_label 73 101 74 8 80 "" [1 uses])
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (reg/f:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 8 (set (reg/f:DI 0 ax [orig:67 D.6601 ] [67])
        (mem/f:DI (reg/f:DI 0 ax [83]) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
        (nil)))
(insn 77 76 78 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:67 D.6601 ] [67])) ./ext/misc/csv.c:412 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6601 ] [67])
        (nil)))
(call_insn 78 77 79 8 (call (mem:QI (symbol_ref:DI ("csv_trim_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec400 csv_trim_whitespace>) [0 csv_trim_whitespace S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:412 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 8 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzVal+0 S8 A64])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 8 (set (reg/f:DI 0 ax [orig:68 D.6601 ] [68])
        (mem/f:DI (reg/f:DI 0 ax [84]) [0 *pzVal_9(D)+0 S8 A64])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 81 80 82 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:68 D.6601 ] [68])) ./ext/misc/csv.c:413 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.6601 ] [68])
        (nil)))
(call_insn 82 81 83 8 (call (mem:QI (symbol_ref:DI ("csv_dequote") [flags 0x3]  <function_decl 0x7fbdb43ec600 csv_dequote>) [0 csv_dequote S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:413 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 8 (set (reg:SI 0 ax [orig:59 D.6599 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:414 89 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 69
(code_label 84 83 85 9 78 "" [3 uses])
(note 85 84 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 9 (set (reg:SI 0 ax [orig:69 <retval> ] [69])
        (reg:SI 0 ax [orig:59 D.6599 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6599 ] [59])
        (nil)))
(insn 90 86 93 9 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:69 <retval> ] [69])) ./ext/misc/csv.c:415 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 <retval> ] [69])
        (nil)))
(insn 93 90 0 9 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:415 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_boolean (csv_boolean, funcdef_no=18, decl_uid=5672, cgraph_uid=18)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 11:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) qm  (1) qn {*cmpqi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 45:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 61:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 83:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 90:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) qm  (1) qn {*cmpqi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 95:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 96:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 106
changing reg in insn 101
changing reg in insn 51
changing reg in insn 109
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 90
changing reg in insn 91
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 109
changing reg in insn 113
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 39
changing reg in insn 40
changing reg in insn 44
changing reg in insn 45
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 94
changing reg in insn 95
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 23.
deleting insn with uid = 23.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 62.
deleting insn with uid = 62.
rescanning insn with uid = 73.
deleting insn with uid = 73.
rescanning insn with uid = 84.
deleting insn with uid = 84.


csv_boolean

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={46d,44u} r1={13d,6u} r2={7d} r4={13d,6u} r5={13d,7u} r6={1d,26u} r7={1d,21u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={18d,10u} r18={6d} r19={6d} r20={1d,1u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 474{351d,121u,2e} in 87{81 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 85 86
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
        (reg:DI 5 di [ z ])) ./ext/misc/csv.c:421 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ z ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [85])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:60 sqlite3_api.13 ] [60])
        (mem/f/c:DI (reg/f:DI 0 ax [85]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [orig:61 D.6605 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:60 sqlite3_api.13 ] [60])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.13_2->stricmp+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 sqlite3_api.13 ] [60])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [86])) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [86])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fbdb45234c0 *.LC11>)) ./ext/misc/csv.c:422 87 {*movdi_internal_rex64}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:61 D.6605 ] [61]) [0 *_3 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:422 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6605 ] [61])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:SI 0 ax [orig:62 D.6604 ] [62])
        (reg:SI 0 ax)) ./ext/misc/csv.c:422 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:62 D.6604 ] [62])
            (const_int 0 [0]))) ./ext/misc/csv.c:422 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.6604 ] [62])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:422 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 87 88
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:DI 0 ax [87])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 0 ax [orig:63 sqlite3_api.14 ] [63])
        (mem/f/c:DI (reg/f:DI 0 ax [87]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [87])
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [orig:64 D.6605 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 sqlite3_api.14 ] [63])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.14_6->stricmp+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 sqlite3_api.14 ] [63])
        (nil)))
(insn 20 19 21 3 (set (reg:DI 1 dx [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [88])) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [88])
        (nil)))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fbdb4523558 *.LC12>)) ./ext/misc/csv.c:423 87 {*movdi_internal_rex64}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:64 D.6605 ] [64]) [0 *_7 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:423 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6605 ] [64])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 3 (set (reg:SI 0 ax [orig:65 D.6604 ] [65])
        (reg:SI 0 ax)) ./ext/misc/csv.c:423 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:65 D.6604 ] [65])
            (const_int 0 [0]))) ./ext/misc/csv.c:423 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.6604 ] [65])
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67 68 89 90
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:DI 0 ax [89])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 0 ax [orig:66 sqlite3_api.15 ] [66])
        (mem/f/c:DI (reg/f:DI 0 ax [89]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 0 ax [orig:67 D.6605 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:66 sqlite3_api.15 ] [66])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.15_9->stricmp+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 sqlite3_api.15 ] [66])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 1 dx [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 4 si)
        (reg:DI 1 dx [90])) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [90])
        (nil)))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fbdb45235f0 *.LC13>)) ./ext/misc/csv.c:424 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:67 D.6605 ] [67]) [0 *_10 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:424 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6605 ] [67])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 4 (set (reg:SI 0 ax [orig:68 D.6604 ] [68])
        (reg:SI 0 ax)) ./ext/misc/csv.c:424 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:68 D.6604 ] [68])
            (const_int 0 [0]))) ./ext/misc/csv.c:424 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 D.6604 ] [68])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:424 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 91
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:425 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg:QI 0 ax [orig:69 D.6606 ] [69])
        (mem:QI (reg/f:DI 0 ax [91]) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:425 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [91])
        (nil)))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:69 D.6606 ] [69])
            (const_int 49 [0x31]))) ./ext/misc/csv.c:425 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.6606 ] [69])
        (nil)))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ./ext/misc/csv.c:425 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 92
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:425 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6607 ] [70])
                (plus:DI (reg/f:DI 0 ax [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:425 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [92])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 46 45 47 6 (set (reg:QI 0 ax [orig:71 D.6606 ] [71])
        (mem:QI (reg/f:DI 0 ax [orig:70 D.6607 ] [70]) [0 *_13+0 S1 A8])) ./ext/misc/csv.c:425 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6607 ] [70])
        (nil)))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:71 D.6606 ] [71])
            (const_int 0 [0]))) ./ext/misc/csv.c:425 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:71 D.6606 ] [71])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ./ext/misc/csv.c:425 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 49 48 50 7 82 "" [3 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 119 7 (set (reg:SI 0 ax [orig:59 D.6604 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:427 89 {*movsi_internal}
     (nil))
(jump_insn 119 51 120 7 (set (pc)
        (label_ref 107)) ./ext/misc/csv.c:427 650 {jump}
     (nil)
 -> 107)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 120 119 54)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 72 73 74 93 94
(code_label 54 120 55 8 83 "" [2 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 0 ax [93])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 0 ax [orig:72 sqlite3_api.16 ] [72])
        (mem/f/c:DI (reg/f:DI 0 ax [93]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (nil)))
(insn 58 57 59 8 (set (reg/f:DI 0 ax [orig:73 D.6605 ] [73])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:72 sqlite3_api.16 ] [72])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.16_15->stricmp+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 sqlite3_api.16 ] [72])
        (nil)))
(insn 59 58 60 8 (set (reg:DI 1 dx [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (reg:DI 1 dx [94])) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [94])
        (nil)))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fbdb4523688 *.LC14>)) ./ext/misc/csv.c:429 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:73 D.6605 ] [73]) [0 *_16 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:429 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.6605 ] [73])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 8 (set (reg:SI 0 ax [orig:74 D.6604 ] [74])
        (reg:SI 0 ax)) ./ext/misc/csv.c:429 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:74 D.6604 ] [74])
            (const_int 0 [0]))) ./ext/misc/csv.c:429 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:74 D.6604 ] [74])
        (nil)))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 76 77 95 96
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 0 ax [95])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 0 ax [orig:75 sqlite3_api.17 ] [75])
        (mem/f/c:DI (reg/f:DI 0 ax [95]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
        (nil)))
(insn 69 68 70 9 (set (reg/f:DI 0 ax [orig:76 D.6605 ] [76])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:75 sqlite3_api.17 ] [75])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.17_18->stricmp+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 sqlite3_api.17 ] [75])
        (nil)))
(insn 70 69 71 9 (set (reg:DI 1 dx [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 9 (set (reg:DI 4 si)
        (reg:DI 1 dx [96])) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [96])
        (nil)))
(insn 72 71 73 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fbdb4523720 *.LC15>)) ./ext/misc/csv.c:430 87 {*movdi_internal_rex64}
     (nil))
(call_insn 73 72 74 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:76 D.6605 ] [76]) [0 *_19 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:430 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:76 D.6605 ] [76])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 74 73 75 9 (set (reg:SI 0 ax [orig:77 D.6604 ] [77])
        (reg:SI 0 ax)) ./ext/misc/csv.c:430 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 75 74 76 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:77 D.6604 ] [77])
            (const_int 0 [0]))) ./ext/misc/csv.c:430 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 D.6604 ] [77])
        (nil)))
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:430 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 80 97 98
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg/f:DI 0 ax [97])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(insn 79 78 80 10 (set (reg/f:DI 0 ax [orig:78 sqlite3_api.18 ] [78])
        (mem/f/c:DI (reg/f:DI 0 ax [97]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (nil)))
(insn 80 79 81 10 (set (reg/f:DI 0 ax [orig:79 D.6605 ] [79])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:78 sqlite3_api.18 ] [78])
                (const_int 1488 [0x5d0])) [0 sqlite3_api.18_21->stricmp+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 sqlite3_api.18 ] [78])
        (nil)))
(insn 81 80 82 10 (set (reg:DI 1 dx [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 10 (set (reg:DI 4 si)
        (reg:DI 1 dx [98])) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [98])
        (nil)))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fbdb45237b8 *.LC16>)) ./ext/misc/csv.c:431 87 {*movdi_internal_rex64}
     (nil))
(call_insn 84 83 85 10 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:79 D.6605 ] [79]) [0 *_22 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:431 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.6605 ] [79])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 10 (set (reg:SI 0 ax [orig:80 D.6604 ] [80])
        (reg:SI 0 ax)) ./ext/misc/csv.c:431 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 86 85 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:80 D.6604 ] [80])
            (const_int 0 [0]))) ./ext/misc/csv.c:431 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:80 D.6604 ] [80])
        (nil)))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) ./ext/misc/csv.c:431 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 99)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 81 99
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:432 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:QI 0 ax [orig:81 D.6606 ] [81])
        (mem:QI (reg/f:DI 0 ax [99]) [0 *z_4(D)+0 S1 A8])) ./ext/misc/csv.c:432 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (nil)))
(insn 91 90 92 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:81 D.6606 ] [81])
            (const_int 48 [0x30]))) ./ext/misc/csv.c:432 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:81 D.6606 ] [81])
        (nil)))
(jump_insn 92 91 93 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ./ext/misc/csv.c:432 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 82 83 100
(note 93 92 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 12 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:432 87 {*movdi_internal_rex64}
     (nil))
(insn 95 94 96 12 (parallel [
            (set (reg/f:DI 0 ax [orig:82 D.6607 ] [82])
                (plus:DI (reg/f:DI 0 ax [100])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:432 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [100])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 z+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 96 95 97 12 (set (reg:QI 0 ax [orig:83 D.6606 ] [83])
        (mem:QI (reg/f:DI 0 ax [orig:82 D.6607 ] [82]) [0 *_25+0 S1 A8])) ./ext/misc/csv.c:432 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.6607 ] [82])
        (nil)))
(insn 97 96 98 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 D.6606 ] [83])
            (const_int 0 [0]))) ./ext/misc/csv.c:432 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:83 D.6606 ] [83])
        (nil)))
(jump_insn 98 97 99 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ./ext/misc/csv.c:432 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9
;;              10
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 99 98 100 13 85 "" [3 uses])
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 121 13 (set (reg:SI 0 ax [orig:59 D.6604 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:434 89 {*movsi_internal}
     (nil))
(jump_insn 121 101 122 13 (set (pc)
        (label_ref 107)) ./ext/misc/csv.c:434 650 {jump}
     (nil)
 -> 107)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 122 121 104)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 104 122 105 14 86 "" [2 uses])
(note 105 104 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 14 (set (reg:SI 0 ax [orig:59 D.6604 ] [59])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:436 89 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              7 [100.0%] 
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 84
(code_label 107 106 108 15 84 "" [2 uses])
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 113 15 (set (reg:SI 0 ax [orig:84 <retval> ] [84])
        (reg:SI 0 ax [orig:59 D.6604 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6604 ] [59])
        (nil)))
(insn 113 109 116 15 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:84 <retval> ] [84])) ./ext/misc/csv.c:437 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 <retval> ] [84])
        (nil)))
(insn 116 113 0 15 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:437 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csv_boolean_parameter (csv_boolean_parameter, funcdef_no=19, decl_uid=5678, cgraph_uid=19)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 34
	 Choosing alt 0 in insn 34:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 52:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 62:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 93: point = 0
   Insn 90: point = 0
   Insn 86: point = 1
  BB 9
   Insn 102: point = 4
   Insn 78: point = 4
   Insn 77: point = 5
   Insn 76: point = 6
   Insn 75: point = 7
  BB 7
   Insn 100: point = 8
   Insn 56: point = 8
  BB 5
   Insn 98: point = 9
   Insn 46: point = 9
   Insn 45: point = 10
   Insn 44: point = 11
  BB 3
   Insn 96: point = 12
   Insn 26: point = 12
  BB 10
   Insn 83: point = 13
  BB 8
   Insn 73: point = 14
   Insn 72: point = 14
   Insn 71: point = 14
   Insn 70: point = 15
   Insn 69: point = 16
   Insn 68: point = 16
   Insn 67: point = 17
   Insn 66: point = 18
   Insn 65: point = 19
   Insn 64: point = 20
   Insn 63: point = 20
   Insn 62: point = 21
   Insn 61: point = 23
  BB 6
   Insn 54: point = 24
   Insn 53: point = 24
   Insn 52: point = 25
   Insn 51: point = 27
  BB 4
   Insn 42: point = 28
   Insn 41: point = 28
   Insn 40: point = 29
   Insn 39: point = 31
   Insn 38: point = 32
   Insn 37: point = 33
   Insn 36: point = 34
   Insn 35: point = 34
   Insn 34: point = 35
   Insn 33: point = 37
   Insn 32: point = 38
   Insn 31: point = 40
  BB 2
   Insn 24: point = 41
   Insn 23: point = 41
   Insn 22: point = 42
   Insn 21: point = 43
   Insn 20: point = 43
   Insn 19: point = 44
   Insn 18: point = 45
   Insn 17: point = 46
   Insn 16: point = 47
   Insn 15: point = 48
   Insn 14: point = 50
   Insn 13: point = 51
   Insn 12: point = 52
   Insn 11: point = 53
   Insn 10: point = 53
   Insn 9: point = 54
   Insn 5: point = 55
   Insn 4: point = 55
   Insn 3: point = 55
   Insn 2: point = 55
 r59: [12..13] [8..9] [2..4]
 r60: [45..48]
 r61: [41..42]
 r62: [36..38]
 r63: [34..35]
 r64: [28..29]
 r65: [24..25]
 r66: [20..21]
 r67: [0..1]
 r68: [53..54]
 r69: [51..52]
 r70: [49..50]
 r71: [44..47]
 r72: [43..46]
 r73: [39..40]
 r74: [36..37]
 r75: [32..33]
 r76: [30..31]
 r77: [10..11]
 r78: [26..27]
 r79: [22..23]
 r80: [18..19]
 r81: [16..17]
 r82: [14..15]
 r83: [5..7]
 r84: [5..6]
Compressing live ranges: from 55 to 48 - 87%
Ranges after the compression:
 r59: [10..11] [6..7] [2..3]
 r60: [40..41]
 r61: [38..39]
 r62: [34..35]
 r63: [32..33]
 r64: [26..27]
 r65: [22..23]
 r66: [18..19]
 r67: [0..1]
 r68: [46..47]
 r69: [44..45]
 r70: [42..43]
 r71: [40..41]
 r72: [40..41]
 r73: [36..37]
 r74: [34..35]
 r75: [30..31]
 r76: [28..29]
 r77: [8..9]
 r78: [24..25]
 r79: [20..21]
 r80: [16..17]
 r81: [14..15]
 r82: [12..13]
 r83: [4..5]
 r84: [4..5]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 83
changing reg in insn 78
changing reg in insn 56
changing reg in insn 46
changing reg in insn 26
changing reg in insn 86
changing reg in insn 15
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 32
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
changing reg in insn 52
changing reg in insn 53
changing reg in insn 62
changing reg in insn 63
changing reg in insn 86
changing reg in insn 90
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 17
changing reg in insn 20
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 44
changing reg in insn 45
changing reg in insn 51
changing reg in insn 52
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
starting the processing of deferred insns
ending the processing of deferred insns


csv_boolean_parameter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={33d,29u} r1={10d,5u,1e} r2={7d,2u} r4={7d,2u} r5={11d,6u} r6={1d,33u} r7={1d,16u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={11d,4u} r18={5d} r19={5d} r20={1d,1u,2e} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 383{282d,98u,3e} in 66{61 regular + 5 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 68 69 70 71 72
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 zTag+0 S8 A64])
        (reg:DI 5 di [ zTag ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ zTag ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])
        (reg:SI 4 si [ nTag ])) ./ext/misc/csv.c:449 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ nTag ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 1 dx [ z ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ z ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])
        (reg:DI 2 cx [ pValue ])) ./ext/misc/csv.c:449 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ pValue ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [68])) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:451 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:DI 0 ax [69])
        (reg:DI 0 ax)) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [69])) ./ext/misc/csv.c:451 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [69])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 0 ax [70])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 1 dx [orig:60 D.6615 ] [60])
        (sign_extend:DI (reg:SI 0 ax [70]))) ./ext/misc/csv.c:452 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [70])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 2 cx [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 zTag+0 S8 A64])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:60 D.6615 ] [60])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6615 ] [60])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [71])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [71])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [72])) ./ext/misc/csv.c:452 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [72])
        (nil)))
(call_insn/i 21 20 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fbdb4907e00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:452 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:SI 0 ax [orig:61 D.6614 ] [61])
        (reg:SI 0 ax)) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.6614 ] [61])
            (const_int 0 [0]))) ./ext/misc/csv.c:452 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6614 ] [61])
        (nil)))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ./ext/misc/csv.c:452 612 {*jcc_1}
     (nil)
 -> 29)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 96 3 (set (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:452 89 {*movsi_internal}
     (nil))
(jump_insn 96 26 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:452 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 29)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 73 74 75 76
(code_label 29 97 30 4 88 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (set (reg:SI 0 ax [73])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 nTag+0 S4 A32])) ./ext/misc/csv.c:453 89 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 1 dx [orig:62 D.6616 ] [62])
        (sign_extend:DI (reg:SI 0 ax [73]))) ./ext/misc/csv.c:453 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [73])
        (nil)))
(insn 33 32 34 4 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.6617 ] [63])
                (plus:DI (reg/f:DI 0 ax [74])
                    (reg:DI 1 dx [orig:62 D.6616 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:453 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.6616 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.6616 ] [62]))
                (nil)))))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:63 D.6617 ] [63])) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6617 ] [63])
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:453 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 0 ax [75])
        (reg:DI 0 ax)) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [75])) ./ext/misc/csv.c:453 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [75])
        (nil)))
(insn 39 38 40 4 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:454 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 4 (set (reg:QI 0 ax [orig:64 D.6618 ] [64])
        (mem:QI (reg/f:DI 0 ax [76]) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:454 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 41 40 42 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:64 D.6618 ] [64])
            (const_int 0 [0]))) ./ext/misc/csv.c:454 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:64 D.6618 ] [64])
        (nil)))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ./ext/misc/csv.c:454 612 {*jcc_1}
     (nil)
 -> 49)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 77
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])) ./ext/misc/csv.c:455 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 5 (set (mem:SI (reg/f:DI 0 ax [77]) [0 *pValue_13(D)+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:455 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 46 45 98 5 (set (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:456 89 {*movsi_internal}
     (nil))
(jump_insn 98 46 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:456 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 49)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 65 78
(code_label 49 99 50 6 90 "" [1 uses])
(note 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 6 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:458 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 6 (set (reg:QI 0 ax [orig:65 D.6618 ] [65])
        (mem:QI (reg/f:DI 0 ax [78]) [0 *z_11+0 S1 A8])) ./ext/misc/csv.c:458 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:65 D.6618 ] [65])
            (const_int 61 [0x3d]))) ./ext/misc/csv.c:458 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:65 D.6618 ] [65])
        (nil)))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) ./ext/misc/csv.c:458 612 {*jcc_1}
     (nil)
 -> 59)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 100 7 (set (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:458 89 {*movsi_internal}
     (nil))
(jump_insn 100 56 101 7 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:458 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 101 100 59)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 79 80 81 82
(code_label 59 101 60 8 91 "" [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg/f:DI 0 ax [orig:66 D.6617 ] [66])
                (plus:DI (reg/f:DI 0 ax [79])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:459 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
                (const_int 1 [0x1]))
            (nil))))
(insn 63 62 64 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:66 D.6617 ] [66])) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6617 ] [66])
        (nil)))
(call_insn 64 63 65 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_skip_whitespace") [flags 0x3]  <function_decl 0x7fbdb43ec200 csv_skip_whitespace>) [0 csv_skip_whitespace S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:459 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 8 (set (reg:DI 0 ax [80])
        (reg:DI 0 ax)) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 66 65 67 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [80])) ./ext/misc/csv.c:459 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [80])
        (nil)))
(insn 67 66 68 8 (set (reg:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:460 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [81])) ./ext/misc/csv.c:460 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [81])
        (nil)))
(call_insn 69 68 70 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_boolean") [flags 0x3]  <function_decl 0x7fbdb43ecc00 csv_boolean>) [0 csv_boolean S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:460 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 70 69 71 8 (set (reg:SI 0 ax [82])
        (reg:SI 0 ax)) ./ext/misc/csv.c:460 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 71 70 72 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])
        (reg:SI 0 ax [82])) ./ext/misc/csv.c:460 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [82])
        (nil)))
(insn 72 71 73 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:461 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:461 612 {*jcc_1}
     (nil)
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59 83 84
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pValue+0 S8 A64])) ./ext/misc/csv.c:462 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 9 (set (reg:SI 1 dx [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 b+0 S4 A32])) ./ext/misc/csv.c:462 89 {*movsi_internal}
     (nil))
(insn 77 76 78 9 (set (mem:SI (reg/f:DI 0 ax [83]) [0 *pValue_13(D)+0 S4 A32])
        (reg:SI 1 dx [84])) ./ext/misc/csv.c:462 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [84])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
            (nil))))
(insn 78 77 102 9 (set (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:463 89 {*movsi_internal}
     (nil))
(jump_insn 102 78 103 9 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:463 650 {jump}
     (nil)
 -> 84)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 103 102 81)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 81 103 82 10 92 "" [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:465 89 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 67
(code_label 84 83 85 11 89 "" [4 uses])
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 11 (set (reg:SI 0 ax [orig:67 <retval> ] [67])
        (reg:SI 0 ax [orig:59 D.6614 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6614 ] [59])
        (nil)))
(insn 90 86 93 11 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:67 <retval> ] [67])) ./ext/misc/csv.c:466 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 <retval> ] [67])
        (nil)))
(insn 93 90 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:466 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabConnect (csvtabConnect, funcdef_no=20, decl_uid=5585, cgraph_uid=20)

      Creating newreg=250
Removing SCRATCH in insn #10 (nop 2)
rescanning insn with uid = 10.
deleting insn with uid = 10.
      Creating newreg=251
Removing SCRATCH in insn #645 (nop 3)
rescanning insn with uid = 645.
deleting insn with uid = 645.

********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=8,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r250
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 35
	 Choosing alt 0 in insn 35:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 50:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 67:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 88:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 93:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 102:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 103:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 120:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 123:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 130:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 131:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 148:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 157:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 159:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 167:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =qm {*setcc_qi}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =qm {*setcc_qi}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1 -- reject
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 0 in insn 181:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 185:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 186:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 194:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 203:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 216:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 225:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 248:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 249:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 250:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 253:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 254:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 255:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 256:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 268:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 271:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 278:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 281:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 288:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 293:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 296:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 298:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) rzw {*call}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 300:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 302:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 314:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 318:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 323:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 342:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 344:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) rzw {*call}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 346:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 348:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 355:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 367:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 368:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 369:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 370:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 376:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) rzw {*call}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 380:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 381:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 386:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 390:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 394:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 395:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 396:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 397:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 399:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 402:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 403:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 408:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 409:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 421:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 424:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 429:  (0) r  (1) r  (2) le {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 441:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 443:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 446:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 447:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 448:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 449:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 450:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 451:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 452:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 453:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 457:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 458:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 464:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 472:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 477:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 486:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 487
	 Choosing alt 0 in insn 487:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 489:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 490:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 491:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 494:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 497:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 498:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 499:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 500:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 506:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 510:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 512:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 513:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 518:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 521:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 523:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 529:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 535:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 537:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 541:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 549:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 550:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 551:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 552:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 555:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 563:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 564:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 566:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 570:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 573:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 578:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 582:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 583:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 584:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 586:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 587:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 590:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 598:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 602:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 603:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 604:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 605:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 606:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 608:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 610:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 611:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 612:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 613:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 615:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 616:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 619:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 620:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 623:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 626:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 629:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 632:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r251
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84

********** Pseudo live ranges #1: **********

  BB 83
   Insn 647: point = 0
  BB 84
   Insn 650: point = 0
  BB 82
   Insn 646: point = 0
   Insn 645: point = 0
   Insn 641: point = 1
   Insn 637: point = 2
  BB 70
   Insn 702: point = 5
   Insn 557: point = 5
   Insn 556: point = 6
   Insn 555: point = 7
   Insn 554: point = 7
   Insn 553: point = 8
   Insn 552: point = 8
   Insn 551: point = 9
   Insn 550: point = 11
   Insn 549: point = 13
  BB 69
   Insn 547: point = 14
   Insn 546: point = 14
   Insn 544: point = 15
  BB 67
   Insn 700: point = 16
   Insn 529: point = 16
  BB 68
   Insn 541: point = 16
   Insn 540: point = 16
   Insn 539: point = 17
   Insn 538: point = 18
   Insn 537: point = 20
   Insn 536: point = 22
   Insn 535: point = 23
   Insn 534: point = 25
   Insn 533: point = 27
  BB 81
   Insn 632: point = 28
  BB 80
   Insn 629: point = 29
  BB 79
   Insn 627: point = 29
   Insn 626: point = 29
   Insn 625: point = 29
   Insn 624: point = 29
   Insn 623: point = 30
  BB 78
   Insn 620: point = 31
   Insn 619: point = 32
   Insn 618: point = 33
   Insn 617: point = 34
   Insn 616: point = 35
   Insn 615: point = 35
   Insn 614: point = 35
   Insn 613: point = 36
   Insn 612: point = 38
   Insn 611: point = 39
   Insn 610: point = 41
   Insn 609: point = 43
   Insn 608: point = 44
   Insn 607: point = 45
   Insn 606: point = 46
   Insn 605: point = 48
   Insn 604: point = 49
   Insn 603: point = 51
   Insn 602: point = 53
  BB 77
   Insn 600: point = 54
   Insn 599: point = 54
   Insn 598: point = 55
  BB 76
   Insn 596: point = 56
   Insn 595: point = 56
   Insn 593: point = 57
  BB 74
   Insn 704: point = 58
   Insn 578: point = 58
  BB 73
   Insn 575: point = 58
   Insn 574: point = 58
   Insn 573: point = 59
  BB 72
   Insn 571: point = 60
   Insn 570: point = 60
  BB 66
   Insn 698: point = 60
   Insn 524: point = 60
   Insn 523: point = 60
   Insn 522: point = 60
   Insn 521: point = 61
   Insn 520: point = 61
   Insn 519: point = 62
   Insn 518: point = 63
   Insn 517: point = 64
   Insn 516: point = 65
   Insn 515: point = 66
   Insn 514: point = 67
   Insn 513: point = 68
   Insn 512: point = 69
   Insn 511: point = 71
   Insn 510: point = 73
  BB 65
   Insn 508: point = 74
   Insn 507: point = 74
   Insn 506: point = 74
   Insn 505: point = 75
   Insn 504: point = 76
   Insn 503: point = 77
   Insn 502: point = 78
   Insn 501: point = 79
   Insn 500: point = 80
   Insn 499: point = 81
   Insn 498: point = 83
   Insn 497: point = 85
   Insn 496: point = 86
   Insn 495: point = 86
   Insn 494: point = 87
  BB 63
   Insn 696: point = 88
   Insn 472: point = 88
   Insn 471: point = 89
   Insn 470: point = 90
   Insn 469: point = 92
   Insn 468: point = 94
  BB 61
   Insn 694: point = 95
   Insn 458: point = 95
   Insn 457: point = 96
  BB 64
   Insn 491: point = 97
   Insn 490: point = 98
   Insn 489: point = 99
   Insn 488: point = 101
   Insn 487: point = 103
   Insn 486: point = 105
   Insn 485: point = 107
   Insn 484: point = 108
   Insn 483: point = 110
   Insn 482: point = 112
   Insn 481: point = 113
   Insn 480: point = 115
   Insn 479: point = 116
   Insn 478: point = 116
   Insn 477: point = 117
  BB 62
   Insn 466: point = 118
   Insn 465: point = 118
   Insn 464: point = 119
   Insn 463: point = 121
  BB 60
   Insn 455: point = 122
   Insn 454: point = 122
   Insn 453: point = 122
   Insn 452: point = 122
   Insn 451: point = 123
   Insn 450: point = 124
   Insn 449: point = 125
   Insn 448: point = 125
   Insn 447: point = 126
   Insn 446: point = 127
  BB 58
   Insn 692: point = 128
  BB 57
   Insn 435: point = 128
   Insn 434: point = 128
   Insn 432: point = 129
   Insn 431: point = 130
   Insn 430: point = 131
   Insn 429: point = 132
   Insn 428: point = 134
   Insn 427: point = 136
   Insn 426: point = 137
   Insn 425: point = 137
   Insn 424: point = 138
  BB 59
   Insn 443: point = 139
   Insn 442: point = 140
   Insn 441: point = 141
  BB 56
   Insn 422: point = 142
   Insn 421: point = 142
  BB 55
   Insn 689: point = 142
  BB 28
   Insn 675: point = 142
  BB 24
   Insn 673: point = 142
   Insn 189: point = 142
   Insn 188: point = 142
   Insn 187: point = 142
   Insn 186: point = 143
   Insn 185: point = 143
  BB 20
   Insn 671: point = 144
   Insn 162: point = 144
   Insn 161: point = 144
   Insn 160: point = 144
   Insn 159: point = 145
   Insn 158: point = 145
   Insn 157: point = 146
   Insn 156: point = 147
  BB 19
   Insn 669: point = 148
   Insn 151: point = 148
   Insn 150: point = 148
   Insn 149: point = 148
   Insn 148: point = 149
   Insn 147: point = 149
  BB 17
   Insn 667: point = 150
   Insn 134: point = 150
   Insn 133: point = 150
   Insn 132: point = 150
   Insn 131: point = 151
   Insn 130: point = 151
  BB 13
   Insn 663: point = 152
   Insn 106: point = 152
   Insn 105: point = 152
   Insn 104: point = 152
   Insn 103: point = 153
   Insn 102: point = 153
  BB 10
   Insn 661: point = 154
  BB 71
   Insn 567: point = 154
   Insn 566: point = 154
   Insn 565: point = 154
   Insn 564: point = 155
   Insn 563: point = 155
   Insn 562: point = 156
  BB 54
   Insn 687: point = 156
  BB 53
   Insn 411: point = 156
   Insn 410: point = 156
   Insn 409: point = 157
   Insn 408: point = 158
   Insn 407: point = 159
   Insn 406: point = 160
   Insn 405: point = 161
   Insn 404: point = 162
   Insn 403: point = 163
   Insn 402: point = 165
   Insn 401: point = 167
   Insn 400: point = 168
   Insn 399: point = 169
   Insn 398: point = 169
   Insn 397: point = 170
   Insn 396: point = 170
   Insn 395: point = 171
   Insn 394: point = 173
   Insn 393: point = 175
   Insn 392: point = 176
   Insn 391: point = 177
   Insn 390: point = 178
  BB 49
   Insn 683: point = 179
   Insn 359: point = 179
   Insn 358: point = 180
  BB 41
   Insn 681: point = 181
  BB 40
   Insn 308: point = 181
   Insn 307: point = 181
   Insn 306: point = 182
  BB 38
   Insn 679: point = 183
   Insn 284: point = 183
  BB 39
   Insn 302: point = 183
   Insn 301: point = 183
   Insn 300: point = 184
   Insn 299: point = 185
   Insn 298: point = 186
   Insn 297: point = 186
   Insn 296: point = 187
   Insn 295: point = 187
   Insn 294: point = 188
   Insn 293: point = 189
   Insn 292: point = 190
   Insn 291: point = 191
   Insn 290: point = 192
   Insn 289: point = 194
   Insn 288: point = 196
  BB 52
   Insn 387: point = 197
   Insn 386: point = 197
   Insn 385: point = 198
  BB 50
   Insn 685: point = 199
  BB 48
   Insn 356: point = 199
   Insn 355: point = 199
  BB 47
   Insn 353: point = 199
   Insn 352: point = 199
   Insn 351: point = 200
  BB 46
   Insn 348: point = 201
   Insn 347: point = 201
   Insn 346: point = 202
   Insn 345: point = 203
   Insn 344: point = 204
   Insn 343: point = 204
   Insn 342: point = 205
   Insn 341: point = 205
   Insn 340: point = 206
   Insn 339: point = 207
   Insn 338: point = 208
   Insn 337: point = 209
   Insn 336: point = 210
   Insn 335: point = 212
   Insn 334: point = 214
  BB 45
   Insn 331: point = 215
   Insn 330: point = 215
  BB 44
   Insn 328: point = 215
   Insn 327: point = 215
  BB 43
   Insn 324: point = 215
   Insn 323: point = 215
   Insn 322: point = 216
  BB 42
   Insn 320: point = 217
   Insn 319: point = 217
   Insn 318: point = 217
   Insn 317: point = 218
   Insn 316: point = 219
   Insn 315: point = 219
   Insn 314: point = 220
  BB 37
   Insn 282: point = 221
   Insn 281: point = 221
  BB 36
   Insn 279: point = 221
   Insn 278: point = 221
  BB 35
   Insn 275: point = 221
   Insn 274: point = 221
   Insn 272: point = 222
   Insn 271: point = 223
   Insn 270: point = 223
   Insn 269: point = 223
   Insn 268: point = 224
  BB 34
   Insn 266: point = 225
  BB 33
   Insn 264: point = 225
   Insn 263: point = 225
  BB 32
   Insn 261: point = 225
   Insn 260: point = 225
   Insn 259: point = 225
   Insn 258: point = 226
   Insn 257: point = 226
   Insn 256: point = 227
   Insn 255: point = 227
   Insn 254: point = 228
   Insn 253: point = 230
   Insn 252: point = 232
   Insn 251: point = 233
   Insn 250: point = 233
   Insn 249: point = 234
   Insn 248: point = 235
   Insn 247: point = 236
   Insn 246: point = 237
   Insn 245: point = 238
   Insn 244: point = 238
   Insn 243: point = 240
   Insn 242: point = 242
  BB 31
   Insn 240: point = 243
   Insn 239: point = 243
   Insn 238: point = 244
   Insn 237: point = 245
   Insn 236: point = 245
   Insn 235: point = 246
   Insn 234: point = 246
   Insn 233: point = 246
  BB 51
   Insn 381: point = 247
   Insn 380: point = 248
   Insn 379: point = 249
   Insn 378: point = 250
   Insn 377: point = 250
   Insn 376: point = 251
   Insn 375: point = 251
   Insn 374: point = 252
   Insn 373: point = 253
   Insn 372: point = 254
   Insn 371: point = 255
   Insn 370: point = 256
   Insn 369: point = 256
   Insn 368: point = 258
   Insn 367: point = 260
  BB 30
   Insn 677: point = 261
  BB 29
   Insn 227: point = 261
   Insn 226: point = 261
   Insn 225: point = 261
   Insn 224: point = 262
   Insn 223: point = 263
   Insn 222: point = 264
   Insn 221: point = 265
   Insn 220: point = 266
   Insn 219: point = 267
   Insn 218: point = 267
   Insn 217: point = 269
   Insn 216: point = 271
  BB 27
   Insn 210: point = 272
   Insn 209: point = 272
   Insn 208: point = 273
   Insn 207: point = 274
   Insn 206: point = 274
   Insn 205: point = 275
   Insn 204: point = 276
   Insn 203: point = 277
   Insn 202: point = 278
   Insn 201: point = 279
  BB 26
   Insn 198: point = 280
   Insn 197: point = 280
  BB 25
   Insn 195: point = 280
   Insn 194: point = 280
  BB 23
   Insn 183: point = 280
   Insn 182: point = 280
   Insn 181: point = 281
   Insn 180: point = 283
   Insn 179: point = 284
   Insn 178: point = 285
   Insn 177: point = 286
   Insn 176: point = 287
   Insn 175: point = 288
  BB 22
   Insn 173: point = 289
   Insn 172: point = 289
   Insn 171: point = 290
  BB 2
   Insn 655: point = 291
   Insn 27: point = 291
   Insn 26: point = 291
   Insn 25: point = 291
   Insn 24: point = 292
   Insn 23: point = 292
   Insn 22: point = 292
   Insn 21: point = 293
   Insn 20: point = 293
   Insn 19: point = 294
   Insn 18: point = 294
   Insn 17: point = 294
   Insn 16: point = 295
   Insn 15: point = 295
   Insn 14: point = 295
   Insn 13: point = 295
   Insn 10: point = 295
   Insn 7: point = 297
   Insn 6: point = 297
   Insn 5: point = 297
   Insn 4: point = 297
   Insn 3: point = 297
   Insn 2: point = 297
  BB 21
   Insn 167: point = 297
  BB 14
   Insn 665: point = 297
   Insn 112: point = 297
   Insn 111: point = 298
  BB 12
   Insn 100: point = 299
   Insn 99: point = 299
  BB 18
   Insn 145: point = 299
   Insn 144: point = 299
   Insn 143: point = 299
   Insn 142: point = 300
   Insn 141: point = 301
   Insn 140: point = 301
   Insn 139: point = 302
  BB 16
   Insn 128: point = 303
   Insn 127: point = 303
  BB 15
   Insn 125: point = 303
   Insn 124: point = 303
   Insn 123: point = 303
   Insn 122: point = 304
   Insn 121: point = 305
   Insn 120: point = 305
   Insn 119: point = 305
   Insn 118: point = 305
   Insn 117: point = 306
  BB 11
   Insn 97: point = 307
   Insn 96: point = 307
   Insn 95: point = 308
   Insn 94: point = 309
   Insn 93: point = 309
   Insn 92: point = 309
   Insn 91: point = 309
   Insn 90: point = 310
   Insn 89: point = 311
   Insn 88: point = 312
  BB 9
   Insn 82: point = 313
   Insn 81: point = 313
   Insn 80: point = 314
  BB 8
   Insn 78: point = 315
   Insn 77: point = 315
   Insn 76: point = 316
  BB 5
   Insn 659: point = 317
  BB 7
   Insn 73: point = 317
   Insn 72: point = 317
   Insn 70: point = 318
  BB 3
   Insn 657: point = 319
   Insn 38: point = 319
   Insn 37: point = 319
   Insn 36: point = 320
   Insn 35: point = 322
   Insn 34: point = 324
   Insn 33: point = 325
   Insn 32: point = 327
   Insn 31: point = 329
  BB 6
   Insn 67: point = 330
  BB 4
   Insn 61: point = 330
   Insn 60: point = 330
   Insn 59: point = 331
   Insn 58: point = 332
   Insn 57: point = 332
   Insn 56: point = 333
   Insn 55: point = 334
   Insn 54: point = 335
   Insn 53: point = 336
   Insn 52: point = 337
   Insn 51: point = 338
   Insn 50: point = 340
   Insn 49: point = 341
   Insn 48: point = 343
   Insn 47: point = 345
   Insn 46: point = 346
   Insn 45: point = 348
   Insn 44: point = 350
   Insn 43: point = 352
   Insn 42: point = 353
  BB 75
   Insn 590: point = 354
   Insn 589: point = 354
   Insn 588: point = 355
   Insn 587: point = 356
   Insn 586: point = 358
   Insn 585: point = 360
   Insn 584: point = 361
   Insn 583: point = 363
   Insn 582: point = 365
 r59: [28..28] [3..5]
 r60: [326..327]
 r61: [323..325]
 r62: [321..322]
 r63: [317..318]
 r64: [335..346]
 r65: [333..338]
 r66: [330..331]
 r67: [315..316]
 r68: [313..314]
 r69: [307..308]
 r70: [287..288]
 r71: [282..286]
 r72: [284..285]
 r73: [282..283]
 r74: [280..281]
 r75: [276..279]
 r76: [275..278]
 r77: [272..273]
 r78: [268..269]
 r79: [266..267]
 r80: [243..244]
 r81: [239..240]
 r82: [237..238]
 r83: [229..230]
 r84: [225..228]
 r85: [221..222]
 r86: [193..194]
 r87: [185..192]
 r88: [211..212]
 r89: [203..210]
 r90: [199..200]
 r91: [257..258]
 r92: [249..256]
 r93: [172..173]
 r94: [168..171]
 r95: [164..165]
 r96: [160..163]
 r97: [158..159]
 r98: [156..157]
 r99: [133..134]
 r100: [130..132]
 r101: [128..129]
 r102: [125..127]
 r103: [122..124]
 r104: [118..119]
 r105: [93..94]
 r106: [91..92]
 r107: [88..90]
 r108: [116..117]
 r109: [114..115]
 r110: [109..113]
 r111: [111..112]
 r112: [109..110]
 r113: [104..108]
 r114: [106..107]
 r115: [104..105]
 r116: [102..103]
 r117: [100..101]
 r118: [97..99]
 r119: [82..83]
 r120: [76..81]
 r121: [78..80]
 r122: [70..71]
 r123: [66..69]
 r124: [62..65]
 r125: [61..64]
 r126: [14..15]
 r127: [24..25]
 r128: [16..23]
 r129: [17..18]
 r130: [10..11]
 r131: [6..9]
 r132: [58..59]
 r133: [56..57]
 r134: [362..363]
 r135: [354..361]
 r136: [355..356]
 r137: [54..55]
 r138: [50..51]
 r139: [44..49]
 r140: [45..46]
 r141: [40..41]
 r142: [34..39]
 r143: [31..33]
 r144: [1..2]
 r146: [293..294]
 r147: [291..292]
 r148: [328..329]
 r149: [323..324]
 r150: [319..320]
 r151: [347..353]
 r152: [349..350]
 r153: [351..352]
 r154: [347..348]
 r155: [342..343]
 r156: [344..345]
 r157: [339..341]
 r158: [339..340]
 r159: [334..337]
 r160: [332..336]
 r161: [310..312]
 r162: [309..311]
 r163: [152..153]
 r164: [297..298]
 r165: [305..306]
 r166: [303..304]
 r167: [150..151]
 r168: [301..302]
 r169: [299..300]
 r170: [148..149]
 r171: [145..147]
 r172: [144..146]
 r173: [289..290]
 r174: [142..143]
 r175: [274..277]
 r176: [270..271]
 r177: [264..265]
 r178: [261..263]
 r179: [261..262]
 r180: [245..246]
 r181: [241..242]
 r182: [235..236]
 r183: [233..234]
 r184: [231..232]
 r185: [226..227]
 r186: [223..224]
 r187: [195..196]
 r188: [188..191]
 r189: [187..190]
 r190: [186..189]
 r191: [183..184]
 r192: [181..182]
 r193: [219..220]
 r194: [217..218]
 r195: [215..216]
 r196: [213..214]
 r197: [206..209]
 r198: [205..208]
 r199: [204..207]
 r200: [201..202]
 r201: [179..180]
 r202: [259..260]
 r203: [252..255]
 r204: [251..254]
 r205: [250..253]
 r206: [247..248]
 r207: [197..198]
 r208: [176..178]
 r209: [176..177]
 r210: [174..175]
 r211: [169..170]
 r212: [166..167]
 r213: [161..162]
 r214: [137..138]
 r215: [135..136]
 r216: [130..131]
 r217: [139..141]
 r218: [139..140]
 r219: [125..126]
 r220: [122..123]
 r221: [95..96]
 r222: [120..121]
 r223: [88..89]
 r224: [97..98]
 r225: [86..87]
 r226: [84..85]
 r227: [77..79]
 r228: [74..75]
 r229: [72..73]
 r230: [67..68]
 r231: [60..63]
 r232: [26..27]
 r233: [19..20]
 r234: [21..22]
 r235: [12..13]
 r236: [7..8]
 r237: [154..155]
 r238: [364..365]
 r239: [357..358]
 r240: [359..360]
 r241: [52..53]
 r242: [47..48]
 r243: [42..43]
 r244: [37..38]
 r245: [35..36]
 r246: [31..32]
 r247: [29..30]
 r250: [295..296]
 r251: [0..0]
Compressing live ranges: from 366 to 292 - 79%
Ranges after the compression:
 r59: [23..23] [3..4]
 r60: [262..263]
 r61: [260..261]
 r62: [258..259]
 r63: [254..255]
 r64: [268..275]
 r65: [268..269]
 r66: [266..267]
 r67: [252..253]
 r68: [250..251]
 r69: [246..247]
 r70: [226..227]
 r71: [222..225]
 r72: [224..225]
 r73: [222..223]
 r74: [220..221]
 r75: [218..219]
 r76: [218..219]
 r77: [216..217]
 r78: [212..213]
 r79: [210..211]
 r80: [194..195]
 r81: [190..191]
 r82: [188..189]
 r83: [180..181]
 r84: [178..179]
 r85: [174..175]
 r86: [152..153]
 r87: [150..151]
 r88: [164..165]
 r89: [162..163]
 r90: [158..159]
 r91: [202..203]
 r92: [200..201]
 r93: [138..139]
 r94: [136..137]
 r95: [132..133]
 r96: [130..131]
 r97: [128..129]
 r98: [126..127]
 r99: [106..107]
 r100: [104..105]
 r101: [102..103]
 r102: [100..101]
 r103: [98..99]
 r104: [94..95]
 r105: [72..73]
 r106: [70..71]
 r107: [68..69]
 r108: [92..93]
 r109: [90..91]
 r110: [86..89]
 r111: [88..89]
 r112: [86..87]
 r113: [82..85]
 r114: [84..85]
 r115: [82..83]
 r116: [80..81]
 r117: [78..79]
 r118: [76..77]
 r119: [62..63]
 r120: [60..61]
 r121: [60..61]
 r122: [54..55]
 r123: [52..53]
 r124: [50..51]
 r125: [50..51]
 r126: [11..12]
 r127: [19..20]
 r128: [13..18]
 r129: [13..14]
 r130: [7..8]
 r131: [5..6]
 r132: [48..49]
 r133: [46..47]
 r134: [288..289]
 r135: [282..287]
 r136: [282..283]
 r137: [44..45]
 r138: [40..41]
 r139: [36..39]
 r140: [36..37]
 r141: [32..33]
 r142: [28..31]
 r143: [26..27]
 r144: [1..2]
 r146: [232..233]
 r147: [230..231]
 r148: [264..265]
 r149: [260..261]
 r150: [256..257]
 r151: [276..281]
 r152: [278..279]
 r153: [280..281]
 r154: [276..277]
 r155: [272..273]
 r156: [274..275]
 r157: [270..271]
 r158: [270..271]
 r159: [268..269]
 r160: [268..269]
 r161: [248..249]
 r162: [248..249]
 r163: [122..123]
 r164: [236..237]
 r165: [244..245]
 r166: [242..243]
 r167: [120..121]
 r168: [240..241]
 r169: [238..239]
 r170: [118..119]
 r171: [116..117]
 r172: [116..117]
 r173: [228..229]
 r174: [114..115]
 r175: [218..219]
 r176: [214..215]
 r177: [208..209]
 r178: [206..207]
 r179: [206..207]
 r180: [196..197]
 r181: [192..193]
 r182: [186..187]
 r183: [184..185]
 r184: [182..183]
 r185: [178..179]
 r186: [176..177]
 r187: [154..155]
 r188: [150..151]
 r189: [150..151]
 r190: [150..151]
 r191: [148..149]
 r192: [146..147]
 r193: [172..173]
 r194: [170..171]
 r195: [168..169]
 r196: [166..167]
 r197: [162..163]
 r198: [162..163]
 r199: [162..163]
 r200: [160..161]
 r201: [144..145]
 r202: [204..205]
 r203: [200..201]
 r204: [200..201]
 r205: [200..201]
 r206: [198..199]
 r207: [156..157]
 r208: [142..143]
 r209: [142..143]
 r210: [140..141]
 r211: [136..137]
 r212: [134..135]
 r213: [130..131]
 r214: [110..111]
 r215: [108..109]
 r216: [104..105]
 r217: [112..113]
 r218: [112..113]
 r219: [100..101]
 r220: [98..99]
 r221: [74..75]
 r222: [96..97]
 r223: [68..69]
 r224: [76..77]
 r225: [66..67]
 r226: [64..65]
 r227: [60..61]
 r228: [58..59]
 r229: [56..57]
 r230: [52..53]
 r231: [50..51]
 r232: [21..22]
 r233: [15..16]
 r234: [17..18]
 r235: [9..10]
 r236: [5..6]
 r237: [124..125]
 r238: [290..291]
 r239: [284..285]
 r240: [286..287]
 r241: [42..43]
 r242: [38..39]
 r243: [34..35]
 r244: [30..31]
 r245: [28..29]
 r246: [26..27]
 r247: [24..25]
 r250: [234..235]
 r251: [0..0]
	 Assigning to 250 (cl=INDEX_REGS, orig=250, freq=1, tfirst=250, tfreq=1)...
	   Assign 0 to reload r250 (freq=1)
	 Assigning to 251 (cl=INDEX_REGS, orig=251, freq=1, tfirst=251, tfreq=1)...
	   Assign 3 to reload r251 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=464, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=432, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
          alt=0,overall=6,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 632:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 629:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 626:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 623:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 619:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 612:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 605:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 598:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 590:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 587:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 578:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 573:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 570:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 563:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 552:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 541:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 529:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 518:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 513:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 506:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 500:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 494:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 490:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 477:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 457:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 453:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 451:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 450:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 449:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 447:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 446:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 441:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 424:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 421:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 409:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 408:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 396:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 390:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 386:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 381:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 370:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 355:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 348:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 323:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 318:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 314:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 302:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 293:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 281:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 278:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 271:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 268:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 255:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 250:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 248:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 233:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 203:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 194:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 185:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 167:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 157:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 130:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 123:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 102:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 88:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 67:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=464, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=432, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
changing reg in insn 632
changing reg in insn 557
changing reg in insn 637
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 70
changing reg in insn 72
changing reg in insn 46
changing reg in insn 54
changing reg in insn 51
changing reg in insn 56
changing reg in insn 59
changing reg in insn 60
changing reg in insn 76
changing reg in insn 77
changing reg in insn 80
changing reg in insn 81
changing reg in insn 95
changing reg in insn 96
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 201
changing reg in insn 204
changing reg in insn 202
changing reg in insn 205
changing reg in insn 208
changing reg in insn 209
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 220
changing reg in insn 238
changing reg in insn 239
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 246
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 259
changing reg in insn 272
changing reg in insn 274
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 299
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 345
changing reg in insn 351
changing reg in insn 352
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 379
changing reg in insn 394
changing reg in insn 395
changing reg in insn 395
changing reg in insn 400
changing reg in insn 402
changing reg in insn 403
changing reg in insn 403
changing reg in insn 406
changing reg in insn 407
changing reg in insn 408
changing reg in insn 409
changing reg in insn 410
changing reg in insn 428
changing reg in insn 429
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 434
changing reg in insn 446
changing reg in insn 448
changing reg in insn 450
changing reg in insn 452
changing reg in insn 464
changing reg in insn 465
changing reg in insn 468
changing reg in insn 469
changing reg in insn 470
changing reg in insn 470
changing reg in insn 472
changing reg in insn 477
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 484
changing reg in insn 482
changing reg in insn 483
changing reg in insn 484
changing reg in insn 484
changing reg in insn 485
changing reg in insn 486
changing reg in insn 487
changing reg in insn 488
changing reg in insn 488
changing reg in insn 489
changing reg in insn 489
changing reg in insn 491
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 504
changing reg in insn 500
changing reg in insn 502
changing reg in insn 511
changing reg in insn 512
changing reg in insn 512
changing reg in insn 515
changing reg in insn 516
changing reg in insn 519
changing reg in insn 517
changing reg in insn 520
changing reg in insn 544
changing reg in insn 546
changing reg in insn 534
changing reg in insn 535
changing reg in insn 535
changing reg in insn 540
changing reg in insn 538
changing reg in insn 539
changing reg in insn 550
changing reg in insn 551
changing reg in insn 551
changing reg in insn 556
changing reg in insn 573
changing reg in insn 574
changing reg in insn 593
changing reg in insn 595
changing reg in insn 583
changing reg in insn 584
changing reg in insn 584
changing reg in insn 589
changing reg in insn 587
changing reg in insn 588
changing reg in insn 598
changing reg in insn 599
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 608
changing reg in insn 606
changing reg in insn 607
changing reg in insn 610
changing reg in insn 611
changing reg in insn 611
changing reg in insn 617
changing reg in insn 618
changing reg in insn 620
changing reg in insn 637
changing reg in insn 641
changing reg in insn 17
changing reg in insn 20
changing reg in insn 22
changing reg in insn 25
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 46
changing reg in insn 44
changing reg in insn 45
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 53
changing reg in insn 57
changing reg in insn 88
changing reg in insn 90
changing reg in insn 89
changing reg in insn 91
changing reg in insn 102
changing reg in insn 104
changing reg in insn 111
changing reg in insn 112
changing reg in insn 117
changing reg in insn 118
changing reg in insn 122
changing reg in insn 123
changing reg in insn 130
changing reg in insn 132
changing reg in insn 139
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 147
changing reg in insn 149
changing reg in insn 156
changing reg in insn 158
changing reg in insn 157
changing reg in insn 160
changing reg in insn 171
changing reg in insn 172
changing reg in insn 185
changing reg in insn 187
changing reg in insn 203
changing reg in insn 206
changing reg in insn 216
changing reg in insn 217
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 224
changing reg in insn 225
changing reg in insn 233
changing reg in insn 236
changing reg in insn 242
changing reg in insn 243
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 250
changing reg in insn 252
changing reg in insn 253
changing reg in insn 255
changing reg in insn 257
changing reg in insn 268
changing reg in insn 269
changing reg in insn 288
changing reg in insn 289
changing reg in insn 291
changing reg in insn 294
changing reg in insn 292
changing reg in insn 295
changing reg in insn 293
changing reg in insn 297
changing reg in insn 300
changing reg in insn 301
changing reg in insn 306
changing reg in insn 307
changing reg in insn 314
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 322
changing reg in insn 323
changing reg in insn 334
changing reg in insn 335
changing reg in insn 337
changing reg in insn 340
changing reg in insn 338
changing reg in insn 341
changing reg in insn 339
changing reg in insn 343
changing reg in insn 346
changing reg in insn 347
changing reg in insn 358
changing reg in insn 359
changing reg in insn 367
changing reg in insn 368
changing reg in insn 371
changing reg in insn 374
changing reg in insn 372
changing reg in insn 375
changing reg in insn 373
changing reg in insn 377
changing reg in insn 380
changing reg in insn 381
changing reg in insn 385
changing reg in insn 386
changing reg in insn 390
changing reg in insn 392
changing reg in insn 391
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 396
changing reg in insn 398
changing reg in insn 401
changing reg in insn 402
changing reg in insn 404
changing reg in insn 405
changing reg in insn 424
changing reg in insn 425
changing reg in insn 427
changing reg in insn 428
changing reg in insn 430
changing reg in insn 431
changing reg in insn 441
changing reg in insn 443
changing reg in insn 442
changing reg in insn 443
changing reg in insn 447
changing reg in insn 448
changing reg in insn 451
changing reg in insn 452
changing reg in insn 457
changing reg in insn 458
changing reg in insn 463
changing reg in insn 464
changing reg in insn 471
changing reg in insn 472
changing reg in insn 490
changing reg in insn 491
changing reg in insn 494
changing reg in insn 495
changing reg in insn 497
changing reg in insn 498
changing reg in insn 501
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 510
changing reg in insn 511
changing reg in insn 513
changing reg in insn 514
changing reg in insn 518
changing reg in insn 522
changing reg in insn 533
changing reg in insn 534
changing reg in insn 537
changing reg in insn 538
changing reg in insn 536
changing reg in insn 537
changing reg in insn 549
changing reg in insn 550
changing reg in insn 552
changing reg in insn 554
changing reg in insn 563
changing reg in insn 565
changing reg in insn 582
changing reg in insn 583
changing reg in insn 586
changing reg in insn 587
changing reg in insn 585
changing reg in insn 586
changing reg in insn 602
changing reg in insn 603
changing reg in insn 605
changing reg in insn 606
changing reg in insn 609
changing reg in insn 610
changing reg in insn 612
changing reg in insn 613
changing reg in insn 613
changing reg in insn 614
changing reg in insn 619
changing reg in insn 620
changing reg in insn 623
changing reg in insn 624
changing reg in insn 10
changing reg in insn 645
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 207.
rescanning insn with uid = 220.
deleting insn with uid = 220.
verify found no changes in insn with uid = 237.
rescanning insn with uid = 246.
deleting insn with uid = 246.
rescanning insn with uid = 259.
deleting insn with uid = 259.
verify found no changes in insn with uid = 270.
rescanning insn with uid = 299.
deleting insn with uid = 299.
verify found no changes in insn with uid = 316.
rescanning insn with uid = 345.
deleting insn with uid = 345.
rescanning insn with uid = 379.
deleting insn with uid = 379.
rescanning insn with uid = 400.
deleting insn with uid = 400.
rescanning insn with uid = 406.
deleting insn with uid = 406.
verify found no changes in insn with uid = 426.
verify found no changes in insn with uid = 479.
verify found no changes in insn with uid = 496.
rescanning insn with uid = 504.
deleting insn with uid = 504.
rescanning insn with uid = 515.
deleting insn with uid = 515.
verify found no changes in insn with uid = 524.
rescanning insn with uid = 540.
deleting insn with uid = 540.
rescanning insn with uid = 556.
deleting insn with uid = 556.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 575.
rescanning insn with uid = 589.
deleting insn with uid = 589.
rescanning insn with uid = 608.
deleting insn with uid = 608.
rescanning insn with uid = 617.
deleting insn with uid = 617.
verify found no changes in insn with uid = 625.
verify found no changes in insn with uid = 647.


csvtabConnect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={193d,166u} r1={91d,53u,1e} r2={52d,14u} r3={1d} r4={62d,24u} r5={76d,38u} r6={1d,256u} r7={1d,122u} r8={38d} r9={38d} r10={38d} r11={38d} r12={38d} r13={38d} r14={38d} r15={38d} r17={119d,43u} r18={38d} r19={38d} r20={1d,1u,1e} r21={39d} r22={39d} r23={39d} r24={39d} r25={39d} r26={39d} r27={39d} r28={39d} r29={38d} r30={38d} r31={38d} r32={38d} r33={38d} r34={38d} r35={38d} r36={38d} r37={42d,4u} r38={39d,1u} r39={38d} r40={38d} r45={38d} r46={38d} r47={38d} r48={38d} r49={38d} r50={38d} r51={38d} r52={38d} 
;;    total ref usage 2778{2054d,722u,2e} in 483{445 regular + 38 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 146 147
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -408 [0xfffffffffffffe68])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [0 pAux+0 S8 A64])
        (reg:DI 4 si [ pAux ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pAux ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -420 [0xfffffffffffffe5c])) [0 argc+0 S4 A32])
        (reg:SI 1 dx [ argc ])) ./ext/misc/csv.c:492 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ argc ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 argv+0 S8 A64])
        (reg:DI 2 cx [ argv ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ argv ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [0 ppVtab+0 S8 A64])
        (reg:DI 37 r8 [ ppVtab ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ppVtab ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [0 pzErr+0 S8 A64])
        (reg:DI 38 r9 [ pzErr ])) ./ext/misc/csv.c:492 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ pzErr ])
        (nil)))
(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 8 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.6640+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [250])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:492 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [250])
        (nil)))
(insn 13 10 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:493 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:494 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:495 89 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
        (const_int -99 [0xffffffffffffff9d])) ./ext/misc/csv.c:501 89 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 0 ax [146])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:514 274 {*adddi_1}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (const_int 264 [0x108])) ./ext/misc/csv.c:514 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:514 89 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [146])) ./ext/misc/csv.c:514 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [146])
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:514 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 0 ax [147])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:515 274 {*adddi_1}
     (nil))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (const_int 24 [0x18])) ./ext/misc/csv.c:515 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:515 89 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [147])) ./ext/misc/csv.c:515 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [147])
        (nil)))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:515 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 27 26 655 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
        (const_int 3 [0x3])) ./ext/misc/csv.c:516 89 {*movsi_internal}
     (nil))
(jump_insn 655 27 656 2 (set (pc)
        (label_ref 168)) ./ext/misc/csv.c:516 650 {jump}
     (nil)
 -> 168)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 656 655 170)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 148 149 150
(code_label 170 656 30 3 106 "" [1 uses])
(note 30 170 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:517 89 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 0 ax [orig:60 D.6620 ] [60])
        (sign_extend:DI (reg:SI 0 ax [148]))) ./ext/misc/csv.c:517 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [148])
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 1 dx [orig:61 D.6620 ] [61])
                (ashift:DI (reg:DI 0 ax [orig:60 D.6620 ] [60])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:517 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.6620 ] [60])
        (nil)))
(insn 34 33 35 3 (set (reg/f:DI 0 ax [149])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 argv+0 S8 A64])) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 3 (parallel [
            (set (reg/f:DI 0 ax [orig:62 D.6621 ] [62])
                (plus:DI (reg/f:DI 0 ax [149])
                    (reg:DI 1 dx [orig:61 D.6620 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:517 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [149])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.6620 ] [61])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -416 [0xfffffffffffffe60])) [0 argv+0 S8 A64])
                    (reg:DI 1 dx [orig:61 D.6620 ] [61]))
                (nil)))))
(insn 36 35 37 3 (set (reg/f:DI 0 ax [150])
        (mem/f:DI (reg/f:DI 0 ax [orig:62 D.6621 ] [62]) [0 *_33+0 S8 A64])) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6621 ] [62])
        (nil)))
(insn 37 36 38 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [0 z+0 S8 A64])
        (reg/f:DI 0 ax [150])) ./ext/misc/csv.c:517 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [150])
        (nil)))
(insn 38 37 657 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:519 89 {*movsi_internal}
     (nil))
(jump_insn 657 38 658 3 (set (pc)
        (label_ref 68)) ./ext/misc/csv.c:519 650 {jump}
     (nil)
 -> 68)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 658 657 71)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 65 66 151 152 153 154 155 156 157 158 159 160
(code_label 71 658 41 4 98 "" [1 uses])
(note 41 71 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (parallel [
            (set (reg:DI 0 ax [151])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -320 [0xfffffffffffffec0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (nil))
(insn 43 42 44 4 (set (reg:SI 1 dx [153])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 1 dx [152])
        (sign_extend:DI (reg:SI 1 dx [153]))) ./ext/misc/csv.c:520 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [153])
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 1 dx [154])
                (ashift:DI (reg:DI 1 dx [152])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [152])
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 2 cx [orig:64 D.6622 ] [64])
                (plus:DI (reg:DI 0 ax [151])
                    (reg:DI 1 dx [154])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [154])
        (expr_list:REG_DEAD (reg:DI 0 ax [151])
            (nil))))
(insn 47 46 48 4 (set (reg:SI 0 ax [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:DI 0 ax [155])
        (sign_extend:DI (reg:SI 0 ax [156]))) ./ext/misc/csv.c:520 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [156])
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 1 dx [157])
                (ashift:DI (reg:DI 0 ax [155])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [155])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 0 ax [158])
        (symbol_ref:DI ("azParam.5697") [flags 0x2]  <var_decl 0x7fbdb43fb000 azParam>)) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 4 si [orig:65 D.6623 ] [65])
        (mem/f/j:DI (plus:DI (reg:DI 1 dx [157])
                (reg:DI 0 ax [158])) [0 azParam S8 A64])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [158])
        (expr_list:REG_DEAD (reg:DI 1 dx [157])
            (nil))))
(insn 52 51 53 4 (set (reg:DI 1 dx [159])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 0 ax [160])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:520 274 {*adddi_1}
     (nil))
(insn 54 53 55 4 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:64 D.6622 ] [64])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:64 D.6622 ] [64])
        (nil)))
(insn 55 54 56 4 (set (reg:DI 1 dx)
        (reg:DI 1 dx [159])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [159])
        (nil)))
(insn 56 55 57 4 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:65 D.6623 ] [65])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:65 D.6623 ] [65])
        (nil)))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [160])) ./ext/misc/csv.c:520 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [160])
        (nil)))
(call_insn 58 57 59 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_string_parameter") [flags 0x3]  <function_decl 0x7fbdb43eca00 csv_string_parameter>) [0 csv_string_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:520 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 59 58 60 4 (set (reg:SI 0 ax [orig:66 D.6619 ] [66])
        (reg:SI 0 ax)) ./ext/misc/csv.c:520 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 60 59 61 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:66 D.6619 ] [66])
            (const_int 0 [0]))) ./ext/misc/csv.c:520 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.6619 ] [66])
        (nil)))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) ./ext/misc/csv.c:520 612 {*jcc_1}
     (nil)
 -> 65)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 62 61 659 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 659 62 660 5 (set (pc)
        (label_ref 74)) ./ext/misc/csv.c:520 650 {jump}
     (nil)
 -> 74)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 660 659 65)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 65 660 66 6 96 "" [1 uses])
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:519 273 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63
(code_label 68 67 69 7 95 "" [1 uses])
(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 72 7 (set (reg:SI 0 ax [orig:63 j.19 ] [63])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])) ./ext/misc/csv.c:519 89 {*movsi_internal}
     (nil))
(insn 72 70 73 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:63 j.19 ] [63])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:519 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 j.19 ] [63])
        (nil)))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) ./ext/misc/csv.c:519 612 {*jcc_1}
     (nil)
 -> 71)
;;  succ:       4
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              5 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 67
(code_label 74 73 75 8 97 "" [1 uses])
(note 75 74 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 8 (set (reg:SI 0 ax [orig:67 j.20 ] [67])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -380 [0xfffffffffffffe84])) [0 j+0 S4 A32])) ./ext/misc/csv.c:522 89 {*movsi_internal}
     (nil))
(insn 77 76 78 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:67 j.20 ] [67])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:522 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 j.20 ] [67])
        (nil)))
(jump_insn 78 77 79 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) ./ext/misc/csv.c:522 612 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 68
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (set (reg:QI 0 ax [orig:68 D.6624 ] [68])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [0 sRdr.zErr+0 S1 A64])) ./ext/misc/csv.c:523 91 {*movqi_internal}
     (nil))
(insn 81 80 82 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:68 D.6624 ] [68])
            (const_int 0 [0]))) ./ext/misc/csv.c:523 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.6624 ] [68])
        (nil)))
(jump_insn 82 81 83 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) ./ext/misc/csv.c:523 612 {*jcc_1}
     (nil)
 -> 165)
;;  succ:       10 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 83 82 661 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 661 83 662 10 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:523 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 662 661 86)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 69 161 162
(code_label 86 662 87 11 99 "" [1 uses])
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (parallel [
            (set (reg:DI 1 dx [161])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -396 [0xfffffffffffffe74])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:525 274 {*adddi_1}
     (nil))
(insn 89 88 90 11 (set (reg:DI 0 ax [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:DI 2 cx)
        (reg:DI 1 dx [161])) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [161])
        (nil)))
(insn 91 90 92 11 (set (reg:DI 1 dx)
        (reg:DI 0 ax [162])) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [162])
        (nil)))
(insn 92 91 93 11 (set (reg:SI 4 si)
        (const_int 6 [0x6])) ./ext/misc/csv.c:525 89 {*movsi_internal}
     (nil))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fbdb4535be0 *.LC17>)) ./ext/misc/csv.c:525 87 {*movdi_internal_rex64}
     (nil))
(call_insn 94 93 95 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_boolean_parameter") [flags 0x3]  <function_decl 0x7fbdb43ece00 csv_boolean_parameter>) [0 csv_boolean_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:525 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 95 94 96 11 (set (reg:SI 0 ax [orig:69 D.6619 ] [69])
        (reg:SI 0 ax)) ./ext/misc/csv.c:525 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 96 95 97 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:69 D.6619 ] [69])
            (const_int 0 [0]))) ./ext/misc/csv.c:525 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 D.6619 ] [69])
        (nil)))
(jump_insn 97 96 98 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) ./ext/misc/csv.c:525 612 {*jcc_1}
     (nil)
 -> 115)
;;  succ:       12 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:526 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 100 99 101 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) ./ext/misc/csv.c:526 612 {*jcc_1}
     (nil)
 -> 109)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 163
(note 101 100 102 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 13 (parallel [
            (set (reg:DI 0 ax [163])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:527 274 {*adddi_1}
     (nil))
(insn 103 102 104 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fbdb4535c78 *.LC18>)) ./ext/misc/csv.c:527 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [163])) ./ext/misc/csv.c:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [163])
        (nil)))
(insn 105 104 106 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:527 91 {*movqi_internal}
     (nil))
(call_insn 106 105 663 13 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:527 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 663 106 664 13 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:528 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 664 663 109)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 164
(code_label 109 664 110 14 103 "" [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg:SI 0 ax [164])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -396 [0xfffffffffffffe74])) [0 b+0 S4 A32])) ./ext/misc/csv.c:530 89 {*movsi_internal}
     (nil))
(insn 112 111 665 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
        (reg:SI 0 ax [164])) ./ext/misc/csv.c:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [164])
        (nil)))
(jump_insn 665 112 666 14 (set (pc)
        (label_ref 165)) 650 {jump}
     (nil)
 -> 165)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 666 665 115)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 165 166
(code_label 115 666 116 15 102 "" [1 uses])
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:DI 0 ax [165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (nil))
(insn 118 117 119 15 (set (reg:DI 1 dx)
        (reg:DI 0 ax [165])) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [165])
        (nil)))
(insn 119 118 120 15 (set (reg:SI 4 si)
        (const_int 7 [0x7])) ./ext/misc/csv.c:537 89 {*movsi_internal}
     (nil))
(insn 120 119 121 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fbdb4535d10 *.LC19>)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (nil))
(call_insn 121 120 122 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_parameter") [flags 0x3]  <function_decl 0x7fbdb43ec800 csv_parameter>) [0 csv_parameter S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:537 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 122 121 123 15 (set (reg:DI 0 ax [166])
        (reg:DI 0 ax)) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 123 122 124 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [0 zValue+0 S8 A64])
        (reg:DI 0 ax [166])) ./ext/misc/csv.c:537 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [166])
        (nil)))
(insn 124 123 125 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -344 [0xfffffffffffffea8])) [0 zValue+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:537 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 125 124 126 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) ./ext/misc/csv.c:537 612 {*jcc_1}
     (nil)
 -> 154)
;;  succ:       16 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 126 125 127 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:538 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 128 127 129 16 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ./ext/misc/csv.c:538 612 {*jcc_1}
     (nil)
 -> 137)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 167
(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (parallel [
            (set (reg:DI 0 ax [167])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:539 274 {*adddi_1}
     (nil))
(insn 131 130 132 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fbdb4535da8 *.LC20>)) ./ext/misc/csv.c:539 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [167])) ./ext/misc/csv.c:539 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [167])
        (nil)))
(insn 133 132 134 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:539 91 {*movqi_internal}
     (nil))
(call_insn 134 133 667 17 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:539 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 667 134 668 17 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:540 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 668 667 137)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 168 169
(code_label 137 668 138 18 105 "" [1 uses])
(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (set (reg:DI 0 ax [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [0 zValue+0 S8 A64])) ./ext/misc/csv.c:542 87 {*movdi_internal_rex64}
     (nil))
(insn 140 139 141 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [168])) ./ext/misc/csv.c:542 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [168])
        (nil)))
(call_insn/i 141 140 142 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fbdb4720000 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:542 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 142 141 143 18 (set (reg:SI 0 ax [169])
        (reg:SI 0 ax)) ./ext/misc/csv.c:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 143 142 144 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
        (reg:SI 0 ax [169])) ./ext/misc/csv.c:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [169])
        (nil)))
(insn 144 143 145 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:543 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 145 144 146 18 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) ./ext/misc/csv.c:543 612 {*jcc_1}
     (nil)
 -> 165)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 170
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 19 (parallel [
            (set (reg:DI 0 ax [170])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:544 274 {*adddi_1}
     (nil))
(insn 148 147 149 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fbdb4535e40 *.LC21>)) ./ext/misc/csv.c:544 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [170])) ./ext/misc/csv.c:544 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [170])
        (nil)))
(insn 150 149 151 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:544 91 {*movqi_internal}
     (nil))
(call_insn 151 150 669 19 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:544 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 669 151 670 19 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:545 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 670 669 154)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 171 172
(code_label 154 670 155 20 104 "" [1 uses])
(note 155 154 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 20 (set (reg:DI 1 dx [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg:DI 0 ax [172])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:549 274 {*adddi_1}
     (nil))
(insn 158 157 159 20 (set (reg:DI 1 dx)
        (reg:DI 1 dx [171])) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [171])
        (nil)))
(insn 159 158 160 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fbdb4535ed8 *.LC22>)) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 20 (set (reg:DI 5 di)
        (reg:DI 0 ax [172])) ./ext/misc/csv.c:549 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [172])
        (nil)))
(insn 161 160 162 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:549 91 {*movqi_internal}
     (nil))
(call_insn 162 161 671 20 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:549 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 671 162 672 20 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:550 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 672 671 165)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              18
;;              14 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 165 672 166 21 100 "" [3 uses])
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:516 273 {*addsi_1}
     (nil))
;;  succ:       22 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173
(code_label 168 167 169 22 94 "" [1 uses])
(note 169 168 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 171 169 172 22 (set (reg:SI 0 ax [173])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:516 89 {*movsi_internal}
     (nil))
(insn 172 171 173 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [173])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -420 [0xfffffffffffffe5c])) [0 argc+0 S4 A32]))) ./ext/misc/csv.c:516 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [173])
        (nil)))
(jump_insn 173 172 174 22 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) ./ext/misc/csv.c:516 612 {*jcc_1}
     (nil)
 -> 170)
;;  succ:       3
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70 71 72 73 74
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 23 (set (reg/f:DI 0 ax [orig:70 D.6625 ] [70])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:553 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:70 D.6625 ] [70])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6625 ] [70])
        (nil)))
(insn 177 176 178 23 (set (reg:QI 1 dx [orig:71 D.6626 ] [71])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ./ext/misc/csv.c:553 608 {*setcc_qi}
     (nil))
(insn 178 177 179 23 (set (reg/f:DI 0 ax [orig:72 D.6625 ] [72])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:553 87 {*movdi_internal_rex64}
     (nil))
(insn 179 178 180 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:72 D.6625 ] [72])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 D.6625 ] [72])
        (nil)))
(insn 180 179 181 23 (set (reg:QI 0 ax [orig:73 D.6626 ] [73])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ./ext/misc/csv.c:553 608 {*setcc_qi}
     (nil))
(insn 181 180 182 23 (parallel [
            (set (reg:QI 0 ax [orig:74 D.6626 ] [74])
                (xor:QI (reg:QI 0 ax [orig:73 D.6626 ] [73])
                    (reg:QI 1 dx [orig:71 D.6626 ] [71])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:553 417 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:73 D.6626 ] [73])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:71 D.6626 ] [71])
            (nil))))
(insn 182 181 183 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:74 D.6626 ] [74])
            (const_int 0 [0]))) ./ext/misc/csv.c:553 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:74 D.6626 ] [74])
        (nil)))
(jump_insn 183 182 184 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) ./ext/misc/csv.c:553 612 {*jcc_1}
     (nil)
 -> 192)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 174
(note 184 183 185 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 24 (parallel [
            (set (reg:DI 0 ax [174])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:554 274 {*adddi_1}
     (nil))
(insn 186 185 187 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fbdb453e000 *.LC23>)) ./ext/misc/csv.c:554 87 {*movdi_internal_rex64}
     (nil))
(insn 187 186 188 24 (set (reg:DI 5 di)
        (reg:DI 0 ax [174])) ./ext/misc/csv.c:554 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [174])
        (nil)))
(insn 188 187 189 24 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:554 91 {*movqi_internal}
     (nil))
(call_insn 189 188 673 24 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:554 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(jump_insn 673 189 674 24 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:555 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 674 673 192)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 192 674 193 25 107 "" [1 uses])
(note 193 192 194 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 25 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:558 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 195 194 196 25 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) ./ext/misc/csv.c:558 612 {*jcc_1}
     (nil)
 -> 199)
;;  succ:       27
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 196 195 197 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:558 7 {*cmpsi_1}
     (nil))
(jump_insn 198 197 199 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) ./ext/misc/csv.c:558 612 {*jcc_1}
     (nil)
 -> 214)
;;  succ:       27 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 76 77 175
(code_label 199 198 200 27 108 "" [1 uses])
(note 200 199 201 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 27 (set (reg/f:DI 1 dx [orig:75 D.6625 ] [75])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (nil))
(insn 202 201 203 27 (set (reg/f:DI 2 cx [orig:76 D.6625 ] [76])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 27 (parallel [
            (set (reg:DI 0 ax [175])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:559 274 {*adddi_1}
     (nil))
(insn 204 203 205 27 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:75 D.6625 ] [75])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:75 D.6625 ] [75])
        (nil)))
(insn 205 204 206 27 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:76 D.6625 ] [76])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:76 D.6625 ] [76])
        (nil)))
(insn 206 205 207 27 (set (reg:DI 5 di)
        (reg:DI 0 ax [175])) ./ext/misc/csv.c:559 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [175])
        (nil)))
(call_insn 207 206 208 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_reader_open") [flags 0x3]  <function_decl 0x7fbdb47d2500 csv_reader_open>) [0 csv_reader_open S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:559 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 208 207 209 27 (set (reg:SI 0 ax [orig:77 D.6619 ] [77])
        (reg:SI 0 ax)) ./ext/misc/csv.c:559 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 209 208 210 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:77 D.6619 ] [77])
            (const_int 0 [0]))) ./ext/misc/csv.c:559 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 D.6619 ] [77])
        (nil)))
(jump_insn 210 209 211 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) ./ext/misc/csv.c:559 612 {*jcc_1}
     (nil)
 -> 214)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 211 210 675 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 675 211 676 28 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:561 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 676 675 214)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;;              27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 176 177 178 179
(code_label 214 676 215 29 109 "" [2 uses])
(note 215 214 216 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 29 (set (reg/f:DI 0 ax [176])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (nil))
(insn 217 216 218 29 (set (reg/f:DI 0 ax [orig:78 sqlite3_api.21 ] [78])
        (mem/f/c:DI (reg/f:DI 0 ax [176]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [176])
        (nil)))
(insn 218 217 219 29 (set (reg/f:DI 0 ax [orig:79 D.6627 ] [79])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:78 sqlite3_api.21 ] [78])
                (const_int 544 [0x220])) [0 sqlite3_api.21_56->malloc+0 S8 A64])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 sqlite3_api.21 ] [78])
        (nil)))
(insn 219 218 220 29 (set (reg:SI 5 di)
        (const_int 56 [0x38])) ./ext/misc/csv.c:563 89 {*movsi_internal}
     (nil))
(call_insn 220 219 221 29 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:79 D.6627 ] [79]) [0 *_57 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:563 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.6627 ] [79])
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 221 220 222 29 (set (reg:DI 0 ax [177])
        (reg:DI 0 ax)) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])
        (reg:DI 0 ax [177])) ./ext/misc/csv.c:563 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [177])
        (nil)))
(insn 223 222 224 29 (set (reg/f:DI 0 ax [178])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [0 ppVtab+0 S8 A64])) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 29 (set (reg/f:DI 1 dx [179])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 29 (set (mem/f:DI (reg/f:DI 0 ax [178]) [0 *ppVtab_59(D)+0 S8 A64])
        (reg/f:DI 1 dx [179])) ./ext/misc/csv.c:564 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [179])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [178])
            (nil))))
(insn 226 225 227 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:565 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 227 226 228 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) ./ext/misc/csv.c:565 612 {*jcc_1}
     (nil)
 -> 231)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 228 227 677 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 677 228 678 30 (set (pc)
        (label_ref 560)) ./ext/misc/csv.c:565 650 {jump}
     (nil)
 -> 560)
;;  succ:       71 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 678 677 231)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 80 180
(code_label 231 678 232 31 110 "" [1 uses])
(note 232 231 233 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 31 (set (reg:DI 0 ax [180])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (nil))
(insn 234 233 235 31 (set (reg:DI 1 dx)
        (const_int 56 [0x38])) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (nil))
(insn 235 234 236 31 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:566 89 {*movsi_internal}
     (nil))
(insn 236 235 237 31 (set (reg:DI 5 di)
        (reg:DI 0 ax [180])) ./ext/misc/csv.c:566 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [180])
        (nil)))
(call_insn 237 236 238 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:566 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 238 237 239 31 (set (reg/f:DI 0 ax [orig:80 D.6625 ] [80])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:567 87 {*movdi_internal_rex64}
     (nil))
(insn 239 238 240 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:80 D.6625 ] [80])
            (const_int 0 [0]))) ./ext/misc/csv.c:567 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.6625 ] [80])
        (nil)))
(jump_insn 240 239 241 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 419)
            (pc))) ./ext/misc/csv.c:567 612 {*jcc_1}
     (nil)
 -> 419)
;;  succ:       32 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 82 83 84 181 182 183 184 185
(note 241 240 242 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 32 (set (reg/f:DI 0 ax [181])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (nil))
(insn 243 242 244 32 (set (reg/f:DI 0 ax [orig:81 sqlite3_api.22 ] [81])
        (mem/f/c:DI (reg/f:DI 0 ax [181]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [181])
        (nil)))
(insn 244 243 245 32 (set (reg/f:DI 0 ax [orig:82 D.6628 ] [82])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:81 sqlite3_api.22 ] [81])
                (const_int 1824 [0x720])) [0 sqlite3_api.22_61->str_new+0 S8 A64])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 sqlite3_api.22 ] [81])
        (nil)))
(insn 245 244 246 32 (set (reg:DI 5 di)
        (const_int 0 [0])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (nil))
(call_insn 246 245 247 32 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:82 D.6628 ] [82]) [0 *_62 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:568 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.6628 ] [82])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 247 246 248 32 (set (reg:DI 0 ax [182])
        (reg:DI 0 ax)) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 248 247 249 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])
        (reg:DI 0 ax [182])) ./ext/misc/csv.c:568 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [182])
        (nil)))
(insn 249 248 250 32 (set (reg/f:DI 0 ax [183])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fbdb453e098 *.LC24>)) ./ext/misc/csv.c:569 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])
        (reg/f:DI 0 ax [183])) ./ext/misc/csv.c:569 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [183])
        (nil)))
(insn 251 250 252 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:570 89 {*movsi_internal}
     (nil))
(insn 252 251 253 32 (set (reg/f:DI 0 ax [184])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 253 252 254 32 (set (reg/f:DI 0 ax [orig:83 sqlite3_api.23 ] [83])
        (mem/f/c:DI (reg/f:DI 0 ax [184]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [184])
        (nil)))
(insn 254 253 255 32 (set (reg/f:DI 1 dx [orig:84 D.6629 ] [84])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:83 sqlite3_api.23 ] [83])
                (const_int 1840 [0x730])) [0 sqlite3_api.23_66->str_appendf+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 sqlite3_api.23 ] [83])
        (nil)))
(insn 255 254 256 32 (set (reg:DI 0 ax [185])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 256 255 257 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fbdb453e130 *.LC25>)) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (nil))
(insn 257 256 258 32 (set (reg:DI 5 di)
        (reg:DI 0 ax [185])) ./ext/misc/csv.c:571 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [185])
        (nil)))
(insn 258 257 259 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:571 91 {*movqi_internal}
     (nil))
(call_insn 259 258 260 32 (call (mem:QI (reg/f:DI 1 dx [orig:84 D.6629 ] [84]) [0 *_67 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:571 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:84 D.6629 ] [84])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 260 259 261 32 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:572 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 261 260 262 32 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ./ext/misc/csv.c:572 612 {*jcc_1}
     (nil)
 -> 276)
;;  succ:       33 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 262 261 263 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 33 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:572 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 264 263 265 33 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ./ext/misc/csv.c:572 612 {*jcc_1}
     (nil)
 -> 276)
;;  succ:       34 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 265 264 266 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 273 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:573 89 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              35 (DFS_BACK)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 186
(code_label 273 266 267 35 114 "" [1 uses])
(note 267 273 268 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 35 (parallel [
            (set (reg:DI 0 ax [186])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:575 274 {*adddi_1}
     (nil))
(insn 269 268 270 35 (set (reg:DI 5 di)
        (reg:DI 0 ax [186])) ./ext/misc/csv.c:575 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [186])
        (nil)))
(call_insn 270 269 271 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:575 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 271 270 272 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:576 273 {*addsi_1}
     (nil))
(insn 272 271 274 35 (set (reg:SI 0 ax [orig:85 D.6619 ] [85])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:577 89 {*movsi_internal}
     (nil))
(insn 274 272 275 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 D.6619 ] [85])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:577 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.6619 ] [85])
        (nil)))
(jump_insn 275 274 276 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ./ext/misc/csv.c:577 612 {*jcc_1}
     (nil)
 -> 273)
;;  succ:       35 (DFS_BACK)
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;;              33
;;              35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 276 275 277 36 113 "" [2 uses])
(note 277 276 278 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:579 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 279 278 280 36 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:579 612 {*jcc_1}
     (nil)
 -> 312)
;;  succ:       37 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 280 279 281 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 37 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:579 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 282 281 283 37 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:579 612 {*jcc_1}
     (nil)
 -> 312)
;;  succ:       38 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 283 282 284 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 679 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:580 89 {*movsi_internal}
     (nil))
(jump_insn 679 284 680 38 (set (pc)
        (label_ref 303)) ./ext/misc/csv.c:580 650 {jump}
     (nil)
 -> 303)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 680 679 305)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 187 188 189 190 191
(code_label 305 680 287 39 117 "" [1 uses])
(note 287 305 288 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 39 (set (reg/f:DI 0 ax [187])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 289 288 290 39 (set (reg/f:DI 0 ax [orig:86 sqlite3_api.24 ] [86])
        (mem/f/c:DI (reg/f:DI 0 ax [187]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [187])
        (nil)))
(insn 290 289 291 39 (set (reg/f:DI 37 r8 [orig:87 D.6629 ] [87])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:86 sqlite3_api.24 ] [86])
                (const_int 1840 [0x730])) [0 sqlite3_api.24_72->str_appendf+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 sqlite3_api.24 ] [86])
        (nil)))
(insn 291 290 292 39 (set (reg:SI 2 cx [188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:581 89 {*movsi_internal}
     (nil))
(insn 292 291 293 39 (set (reg:DI 1 dx [189])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 293 292 294 39 (set (reg:DI 0 ax [190])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 294 293 295 39 (set (reg:SI 2 cx)
        (reg:SI 2 cx [188])) ./ext/misc/csv.c:581 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [188])
        (nil)))
(insn 295 294 296 39 (set (reg:DI 1 dx)
        (reg:DI 1 dx [189])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [189])
        (nil)))
(insn 296 295 297 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fbdb453e1c8 *.LC26>)) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (nil))
(insn 297 296 298 39 (set (reg:DI 5 di)
        (reg:DI 0 ax [190])) ./ext/misc/csv.c:581 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [190])
        (nil)))
(insn 298 297 299 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:581 91 {*movqi_internal}
     (nil))
(call_insn 299 298 300 39 (call (mem:QI (reg/f:DI 37 r8 [orig:87 D.6629 ] [87]) [0 *_73 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:581 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:87 D.6629 ] [87])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 300 299 301 39 (set (reg/f:DI 0 ax [191])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:582 87 {*movdi_internal_rex64}
     (nil))
(insn 301 300 302 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])
        (reg/f:DI 0 ax [191])) ./ext/misc/csv.c:582 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [191])
        (nil)))
(insn 302 301 303 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:580 273 {*addsi_1}
     (nil))
;;  succ:       40 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU,DFS_BACK)
;;              38 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 192
(code_label 303 302 304 40 116 "" [1 uses])
(note 304 303 306 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 306 304 307 40 (set (reg:SI 0 ax [192])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:580 89 {*movsi_internal}
     (nil))
(insn 307 306 308 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [192])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:580 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [192])
        (nil)))
(jump_insn 308 307 309 40 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) ./ext/misc/csv.c:580 612 {*jcc_1}
     (nil)
 -> 305)
;;  succ:       39
;;              41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 309 308 681 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn 681 309 682 41 (set (pc)
        (label_ref 388)) ./ext/misc/csv.c:579 650 {jump}
     (nil)
 -> 388)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 682 681 312)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;;              37
;;              47 (DFS_BACK)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 193 194
(code_label 312 682 313 42 115 "" [3 uses])
(note 313 312 314 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 42 (parallel [
            (set (reg:DI 0 ax [193])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:586 274 {*adddi_1}
     (nil))
(insn 315 314 316 42 (set (reg:DI 5 di)
        (reg:DI 0 ax [193])) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [193])
        (nil)))
(call_insn 316 315 317 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:586 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 317 316 318 42 (set (reg:DI 0 ax [194])
        (reg:DI 0 ax)) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 318 317 319 42 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [0 z+0 S8 A64])
        (reg:DI 0 ax [194])) ./ext/misc/csv.c:586 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [194])
        (nil)))
(insn 319 318 320 42 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 320 319 321 42 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (nil)
 -> 325)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195
(note 321 320 322 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 43 (set (reg:SI 0 ax [195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:587 89 {*movsi_internal}
     (nil))
(insn 323 322 324 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [195])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:587 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [195])
        (nil)))
(jump_insn 324 323 325 43 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (nil)
 -> 332)
;;  succ:       46
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 325 324 326 44 119 "" [1 uses])
(note 326 325 327 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 44 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 328 327 329 44 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (nil)
 -> 349)
;;  succ:       45 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 329 328 330 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:587 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 331 330 332 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 349)
            (pc))) ./ext/misc/csv.c:587 612 {*jcc_1}
     (nil)
 -> 349)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 88 89 196 197 198 199 200
(code_label 332 331 333 46 120 "" [1 uses])
(note 333 332 334 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 46 (set (reg/f:DI 0 ax [196])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 335 334 336 46 (set (reg/f:DI 0 ax [orig:88 sqlite3_api.25 ] [88])
        (mem/f/c:DI (reg/f:DI 0 ax [196]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [196])
        (nil)))
(insn 336 335 337 46 (set (reg/f:DI 37 r8 [orig:89 D.6629 ] [89])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:88 sqlite3_api.25 ] [88])
                (const_int 1840 [0x730])) [0 sqlite3_api.25_77->str_appendf+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 sqlite3_api.25 ] [88])
        (nil)))
(insn 337 336 338 46 (set (reg:DI 2 cx [197])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [0 z+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 338 337 339 46 (set (reg:DI 1 dx [198])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 339 338 340 46 (set (reg:DI 0 ax [199])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 340 339 341 46 (set (reg:DI 2 cx)
        (reg:DI 2 cx [197])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [197])
        (nil)))
(insn 341 340 342 46 (set (reg:DI 1 dx)
        (reg:DI 1 dx [198])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [198])
        (nil)))
(insn 342 341 343 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fbdb453e2f8 *.LC28>)) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (nil))
(insn 343 342 344 46 (set (reg:DI 5 di)
        (reg:DI 0 ax [199])) ./ext/misc/csv.c:588 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [199])
        (nil)))
(insn 344 343 345 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:588 91 {*movqi_internal}
     (nil))
(call_insn 345 344 346 46 (call (mem:QI (reg/f:DI 37 r8 [orig:89 D.6629 ] [89]) [0 *_78 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:588 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:89 D.6629 ] [89])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(insn 346 345 347 46 (set (reg/f:DI 0 ax [200])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:589 87 {*movdi_internal_rex64}
     (nil))
(insn 347 346 348 46 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])
        (reg/f:DI 0 ax [200])) ./ext/misc/csv.c:589 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [200])
        (nil)))
(insn 348 347 349 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:590 273 {*addsi_1}
     (nil))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(code_label 349 348 350 47 121 "" [2 uses])
(note 350 349 351 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 47 (set (reg:SI 0 ax [orig:90 D.6619 ] [90])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:592 89 {*movsi_internal}
     (nil))
(insn 352 351 353 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 D.6619 ] [90])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:592 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:90 D.6619 ] [90])
        (nil)))
(jump_insn 353 352 354 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) ./ext/misc/csv.c:592 612 {*jcc_1}
     (nil)
 -> 312)
;;  succ:       42 (DFS_BACK)
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 354 353 355 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 48 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:593 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 356 355 357 48 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) ./ext/misc/csv.c:593 612 {*jcc_1}
     (nil)
 -> 362)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 201
(note 357 356 358 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 49 (set (reg:SI 0 ax [201])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:594 89 {*movsi_internal}
     (nil))
(insn 359 358 683 49 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
        (reg:SI 0 ax [201])) ./ext/misc/csv.c:594 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [201])
        (nil)))
(jump_insn 683 359 684 49 (set (pc)
        (label_ref 388)) 650 {jump}
     (nil)
 -> 388)
;;  succ:       53 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 684 683 362)
;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 362 684 363 50 122 "" [1 uses])
(note 363 362 685 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 685 363 686 50 (set (pc)
        (label_ref 382)) ./ext/misc/csv.c:596 650 {jump}
     (nil)
 -> 382)
;;  succ:       52 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 686 685 384)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 91 92 202 203 204 205 206
(code_label 384 686 366 51 124 "" [1 uses])
(note 366 384 367 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 51 (set (reg/f:DI 0 ax [202])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 368 367 369 51 (set (reg/f:DI 0 ax [orig:91 sqlite3_api.26 ] [91])
        (mem/f/c:DI (reg/f:DI 0 ax [202]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [202])
        (nil)))
(insn 369 368 370 51 (set (reg/f:DI 37 r8 [orig:92 D.6629 ] [92])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:91 sqlite3_api.26 ] [91])
                (const_int 1840 [0x730])) [0 sqlite3_api.26_83->str_appendf+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 sqlite3_api.26 ] [91])
        (nil)))
(insn 370 369 371 51 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:597 273 {*addsi_1}
     (nil))
(insn 371 370 372 51 (set (reg:SI 2 cx [203])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:597 89 {*movsi_internal}
     (nil))
(insn 372 371 373 51 (set (reg:DI 1 dx [204])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 373 372 374 51 (set (reg:DI 0 ax [205])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 374 373 375 51 (set (reg:SI 2 cx)
        (reg:SI 2 cx [203])) ./ext/misc/csv.c:597 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [203])
        (nil)))
(insn 375 374 376 51 (set (reg:DI 1 dx)
        (reg:DI 1 dx [204])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [204])
        (nil)))
(insn 376 375 377 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fbdb453e1c8 *.LC26>)) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (nil))
(insn 377 376 378 51 (set (reg:DI 5 di)
        (reg:DI 0 ax [205])) ./ext/misc/csv.c:597 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [205])
        (nil)))
(insn 378 377 379 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:597 91 {*movqi_internal}
     (nil))
(call_insn 379 378 380 51 (call (mem:QI (reg/f:DI 37 r8 [orig:92 D.6629 ] [92]) [0 *_84 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:597 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:92 D.6629 ] [92])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_DEAD (reg:QI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_BR_PRED (use (reg:SI 2 cx))
                        (nil)))))))
(insn 380 379 381 51 (set (reg/f:DI 0 ax [206])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fbdb453e260 *.LC27>)) ./ext/misc/csv.c:598 87 {*movdi_internal_rex64}
     (nil))
(insn 381 380 382 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [0 zSep+0 S8 A64])
        (reg/f:DI 0 ax [206])) ./ext/misc/csv.c:598 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [206])
        (nil)))
;;  succ:       52 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU,DFS_BACK)
;;              50 [100.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207
(code_label 382 381 383 52 123 "" [1 uses])
(note 383 382 385 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 385 383 386 52 (set (reg:SI 0 ax [207])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -372 [0xfffffffffffffe8c])) [0 iCol+0 S4 A32])) ./ext/misc/csv.c:596 89 {*movsi_internal}
     (nil))
(insn 386 385 387 52 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [207])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32]))) ./ext/misc/csv.c:596 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [207])
        (nil)))
(jump_insn 387 386 388 52 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) ./ext/misc/csv.c:596 612 {*jcc_1}
     (nil)
 -> 384)
;;  succ:       51
;;              53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;;              41 [100.0%] 
;;              49 [100.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 94 95 96 97 98 208 209 210 211 212 213
(code_label 388 387 389 53 118 "" [2 uses])
(note 389 388 390 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 53 (set (reg/f:DI 0 ax [208])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:602 87 {*movdi_internal_rex64}
     (nil))
(insn 391 390 392 53 (set (reg:SI 1 dx [209])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])) ./ext/misc/csv.c:602 89 {*movsi_internal}
     (nil))
(insn 392 391 393 53 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [208])
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 1 dx [209])) ./ext/misc/csv.c:602 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [209])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [208])
            (nil))))
(insn 393 392 394 53 (set (reg/f:DI 0 ax [210])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 394 393 395 53 (set (reg/f:DI 0 ax [orig:93 sqlite3_api.27 ] [93])
        (mem/f/c:DI (reg/f:DI 0 ax [210]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [210])
        (nil)))
(insn 395 394 396 53 (set (reg/f:DI 1 dx [orig:94 D.6629 ] [94])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:93 sqlite3_api.27 ] [93])
                (const_int 1840 [0x730])) [0 sqlite3_api.27_87->str_appendf+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 sqlite3_api.27 ] [93])
        (nil)))
(insn 396 395 397 53 (set (reg:DI 0 ax [211])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 397 396 398 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fbdb453e390 *.LC29>)) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (nil))
(insn 398 397 399 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [211])) ./ext/misc/csv.c:603 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [211])
        (nil)))
(insn 399 398 400 53 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:603 91 {*movqi_internal}
     (nil))
(call_insn 400 399 401 53 (call (mem:QI (reg/f:DI 1 dx [orig:94 D.6629 ] [94]) [0 *_88 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:603 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:94 D.6629 ] [94])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:QI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 401 400 402 53 (set (reg/f:DI 0 ax [212])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (nil))
(insn 402 401 403 53 (set (reg/f:DI 0 ax [orig:95 sqlite3_api.28 ] [95])
        (mem/f/c:DI (reg/f:DI 0 ax [212]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [212])
        (nil)))
(insn 403 402 404 53 (set (reg/f:DI 0 ax [orig:96 D.6630 ] [96])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:95 sqlite3_api.28 ] [95])
                (const_int 1832 [0x728])) [0 sqlite3_api.28_89->str_finish+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:95 sqlite3_api.28 ] [95])
        (nil)))
(insn 404 403 405 53 (set (reg:DI 1 dx [213])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [0 pStr+0 S8 A64])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (nil))
(insn 405 404 406 53 (set (reg:DI 5 di)
        (reg:DI 1 dx [213])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [213])
        (nil)))
(call_insn 406 405 407 53 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:96 D.6630 ] [96]) [0 *_90 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:604 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.6630 ] [96])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 407 406 408 53 (set (reg/f:DI 0 ax [orig:97 D.6625 ] [97])
        (reg:DI 0 ax)) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 408 407 409 53 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+16 S8 A64])
        (reg/f:DI 0 ax [orig:97 D.6625 ] [97])) ./ext/misc/csv.c:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.6625 ] [97])
        (nil)))
(insn 409 408 410 53 (set (reg/f:DI 0 ax [orig:98 D.6625 ] [98])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:605 87 {*movdi_internal_rex64}
     (nil))
(insn 410 409 411 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:98 D.6625 ] [98])
            (const_int 0 [0]))) ./ext/misc/csv.c:605 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:98 D.6625 ] [98])
        (nil)))
(jump_insn 411 410 412 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) ./ext/misc/csv.c:605 612 {*jcc_1}
     (nil)
 -> 415)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 412 411 687 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 687 412 688 54 (set (pc)
        (label_ref 560)) ./ext/misc/csv.c:605 650 {jump}
     (nil)
 -> 560)
;;  succ:       71 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 688 687 415)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 415 688 416 55 125 "" [1 uses])
(note 416 415 689 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 689 416 690 55 (set (pc)
        (label_ref 444)) 650 {jump}
     (nil)
 -> 444)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 690 689 419)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 419 690 420 56 112 "" [1 uses])
(note 420 419 421 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 56 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:606 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 422 421 433 56 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) ./ext/misc/csv.c:606 612 {*jcc_1}
     (nil)
 -> 439)
;;  succ:       57 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              57 (DFS_BACK)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 99 100 101 214 215 216
(code_label 433 422 423 57 128 "" [1 uses])
(note 423 433 424 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 57 (parallel [
            (set (reg:DI 0 ax [214])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:608 274 {*adddi_1}
     (nil))
(insn 425 424 426 57 (set (reg:DI 5 di)
        (reg:DI 0 ax [214])) ./ext/misc/csv.c:608 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [214])
        (nil)))
(call_insn 426 425 427 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:608 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 427 426 428 57 (set (reg/f:DI 0 ax [215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:609 87 {*movdi_internal_rex64}
     (nil))
(insn 428 427 429 57 (set (reg:SI 0 ax [orig:99 D.6619 ] [99])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [215])
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])) ./ext/misc/csv.c:609 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [215])
        (nil)))
(insn 429 428 430 57 (parallel [
            (set (reg:SI 1 dx [orig:100 D.6619 ] [100])
                (plus:SI (reg:SI 0 ax [orig:99 D.6619 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:609 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:99 D.6619 ] [99])
        (nil)))
(insn 430 429 431 57 (set (reg/f:DI 0 ax [216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:609 87 {*movdi_internal_rex64}
     (nil))
(insn 431 430 432 57 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [216])
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 1 dx [orig:100 D.6619 ] [100])) ./ext/misc/csv.c:609 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [216])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:100 D.6619 ] [100])
            (nil))))
(insn 432 431 434 57 (set (reg:SI 0 ax [orig:101 D.6619 ] [101])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [0 sRdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:610 89 {*movsi_internal}
     (nil))
(insn 434 432 435 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 D.6619 ] [101])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:610 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:101 D.6619 ] [101])
        (nil)))
(jump_insn 435 434 691 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) ./ext/misc/csv.c:610 612 {*jcc_1}
     (nil)
 -> 433)
;;  succ:       57 (DFS_BACK)
;;              58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 691 435 692 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(jump_insn 692 691 693 58 (set (pc)
        (label_ref 444)) 650 {jump}
     (nil)
 -> 444)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 693 692 439)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 217 218
(code_label 439 693 440 59 127 "" [1 uses])
(note 440 439 441 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 59 (set (reg/f:DI 0 ax [217])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:612 87 {*movdi_internal_rex64}
     (nil))
(insn 442 441 443 59 (set (reg:SI 1 dx [218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [0 nCol+0 S4 A32])) ./ext/misc/csv.c:612 89 {*movsi_internal}
     (nil))
(insn 443 442 444 59 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [217])
                (const_int 48 [0x30])) [0 pNew_58->nCol+0 S4 A64])
        (reg:SI 1 dx [218])) ./ext/misc/csv.c:612 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [218])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [217])
            (nil))))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 [100.0%] 
;;              59 (FALLTHRU)
;;              58 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 103 219 220
(code_label 444 443 445 60 126 "" [2 uses])
(note 445 444 446 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 60 (set (reg/f:DI 1 dx [orig:102 D.6625 ] [102])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue+0 S8 A64])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 447 446 448 60 (set (reg/f:DI 0 ax [219])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 448 447 449 60 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [219])
                (const_int 24 [0x18])) [0 pNew_58->zFilename+0 S8 A64])
        (reg/f:DI 1 dx [orig:102 D.6625 ] [102])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [219])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:102 D.6625 ] [102])
            (nil))))
(insn 449 448 450 60 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:614 87 {*movdi_internal_rex64}
     (nil))
(insn 450 449 451 60 (set (reg/f:DI 1 dx [orig:103 D.6625 ] [103])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [0 azPValue+8 S8 A64])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 451 450 452 60 (set (reg/f:DI 0 ax [220])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 452 451 453 60 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [220])
                (const_int 32 [0x20])) [0 pNew_58->zData+0 S8 A64])
        (reg/f:DI 1 dx [orig:103 D.6625 ] [103])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [220])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:103 D.6625 ] [103])
            (nil))))
(insn 453 452 454 60 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [0 azPValue+8 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:615 87 {*movdi_internal_rex64}
     (nil))
(insn 454 453 455 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -392 [0xfffffffffffffe78])) [0 bHeader+0 S4 A32])
            (const_int 1 [0x1]))) ./ext/misc/csv.c:619 7 {*cmpsi_1}
     (nil))
(jump_insn 455 454 456 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 461)
            (pc))) ./ext/misc/csv.c:619 612 {*jcc_1}
     (nil)
 -> 461)
;;  succ:       61 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 221
(note 456 455 457 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 61 (set (reg/f:DI 0 ax [221])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:620 87 {*movdi_internal_rex64}
     (nil))
(insn 458 457 694 61 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [221])
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [221])
        (nil)))
(jump_insn 694 458 695 61 (set (pc)
        (label_ref 492)) 650 {jump}
     (nil)
 -> 492)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 695 694 461)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 222
(code_label 461 695 462 62 129 "" [1 uses])
(note 462 461 463 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 62 (set (reg/f:DI 0 ax [222])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:621 87 {*movdi_internal_rex64}
     (nil))
(insn 464 463 465 62 (set (reg/f:DI 0 ax [orig:104 D.6625 ] [104])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [222])
                (const_int 32 [0x20])) [0 pNew_58->zData+0 S8 A64])) ./ext/misc/csv.c:621 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [222])
        (nil)))
(insn 465 464 466 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:104 D.6625 ] [104])
            (const_int 0 [0]))) ./ext/misc/csv.c:621 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:104 D.6625 ] [104])
        (nil)))
(jump_insn 466 465 467 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) ./ext/misc/csv.c:621 612 {*jcc_1}
     (nil)
 -> 475)
;;  succ:       63 (FALLTHRU)
;;              64
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 105 106 107 223
(note 467 466 468 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 63 (set (reg:DI 0 ax [orig:105 D.6620 ] [105])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [0 sRdr.iIn+0 S8 A64])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (nil))
(insn 469 468 470 63 (set (reg:SI 0 ax [orig:106 D.6619 ] [106])
        (reg:SI 0 ax [orig:105 D.6620 ] [105])) ./ext/misc/csv.c:622 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:105 D.6620 ] [105])
        (nil)))
(insn 470 469 471 63 (set (reg:DI 1 dx [orig:107 D.6631 ] [107])
        (sign_extend:DI (reg:SI 0 ax [orig:106 D.6619 ] [106]))) ./ext/misc/csv.c:622 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:106 D.6619 ] [106])
        (nil)))
(insn 471 470 472 63 (set (reg/f:DI 0 ax [223])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (nil))
(insn 472 471 696 63 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [223])
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (reg:DI 1 dx [orig:107 D.6631 ] [107])) ./ext/misc/csv.c:622 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [223])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:107 D.6631 ] [107])
            (nil))))
(jump_insn 696 472 697 63 (set (pc)
        (label_ref 492)) 650 {jump}
     (nil)
 -> 492)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 697 696 475)
;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 108 109 110 111 112 113 114 115 116 117 118 224
(code_label 475 697 476 64 131 "" [1 uses])
(note 476 475 477 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 64 (set (reg/f:DI 0 ax [orig:108 D.6632 ] [108])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -288 [0xfffffffffffffee0])) [0 sRdr.in+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 478 477 479 64 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:108 D.6632 ] [108])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:108 D.6632 ] [108])
        (nil)))
(call_insn 479 478 480 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7fbdb47c5a00 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:624 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 480 479 481 64 (set (reg:DI 0 ax [orig:109 D.6631 ] [109])
        (reg:DI 0 ax)) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 481 480 482 64 (set (reg:SI 1 dx [orig:110 D.6633 ] [110])
        (reg:SI 0 ax [orig:109 D.6631 ] [109])) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:109 D.6631 ] [109])
        (nil)))
(insn 482 481 483 64 (set (reg:DI 0 ax [orig:111 D.6620 ] [111])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [0 sRdr.nIn+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 483 482 484 64 (set (reg:SI 0 ax [orig:112 D.6633 ] [112])
        (reg:SI 0 ax [orig:111 D.6620 ] [111])) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:111 D.6620 ] [111])
        (nil)))
(insn 484 483 485 64 (parallel [
            (set (reg:SI 1 dx [orig:113 D.6633 ] [113])
                (minus:SI (reg:SI 1 dx [orig:110 D.6633 ] [110])
                    (reg:SI 0 ax [orig:112 D.6633 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:624 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:112 D.6633 ] [112])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:110 D.6633 ] [110])
            (nil))))
(insn 485 484 486 64 (set (reg:DI 0 ax [orig:114 D.6620 ] [114])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [0 sRdr.iIn+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 486 485 487 64 (set (reg:SI 0 ax [orig:115 D.6633 ] [115])
        (reg:SI 0 ax [orig:114 D.6620 ] [114])) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:114 D.6620 ] [114])
        (nil)))
(insn 487 486 488 64 (parallel [
            (set (reg:SI 0 ax [orig:116 D.6633 ] [116])
                (plus:SI (reg:SI 0 ax [orig:115 D.6633 ] [115])
                    (reg:SI 1 dx [orig:113 D.6633 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:624 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:115 D.6633 ] [115])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:113 D.6633 ] [113])
            (nil))))
(insn 488 487 489 64 (set (reg:SI 0 ax [orig:117 D.6619 ] [117])
        (reg:SI 0 ax [orig:116 D.6633 ] [116])) ./ext/misc/csv.c:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:116 D.6633 ] [116])
        (nil)))
(insn 489 488 490 64 (set (reg:DI 1 dx [orig:118 D.6631 ] [118])
        (sign_extend:DI (reg:SI 0 ax [orig:117 D.6619 ] [117]))) ./ext/misc/csv.c:624 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:117 D.6619 ] [117])
        (nil)))
(insn 490 489 491 64 (set (reg/f:DI 0 ax [224])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (nil))
(insn 491 490 492 64 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [224])
                (const_int 40 [0x28])) [0 pNew_58->iStart+0 S8 A64])
        (reg:DI 1 dx [orig:118 D.6631 ] [118])) ./ext/misc/csv.c:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [224])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:118 D.6631 ] [118])
            (nil))))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;;              61 [100.0%] 
;;              63 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 119 120 121 225 226 227 228
(code_label 492 491 493 65 130 "" [2 uses])
(note 493 492 494 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 65 (parallel [
            (set (reg:DI 0 ax [225])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:626 274 {*adddi_1}
     (nil))
(insn 495 494 496 65 (set (reg:DI 5 di)
        (reg:DI 0 ax [225])) ./ext/misc/csv.c:626 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [225])
        (nil)))
(call_insn 496 495 497 65 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:626 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 497 496 498 65 (set (reg/f:DI 0 ax [226])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 498 497 499 65 (set (reg/f:DI 0 ax [orig:119 sqlite3_api.29 ] [119])
        (mem/f/c:DI (reg/f:DI 0 ax [226]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [226])
        (nil)))
(insn 499 498 500 65 (set (reg/f:DI 0 ax [orig:120 D.6634 ] [120])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:119 sqlite3_api.29 ] [119])
                (const_int 400 [0x190])) [0 sqlite3_api.29_113->declare_vtab+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:119 sqlite3_api.29 ] [119])
        (nil)))
(insn 500 499 501 65 (set (reg/f:DI 2 cx [orig:121 D.6625 ] [121])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 501 500 502 65 (set (reg:DI 1 dx [227])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -408 [0xfffffffffffffe68])) [0 db+0 S8 A64])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (nil))
(insn 502 501 503 65 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:121 D.6625 ] [121])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:121 D.6625 ] [121])
        (nil)))
(insn 503 502 504 65 (set (reg:DI 5 di)
        (reg:DI 1 dx [227])) ./ext/misc/csv.c:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [227])
        (nil)))
(call_insn 504 503 505 65 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:120 D.6634 ] [120]) [0 *_114 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:627 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:120 D.6634 ] [120])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 505 504 506 65 (set (reg:SI 0 ax [228])
        (reg:SI 0 ax)) ./ext/misc/csv.c:627 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 506 505 507 65 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
        (reg:SI 0 ax [228])) ./ext/misc/csv.c:627 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [228])
        (nil)))
(insn 507 506 508 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:628 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 508 507 509 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) ./ext/misc/csv.c:628 612 {*jcc_1}
     (nil)
 -> 527)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 122 123 124 125 229 230 231
(note 509 508 510 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 66 (set (reg/f:DI 0 ax [229])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 511 510 512 66 (set (reg/f:DI 0 ax [orig:122 sqlite3_api.30 ] [122])
        (mem/f/c:DI (reg/f:DI 0 ax [229]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [229])
        (nil)))
(insn 512 511 513 66 (set (reg/f:DI 0 ax [orig:123 D.6635 ] [123])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:122 sqlite3_api.30 ] [122])
                (const_int 424 [0x1a8])) [0 sqlite3_api.30_118->errmsg+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:122 sqlite3_api.30 ] [122])
        (nil)))
(insn 513 512 514 66 (set (reg:DI 1 dx [230])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -408 [0xfffffffffffffe68])) [0 db+0 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 514 513 515 66 (set (reg:DI 5 di)
        (reg:DI 1 dx [230])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [230])
        (nil)))
(call_insn 515 514 516 66 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:123 D.6635 ] [123]) [0 *_119 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:629 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:123 D.6635 ] [123])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 516 515 517 66 (set (reg/f:DI 2 cx [orig:124 D.6623 ] [124])
        (reg:DI 0 ax)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 517 516 518 66 (set (reg/f:DI 1 dx [orig:125 D.6625 ] [125])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [0 azPValue+16 S8 A64])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 518 517 519 66 (parallel [
            (set (reg:DI 0 ax [231])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:629 274 {*adddi_1}
     (nil))
(insn 519 518 520 66 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:124 D.6623 ] [124])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:124 D.6623 ] [124])
        (nil)))
(insn 520 519 521 66 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:125 D.6625 ] [125])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:125 D.6625 ] [125])
        (nil)))
(insn 521 520 522 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7fbdb453e428 *.LC30>)) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (nil))
(insn 522 521 523 66 (set (reg:DI 5 di)
        (reg:DI 0 ax [231])) ./ext/misc/csv.c:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [231])
        (nil)))
(insn 523 522 524 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:629 91 {*movqi_internal}
     (nil))
(call_insn 524 523 698 66 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:629 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg:QI 0 ax)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 698 524 699 66 (set (pc)
        (label_ref 568)) ./ext/misc/csv.c:630 650 {jump}
     (nil)
 -> 568)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 699 698 527)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 527 699 528 67 132 "" [1 uses])
(note 528 527 529 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 700 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:632 89 {*movsi_internal}
     (nil))
(jump_insn 700 529 701 67 (set (pc)
        (label_ref 542)) ./ext/misc/csv.c:632 650 {jump}
     (nil)
 -> 542)
;;  succ:       69 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 701 700 545)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 127 128 129 232 233 234
(code_label 545 701 532 68 134 "" [1 uses])
(note 532 545 533 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 68 (set (reg/f:DI 0 ax [232])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (nil))
(insn 534 533 535 68 (set (reg/f:DI 0 ax [orig:127 sqlite3_api.31 ] [127])
        (mem/f/c:DI (reg/f:DI 0 ax [232]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [232])
        (nil)))
(insn 535 534 536 68 (set (reg/f:DI 0 ax [orig:128 D.6636 ] [128])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:127 sqlite3_api.31 ] [127])
                (const_int 464 [0x1d0])) [0 sqlite3_api.31_124->free+0 S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:127 sqlite3_api.31 ] [127])
        (nil)))
(insn 536 535 537 68 (set (reg:SI 1 dx [234])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:633 89 {*movsi_internal}
     (nil))
(insn 537 536 538 68 (set (reg:DI 1 dx [233])
        (sign_extend:DI (reg:SI 1 dx [234]))) ./ext/misc/csv.c:633 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [234])
        (nil)))
(insn 538 537 539 68 (set (reg/f:DI 1 dx [orig:129 D.6625 ] [129])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [233])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue S8 A64])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [233])
        (nil)))
(insn 539 538 540 68 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:129 D.6625 ] [129])) ./ext/misc/csv.c:633 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:129 D.6625 ] [129])
        (nil)))
(call_insn 540 539 541 68 (call (mem:QI (reg/f:DI 0 ax [orig:128 D.6636 ] [128]) [0 *_125 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:633 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:128 D.6636 ] [128])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 541 540 542 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:632 273 {*addsi_1}
     (nil))
;;  succ:       69 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU,DFS_BACK)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126
(code_label 542 541 543 69 133 "" [1 uses])
(note 543 542 544 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 546 69 (set (reg:SI 0 ax [orig:126 i.32 ] [126])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:632 89 {*movsi_internal}
     (nil))
(insn 546 544 547 69 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:126 i.32 ] [126])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:632 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:126 i.32 ] [126])
        (nil)))
(jump_insn 547 546 548 69 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 545)
            (pc))) ./ext/misc/csv.c:632 612 {*jcc_1}
     (nil)
 -> 545)
;;  succ:       68
;;              70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 130 131 235 236
(note 548 547 549 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 70 (set (reg/f:DI 0 ax [235])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (nil))
(insn 550 549 551 70 (set (reg/f:DI 0 ax [orig:130 sqlite3_api.33 ] [130])
        (mem/f/c:DI (reg/f:DI 0 ax [235]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [235])
        (nil)))
(insn 551 550 552 70 (set (reg/f:DI 1 dx [orig:131 D.6637 ] [131])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:130 sqlite3_api.33 ] [130])
                (const_int 1416 [0x588])) [0 sqlite3_api.33_128->vtab_config+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:130 sqlite3_api.33 ] [130])
        (nil)))
(insn 552 551 553 70 (set (reg:DI 0 ax [236])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -408 [0xfffffffffffffe68])) [0 db+0 S8 A64])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (nil))
(insn 553 552 554 70 (set (reg:SI 4 si)
        (const_int 3 [0x3])) ./ext/misc/csv.c:643 89 {*movsi_internal}
     (nil))
(insn 554 553 555 70 (set (reg:DI 5 di)
        (reg:DI 0 ax [236])) ./ext/misc/csv.c:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [236])
        (nil)))
(insn 555 554 556 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:643 91 {*movqi_internal}
     (nil))
(call_insn 556 555 557 70 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:131 D.6637 ] [131]) [0 *_129 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:643 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:131 D.6637 ] [131])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 557 556 702 70 (set (reg:SI 0 ax [orig:59 D.6619 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:644 89 {*movsi_internal}
     (nil))
(jump_insn 702 557 703 70 (set (pc)
        (label_ref 635)) ./ext/misc/csv.c:644 650 {jump}
     (nil)
 -> 635)
;;  succ:       82 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 703 702 560)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%] 
;;              54 [100.0%] 
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 237
(code_label 560 703 561 71 111 ("csvtab_connect_oom") [2 uses])
(note 561 560 562 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
        (const_int 7 [0x7])) ./ext/misc/csv.c:647 89 {*movsi_internal}
     (nil))
(insn 563 562 564 71 (parallel [
            (set (reg:DI 0 ax [237])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:648 274 {*adddi_1}
     (nil))
(insn 564 563 565 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:648 87 {*movdi_internal_rex64}
     (nil))
(insn 565 564 566 71 (set (reg:DI 5 di)
        (reg:DI 0 ax [237])) ./ext/misc/csv.c:648 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [237])
        (nil)))
(insn 566 565 567 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:648 91 {*movqi_internal}
     (nil))
(call_insn 567 566 568 71 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:648 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              10 [100.0%] 
;;              13 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              20 [100.0%] 
;;              24 [100.0%] 
;;              28 [100.0%] 
;;              66 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 568 567 569 72 101 ("csvtab_connect_error") [8 uses])
(note 569 568 570 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:651 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 571 570 572 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 576)
            (pc))) ./ext/misc/csv.c:651 612 {*jcc_1}
     (nil)
 -> 576)
;;  succ:       73 (FALLTHRU)
;;              74
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 132
(note 572 571 573 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 73 (set (reg/f:DI 0 ax [orig:132 D.6638 ] [132])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [0 pNew+0 S8 A64])) ./ext/misc/csv.c:651 87 {*movdi_internal_rex64}
     (nil))
(insn 574 573 575 73 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:132 D.6638 ] [132])) ./ext/misc/csv.c:651 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:132 D.6638 ] [132])
        (nil)))
(call_insn 575 574 576 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabDisconnect") [flags 0x3]  <function_decl 0x7fbdb47df600 csvtabDisconnect>) [0 csvtabDisconnect S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:651 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;;              73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 576 575 577 74 136 "" [1 uses])
(note 577 576 578 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 704 74 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:652 89 {*movsi_internal}
     (nil))
(jump_insn 704 578 705 74 (set (pc)
        (label_ref 591)) ./ext/misc/csv.c:652 650 {jump}
     (nil)
 -> 591)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 705 704 594)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 134 135 136 238 239 240
(code_label 594 705 581 75 138 "" [1 uses])
(note 581 594 582 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 75 (set (reg/f:DI 0 ax [238])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (nil))
(insn 583 582 584 75 (set (reg/f:DI 0 ax [orig:134 sqlite3_api.34 ] [134])
        (mem/f/c:DI (reg/f:DI 0 ax [238]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [238])
        (nil)))
(insn 584 583 585 75 (set (reg/f:DI 0 ax [orig:135 D.6636 ] [135])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:134 sqlite3_api.34 ] [134])
                (const_int 464 [0x1d0])) [0 sqlite3_api.34_135->free+0 S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:134 sqlite3_api.34 ] [134])
        (nil)))
(insn 585 584 586 75 (set (reg:SI 1 dx [240])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:653 89 {*movsi_internal}
     (nil))
(insn 586 585 587 75 (set (reg:DI 1 dx [239])
        (sign_extend:DI (reg:SI 1 dx [240]))) ./ext/misc/csv.c:653 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [240])
        (nil)))
(insn 587 586 588 75 (set (reg/f:DI 1 dx [orig:136 D.6625 ] [136])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [239])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -320 [0xfffffffffffffec0])) [0 azPValue S8 A64])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [239])
        (nil)))
(insn 588 587 589 75 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:136 D.6625 ] [136])) ./ext/misc/csv.c:653 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:136 D.6625 ] [136])
        (nil)))
(call_insn 589 588 590 75 (call (mem:QI (reg/f:DI 0 ax [orig:135 D.6636 ] [135]) [0 *_136 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:653 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:135 D.6636 ] [135])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 590 589 591 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:652 273 {*addsi_1}
     (nil))
;;  succ:       76 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU,DFS_BACK)
;;              74 [100.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133
(code_label 591 590 592 76 137 "" [1 uses])
(note 592 591 593 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 595 76 (set (reg:SI 0 ax [orig:133 i.35 ] [133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [0 i+0 S4 A32])) ./ext/misc/csv.c:652 89 {*movsi_internal}
     (nil))
(insn 595 593 596 76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:133 i.35 ] [133])
            (const_int 2 [0x2]))) ./ext/misc/csv.c:652 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:133 i.35 ] [133])
        (nil)))
(jump_insn 596 595 597 76 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 594)
            (pc))) ./ext/misc/csv.c:652 612 {*jcc_1}
     (nil)
 -> 594)
;;  succ:       75
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137
(note 597 596 598 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 77 (set (reg:QI 0 ax [orig:137 D.6624 ] [137])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [0 sRdr.zErr+0 S1 A64])) ./ext/misc/csv.c:655 91 {*movqi_internal}
     (nil))
(insn 599 598 600 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:137 D.6624 ] [137])
            (const_int 0 [0]))) ./ext/misc/csv.c:655 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:137 D.6624 ] [137])
        (nil)))
(jump_insn 600 599 601 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 621)
            (pc))) ./ext/misc/csv.c:655 612 {*jcc_1}
     (nil)
 -> 621)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 138 139 140 141 142 143 241 242 243 244 245 246
(note 601 600 602 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 78 (set (reg/f:DI 0 ax [241])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (nil))
(insn 603 602 604 78 (set (reg/f:DI 0 ax [orig:138 sqlite3_api.36 ] [138])
        (mem/f/c:DI (reg/f:DI 0 ax [241]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [241])
        (nil)))
(insn 604 603 605 78 (set (reg/f:DI 0 ax [orig:139 D.6636 ] [139])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:138 sqlite3_api.36 ] [138])
                (const_int 464 [0x1d0])) [0 sqlite3_api.36_140->free+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:138 sqlite3_api.36 ] [138])
        (nil)))
(insn 605 604 606 78 (set (reg/f:DI 1 dx [242])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (nil))
(insn 606 605 607 78 (set (reg/f:DI 1 dx [orig:140 D.6625 ] [140])
        (mem/f:DI (reg/f:DI 1 dx [242]) [0 *pzErr_142(D)+0 S8 A64])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [242])
        (nil)))
(insn 607 606 608 78 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:140 D.6625 ] [140])) ./ext/misc/csv.c:656 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:140 D.6625 ] [140])
        (nil)))
(call_insn 608 607 609 78 (call (mem:QI (reg/f:DI 0 ax [orig:139 D.6636 ] [139]) [0 *_141 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:656 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:139 D.6636 ] [139])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 609 608 610 78 (set (reg/f:DI 0 ax [243])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 610 609 611 78 (set (reg/f:DI 0 ax [orig:141 sqlite3_api.37 ] [141])
        (mem/f/c:DI (reg/f:DI 0 ax [243]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [243])
        (nil)))
(insn 611 610 612 78 (set (reg/f:DI 1 dx [orig:142 D.6639 ] [142])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:141 sqlite3_api.37 ] [141])
                (const_int 552 [0x228])) [0 sqlite3_api.37_144->mprintf+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:141 sqlite3_api.37 ] [141])
        (nil)))
(insn 612 611 613 78 (parallel [
            (set (reg:DI 0 ax [244])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:657 274 {*adddi_1}
     (nil))
(insn 613 612 614 78 (parallel [
            (set (reg:DI 0 ax [245])
                (plus:DI (reg:DI 0 ax [244])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:657 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [244])
        (nil)))
(insn 614 613 615 78 (set (reg:DI 4 si)
        (reg:DI 0 ax [245])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [245])
        (nil)))
(insn 615 614 616 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fbdb44fd000 *.LC9>)) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 616 615 617 78 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:657 91 {*movqi_internal}
     (nil))
(call_insn 617 616 618 78 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 1 dx [orig:142 D.6639 ] [142]) [0 *_145 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:657 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:142 D.6639 ] [142])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 618 617 619 78 (set (reg/f:DI 0 ax [orig:143 D.6625 ] [143])
        (reg:DI 0 ax)) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 619 618 620 78 (set (reg/f:DI 1 dx [246])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (nil))
(insn 620 619 621 78 (set (mem/f:DI (reg/f:DI 1 dx [246]) [0 *pzErr_142(D)+0 S8 A64])
        (reg/f:DI 0 ax [orig:143 D.6625 ] [143])) ./ext/misc/csv.c:657 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [246])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:143 D.6625 ] [143])
            (nil))))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77
;;              78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 247
(code_label 621 620 622 79 139 "" [1 uses])
(note 622 621 623 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 79 (parallel [
            (set (reg:DI 0 ax [247])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:659 274 {*adddi_1}
     (nil))
(insn 624 623 625 79 (set (reg:DI 5 di)
        (reg:DI 0 ax [247])) ./ext/misc/csv.c:659 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [247])
        (nil)))
(call_insn 625 624 626 79 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:659 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 626 625 627 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:660 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 627 626 628 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) ./ext/misc/csv.c:660 612 {*jcc_1}
     (nil)
 -> 630)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 628 627 629 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 630 80 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])
        (const_int 1 [0x1])) ./ext/misc/csv.c:660 89 {*movsi_internal}
     (nil))
;;  succ:       81 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 630 629 631 81 140 "" [1 uses])
(note 631 630 632 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 635 81 (set (reg:SI 0 ax [orig:59 D.6619 ] [59])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -388 [0xfffffffffffffe7c])) [0 rc+0 S4 A32])) ./ext/misc/csv.c:661 89 {*movsi_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              70 [100.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 17 [flags] 144
(code_label 635 632 636 82 141 "" [1 uses])
(note 636 635 637 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 637 636 641 82 (set (reg:SI 0 ax [orig:144 <retval> ] [144])
        (reg:SI 0 ax [orig:59 D.6619 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6619 ] [59])
        (nil)))
(insn 641 637 645 82 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:144 <retval> ] [144])) ./ext/misc/csv.c:662 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:144 <retval> ] [144])
        (nil)))
(insn 645 641 646 82 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.6640+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [251]))
        ]) ./ext/misc/csv.c:662 970 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 3 bx [251])
        (nil)))
(jump_insn 646 645 653 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) ./ext/misc/csv.c:662 612 {*jcc_1}
     (nil)
 -> 649)
;;  succ:       84
;;              83 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 653 646 647 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(call_insn 647 653 648 83 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fbdb4515b00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:662 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 648 647 649)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 649 648 654 84 142 "" [1 uses])
(note 654 649 650 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 650 654 0 84 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:662 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabCursorRowReset (csvtabCursorRowReset, funcdef_no=21, decl_uid=5733, cgraph_uid=21)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 39:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) rm {*cmpsi_1}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 43
changing reg in insn 45
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 24
changing reg in insn 17
changing reg in insn 21
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 30
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 37
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 42
changing reg in insn 43
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 24.
deleting insn with uid = 24.


csvtabCursorRowReset

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={15d,13u} r1={12d,10u} r2={5d,3u} r4={2d} r5={3d,2u} r6={1d,19u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={9d,1u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 152{97d,55u,0e} in 37{36 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 75 76
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])
        (reg:DI 5 di [ pCur ])) ./ext/misc/csv.c:667 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pCur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [76])
        (mem/f/j:DI (reg/f:DI 0 ax [75]) [0 pCur_2(D)->base.pVtab+0 S8 A64])) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 0 ax [76])) ./ext/misc/csv.c:668 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 9 8 50 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:670 89 {*movsi_internal}
     (nil))
(jump_insn 50 9 51 2 (set (pc)
        (label_ref 40)) ./ext/misc/csv.c:670 650 {jump}
     (nil)
 -> 40)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 44)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 77 78 79 80 81 82 83
(code_label 44 51 12 3 145 "" [1 uses])
(note 12 44 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [77])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:60 sqlite3_api.38 ] [60])
        (mem/f/c:DI (reg/f:DI 0 ax [77]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 0 ax [orig:61 D.6658 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:60 sqlite3_api.38 ] [60])
                (const_int 464 [0x1d0])) [0 sqlite3_api.38_6->free+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 sqlite3_api.38 ] [60])
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 1 dx [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg/f:DI 1 dx [orig:62 D.6659 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [78])
                (const_int 272 [0x110])) [0 pCur_2(D)->azVal+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [78])
        (nil)))
(insn 18 17 19 3 (set (reg:SI 2 cx [79])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:671 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 2 cx [orig:63 D.6660 ] [63])
        (sign_extend:DI (reg:SI 2 cx [79]))) ./ext/misc/csv.c:671 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [79])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 2 cx [orig:64 D.6660 ] [64])
                (ashift:DI (reg:DI 2 cx [orig:63 D.6660 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:671 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:63 D.6660 ] [63])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (parallel [
            (set (reg/f:DI 1 dx [orig:65 D.6659 ] [65])
                (plus:DI (reg/f:DI 1 dx [orig:62 D.6659 ] [62])
                    (reg:DI 2 cx [orig:64 D.6660 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:671 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:64 D.6660 ] [64])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:62 D.6659 ] [62])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 22 21 23 3 (set (reg/f:DI 1 dx [orig:66 D.6661 ] [66])
        (mem/f:DI (reg/f:DI 1 dx [orig:65 D.6659 ] [65]) [0 *_11+0 S8 A64])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:65 D.6659 ] [65])
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:66 D.6661 ] [66])) ./ext/misc/csv.c:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:66 D.6661 ] [66])
        (nil)))
(call_insn 24 23 25 3 (call (mem:QI (reg/f:DI 0 ax [orig:61 D.6658 ] [61]) [0 *_7 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:671 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6658 ] [61])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 3 (set (reg/f:DI 0 ax [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg/f:DI 0 ax [orig:67 D.6659 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [80])
                (const_int 272 [0x110])) [0 pCur_2(D)->azVal+0 S8 A64])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (nil)))
(insn 27 26 28 3 (set (reg:SI 1 dx [81])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:672 89 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 1 dx [orig:68 D.6660 ] [68])
        (sign_extend:DI (reg:SI 1 dx [81]))) ./ext/misc/csv.c:672 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [81])
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (reg:DI 1 dx [orig:69 D.6660 ] [69])
                (ashift:DI (reg:DI 1 dx [orig:68 D.6660 ] [68])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:672 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:68 D.6660 ] [68])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 3 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6659 ] [70])
                (plus:DI (reg/f:DI 0 ax [orig:67 D.6659 ] [67])
                    (reg:DI 1 dx [orig:69 D.6660 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:672 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.6660 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6659 ] [67])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 31 30 32 3 (set (mem/f:DI (reg/f:DI 0 ax [orig:70 D.6659 ] [70]) [0 *_16+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:672 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6659 ] [70])
        (nil)))
(insn 32 31 33 3 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:673 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 0 ax [orig:71 D.6662 ] [71])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [82])
                (const_int 280 [0x118])) [0 pCur_2(D)->aLen+0 S8 A64])) ./ext/misc/csv.c:673 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (nil)))
(insn 34 33 35 3 (set (reg:SI 1 dx [83])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) ./ext/misc/csv.c:673 89 {*movsi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 1 dx [orig:72 D.6660 ] [72])
        (sign_extend:DI (reg:SI 1 dx [83]))) ./ext/misc/csv.c:673 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [83])
        (nil)))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 1 dx [orig:73 D.6660 ] [73])
                (ashift:DI (reg:DI 1 dx [orig:72 D.6660 ] [72])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:673 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.6660 ] [72])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 3 (parallel [
            (set (reg/f:DI 0 ax [orig:74 D.6662 ] [74])
                (plus:DI (reg/f:DI 0 ax [orig:71 D.6662 ] [71])
                    (reg:DI 1 dx [orig:73 D.6660 ] [73])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:673 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:73 D.6660 ] [73])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:71 D.6662 ] [71])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 3 (set (mem:SI (reg/f:DI 0 ax [orig:74 D.6662 ] [74]) [0 *_20+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:673 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.6662 ] [74])
        (nil)))
(insn 39 38 40 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:670 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 84
(code_label 40 39 41 4 144 "" [1 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:670 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 45 4 (set (reg:SI 0 ax [orig:59 D.6657 ] [59])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [84])
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:670 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 45 43 46 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.6657 ] [59])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:670 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6657 ] [59])
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) ./ext/misc/csv.c:670 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 47 46 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabCreate (csvtabCreate, funcdef_no=22, decl_uid=5578, cgraph_uid=22)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 24
changing reg in insn 27
changing reg in insn 27
changing reg in insn 31
changing reg in insn 11
changing reg in insn 17
changing reg in insn 12
changing reg in insn 18
changing reg in insn 13
changing reg in insn 19
changing reg in insn 14
changing reg in insn 20
changing reg in insn 15
changing reg in insn 21
changing reg in insn 16
changing reg in insn 22
starting the processing of deferred insns
ending the processing of deferred insns


csvtabCreate

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 37[r8] 38[r9]
;;  ref usage 	r0={6d,6u} r1={4d,3u} r2={4d,3u} r4={4d,3u} r5={4d,3u} r6={1d,14u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={4d,3u} r38={3d,2u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 118{77d,41u,0e} in 23{22 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pAux+0 S8 A64])
        (reg:DI 4 si [ pAux ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pAux ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])
        (reg:SI 1 dx [ argc ])) ./ext/misc/csv.c:687 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ argc ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])
        (reg:DI 2 cx [ argv ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ argv ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 ppVtab+0 S8 A64])
        (reg:DI 37 r8 [ ppVtab ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ ppVtab ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzErr+0 S8 A64])
        (reg:DI 38 r9 [ pzErr ])) ./ext/misc/csv.c:687 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ pzErr ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:DI 37 r8 [61])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pzErr+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di [62])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 ppVtab+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx [64])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pAux+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 db+0 S8 A64])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [61])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [61])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 37 r8)
        (reg:DI 5 di [62])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [62])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg:DI 2 cx [63])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [63])
        (nil)))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (reg:SI 1 dx [64])) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [64])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 4 si [65])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [65])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [66])) ./ext/misc/csv.c:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [66])
        (nil)))
(call_insn 23 22 24 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabConnect") [flags 0x3]  <function_decl 0x7fbdb47df400 csvtabConnect>) [0 csvtabConnect S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:688 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(insn 24 23 27 2 (set (reg:SI 0 ax [orig:59 D.6663 ] [59])
        (reg:SI 0 ax)) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg:SI 0 ax [orig:60 <retval> ] [60])
        (reg:SI 0 ax [orig:59 D.6663 ] [59])) ./ext/misc/csv.c:688 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6663 ] [59])
        (nil)))
(insn 31 27 34 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:60 <retval> ] [60])) ./ext/misc/csv.c:689 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 <retval> ] [60])
        (nil)))
(insn 34 31 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:689 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabClose (csvtabClose, funcdef_no=23, decl_uid=5595, cgraph_uid=23)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 12:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 24
changing reg in insn 28
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
rescanning insn with uid = 20.
deleting insn with uid = 20.


csvtabClose

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={14d,11u} r1={5d,1u} r2={4d} r4={4d} r5={7d,4u} r6={1d,8u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d} r18={3d} r19={3d} r20={1d,1u,1e} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 196{165d,30u,1e} in 20{17 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:694 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:695 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [64])) ./ext/misc/csv.c:695 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:696 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [65])) ./ext/misc/csv.c:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [65])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("csvtabCursorRowReset") [flags 0x3]  <function_decl 0x7fbdb43f9200 csvtabCursorRowReset>) [0 csvtabCursorRowReset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:696 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:697 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 0 ax [orig:59 D.6664 ] [59])
                (plus:DI (reg/f:DI 0 ax [66])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:697 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.6664 ] [59])) ./ext/misc/csv.c:697 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6664 ] [59])
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("csv_reader_reset") [flags 0x3]  <function_decl 0x7fbdb47d2100 csv_reader_reset>) [0 csv_reader_reset S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:697 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [67])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [orig:60 sqlite3_api.39 ] [60])
        (mem/f/c:DI (reg/f:DI 0 ax [67]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [orig:61 D.6665 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:60 sqlite3_api.39 ] [60])
                (const_int 464 [0x1d0])) [0 sqlite3_api.39_4->free+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 sqlite3_api.39 ] [60])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 1 dx [68])) ./ext/misc/csv.c:698 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [68])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (reg/f:DI 0 ax [orig:61 D.6665 ] [61]) [0 *_5 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:698 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6665 ] [61])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 20 24 2 (set (reg:SI 0 ax [orig:62 D.6666 ] [62])
        (const_int 0 [0])) ./ext/misc/csv.c:699 89 {*movsi_internal}
     (nil))
(insn 24 21 28 2 (set (reg:SI 0 ax [orig:63 <retval> ] [63])
        (reg:SI 0 ax [orig:62 D.6666 ] [62])) ./ext/misc/csv.c:699 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.6666 ] [62])
        (nil)))
(insn 28 24 31 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:63 <retval> ] [63])) ./ext/misc/csv.c:700 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 <retval> ] [63])
        (nil)))
(insn 31 28 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:700 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabOpen (csvtabOpen, funcdef_no=24, decl_uid=5593, cgraph_uid=24)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 18:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 43:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 63:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) r {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 83
changing reg in insn 78
changing reg in insn 31
changing reg in insn 86
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 14
changing reg in insn 12
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 25
changing reg in insn 43
changing reg in insn 45
changing reg in insn 47
changing reg in insn 52
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 55
changing reg in insn 57
changing reg in insn 59
changing reg in insn 64
changing reg in insn 61
changing reg in insn 65
changing reg in insn 63
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 73
changing reg in insn 75
changing reg in insn 86
changing reg in insn 90
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 16
changing reg in insn 14
changing reg in insn 13
changing reg in insn 12
changing reg in insn 17
changing reg in insn 15
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 36
changing reg in insn 38
changing reg in insn 37
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 76
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 25.
deleting insn with uid = 25.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 77.


csvtabOpen

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={40d,36u} r1={16d,12u,1e} r2={7d,2u} r4={8d,4u} r5={9d,5u} r6={1d,30u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={15d,2u} r18={4d} r19={4d} r20={1d,1u,3e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 367{260d,103u,4e} in 74{70 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 62 63 64 78 79 80 81 82 83 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])
        (reg:DI 5 di [ p ])) ./ext/misc/csv.c:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 ppCursor+0 S8 A64])
        (reg:DI 4 si [ ppCursor ])) ./ext/misc/csv.c:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ ppCursor ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 p+0 S8 A64])) ./ext/misc/csv.c:706 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])
        (reg/f:DI 0 ax [78])) ./ext/misc/csv.c:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:60 D.6667 ] [60])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [79])
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:709 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx [orig:61 D.6668 ] [61])
        (sign_extend:DI (reg:SI 0 ax [orig:60 D.6667 ] [60]))) ./ext/misc/csv.c:709 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6667 ] [60])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 0 ax [80])
        (reg:DI 1 dx [orig:61 D.6668 ] [61])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 0 ax [80])
                (ashift:DI (reg:DI 0 ax [80])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 0 ax [80])
                (plus:DI (reg:DI 0 ax [80])
                    (reg:DI 1 dx [orig:61 D.6668 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.6668 ] [61])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:61 D.6668 ] [61])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 0 ax [81])
                (ashift:DI (reg:DI 0 ax [80])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [80])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 0 ax [80])
        (reg:DI 0 ax [81])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [81])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 0 ax [orig:62 D.6668 ] [62])
        (reg:DI 0 ax [80])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [80])
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 0 ax [82])
                (plus:DI (reg:DI 0 ax [orig:62 D.6668 ] [62])
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:709 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.6668 ] [62])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])
        (reg:DI 0 ax [82])) ./ext/misc/csv.c:709 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [82])
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [83])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [orig:63 sqlite3_api.40 ] [63])
        (mem/f/c:DI (reg/f:DI 0 ax [83]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 0 ax [orig:64 D.6669 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:63 sqlite3_api.40 ] [63])
                (const_int 1576 [0x628])) [0 sqlite3_api.40_8->malloc64+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 sqlite3_api.40 ] [63])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx [84])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 1 dx [84])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [84])
        (nil)))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:64 D.6669 ] [64]) [0 *_9 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:710 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6669 ] [64])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg:DI 0 ax [85])
        (reg:DI 0 ax)) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg:DI 0 ax [85])) ./ext/misc/csv.c:710 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [85])
        (nil)))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:711 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ./ext/misc/csv.c:711 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 96 3 (set (reg:SI 0 ax [orig:59 D.6667 ] [59])
        (const_int 7 [0x7])) ./ext/misc/csv.c:711 89 {*movsi_internal}
     (nil))
(jump_insn 96 31 97 3 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:711 650 {jump}
     (nil)
 -> 84)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 97 96 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 72 73 74 75 86 87 88 89 90 91 92 93 94 95 96
(code_label 34 97 35 4 151 "" [1 uses])
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:DI 1 dx [86])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 nByte+0 S8 A64])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 4 (set (reg:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 4 (set (reg:DI 1 dx)
        (reg:DI 1 dx [86])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [86])
        (nil)))
(insn 39 38 40 4 (set (reg:SI 4 si)
        (const_int 0 [0])) ./ext/misc/csv.c:712 89 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) ./ext/misc/csv.c:712 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(call_insn 41 40 42 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fbdb4904000 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:712 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 42 41 43 4 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg/f:DI 1 dx [orig:65 D.6670 ] [65])
                (plus:DI (reg/f:DI 0 ax [88])
                    (const_int 296 [0x128])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:713 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 296 [0x128]))
                (nil)))))
(insn 44 43 45 4 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 272 [0x110])) [0 pCur_10->azVal+0 S8 A64])
        (reg/f:DI 1 dx [orig:65 D.6670 ] [65])) ./ext/misc/csv.c:713 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:65 D.6670 ] [65])
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 1 dx [orig:66 D.6670 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 272 [0x110])) [0 pCur_10->azVal+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [90])
        (nil)))
(insn 48 47 49 4 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 4 (set (reg:SI 0 ax [orig:67 D.6667 ] [67])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:714 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [91])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 0 ax [orig:68 D.6668 ] [68])
        (sign_extend:DI (reg:SI 0 ax [orig:67 D.6667 ] [67]))) ./ext/misc/csv.c:714 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.6667 ] [67])
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 0 ax [orig:69 D.6668 ] [69])
                (ashift:DI (reg:DI 0 ax [orig:68 D.6668 ] [68])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:714 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:68 D.6668 ] [68])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 4 (parallel [
            (set (reg/f:DI 1 dx [orig:70 D.6671 ] [70])
                (plus:DI (reg/f:DI 1 dx [orig:66 D.6670 ] [66])
                    (reg:DI 0 ax [orig:69 D.6668 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:714 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.6668 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:66 D.6670 ] [66])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 53 52 54 4 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 4 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 280 [0x118])) [0 pCur_10->aLen+0 S8 A64])
        (reg/f:DI 1 dx [orig:70 D.6671 ] [70])) ./ext/misc/csv.c:714 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [92])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:70 D.6671 ] [70])
            (nil))))
(insn 55 54 56 4 (set (reg/f:DI 1 dx [orig:71 D.6672 ] [71])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 4 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 ppCursor+0 S8 A64])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (nil))
(insn 57 56 58 4 (set (mem/f:DI (reg/f:DI 0 ax [93]) [0 *ppCursor_19(D)+0 S8 A64])
        (reg/f:DI 1 dx [orig:71 D.6672 ] [71])) ./ext/misc/csv.c:715 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:71 D.6672 ] [71])
            (nil))))
(insn 58 57 59 4 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 4 (set (reg/f:DI 1 dx [orig:72 D.6673 ] [72])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 32 [0x20])) [0 pTab_3->zData+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (nil)))
(insn 60 59 61 4 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 4 (set (reg/f:DI 0 ax [orig:73 D.6673 ] [73])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [95])
                (const_int 24 [0x18])) [0 pTab_3->zFilename+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
        (nil)))
(insn 62 61 63 4 (set (reg/f:DI 2 cx [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 4 (parallel [
            (set (reg/f:DI 2 cx [orig:74 D.6674 ] [74])
                (plus:DI (reg/f:DI 2 cx [96])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:716 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [96])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 64 63 65 4 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:72 D.6673 ] [72])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:72 D.6673 ] [72])
        (nil)))
(insn 65 64 66 4 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:73 D.6673 ] [73])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.6673 ] [73])
        (nil)))
(insn 66 65 67 4 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:74 D.6674 ] [74])) ./ext/misc/csv.c:716 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:74 D.6674 ] [74])
        (nil)))
(call_insn 67 66 68 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_reader_open") [flags 0x3]  <function_decl 0x7fbdb47d2500 csv_reader_open>) [0 csv_reader_open S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:716 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 4 (set (reg:SI 0 ax [orig:75 D.6667 ] [75])
        (reg:SI 0 ax)) ./ext/misc/csv.c:716 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 69 68 70 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:75 D.6667 ] [75])
            (const_int 0 [0]))) ./ext/misc/csv.c:716 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:75 D.6667 ] [75])
        (nil)))
(jump_insn 70 69 71 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) ./ext/misc/csv.c:716 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 81)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 76 97 98
(note 71 70 72 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 5 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 5 (parallel [
            (set (reg/f:DI 1 dx [orig:76 D.6674 ] [76])
                (plus:DI (reg/f:DI 0 ax [97])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:717 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 74 73 75 5 (set (reg:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 5 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:76 D.6674 ] [76])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:76 D.6674 ] [76])
        (nil)))
(insn 76 75 77 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) ./ext/misc/csv.c:717 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [98])
        (nil)))
(call_insn 77 76 78 5 (call (mem:QI (symbol_ref:DI ("csv_xfer_error") [flags 0x3]  <function_decl 0x7fbdb47dfe00 csv_xfer_error>) [0 csv_xfer_error S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:717 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 78 77 98 5 (set (reg:SI 0 ax [orig:59 D.6667 ] [59])
        (const_int 1 [0x1])) ./ext/misc/csv.c:718 89 {*movsi_internal}
     (nil))
(jump_insn 98 78 99 5 (set (pc)
        (label_ref 84)) ./ext/misc/csv.c:718 650 {jump}
     (nil)
 -> 84)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 99 98 81)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 81 99 82 6 153 "" [1 uses])
(note 82 81 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 6 (set (reg:SI 0 ax [orig:59 D.6667 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:720 89 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 77
(code_label 84 83 85 7 152 "" [2 uses])
(note 85 84 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 90 7 (set (reg:SI 0 ax [orig:77 <retval> ] [77])
        (reg:SI 0 ax [orig:59 D.6667 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6667 ] [59])
        (nil)))
(insn 90 86 93 7 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:77 <retval> ] [77])) ./ext/misc/csv.c:721 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 <retval> ] [77])
        (nil)))
(insn 93 90 0 7 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:721 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabNext (csvtabNext, funcdef_no=25, decl_uid=5603, cgraph_uid=25)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 14:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 40:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 49:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 67:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 87
	 Choosing alt 0 in insn 87:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 95
	 Choosing alt 0 in insn 95:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 98:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 104:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 118:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 150:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 152:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 174:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 182:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 202: point = 0
   Insn 199: point = 0
   Insn 195: point = 1
   Insn 192: point = 3
  BB 15
   Insn 209: point = 4
   Insn 143: point = 4
   Insn 142: point = 5
  BB 18
   Insn 189: point = 6
   Insn 188: point = 6
   Insn 186: point = 7
   Insn 185: point = 9
  BB 16
   Insn 211: point = 10
   Insn 152: point = 10
   Insn 151: point = 11
   Insn 150: point = 12
   Insn 149: point = 14
   Insn 148: point = 16
  BB 14
   Insn 139: point = 17
   Insn 138: point = 17
   Insn 137: point = 18
   Insn 136: point = 20
  BB 13
   Insn 134: point = 21
   Insn 133: point = 21
   Insn 132: point = 22
   Insn 131: point = 24
  BB 12
   Insn 129: point = 25
   Insn 128: point = 25
  BB 8
   Insn 207: point = 25
   Insn 77: point = 25
   Insn 76: point = 25
   Insn 75: point = 26
   Insn 74: point = 27
   Insn 73: point = 28
   Insn 72: point = 30
   Insn 71: point = 31
   Insn 70: point = 31
   Insn 69: point = 31
   Insn 68: point = 32
   Insn 67: point = 32
   Insn 66: point = 34
  BB 4
   Insn 205: point = 35
  BB 11
   Insn 125: point = 35
   Insn 124: point = 35
   Insn 122: point = 36
   Insn 121: point = 38
  BB 10
   Insn 118: point = 39
   Insn 117: point = 39
   Insn 116: point = 39
   Insn 115: point = 40
   Insn 114: point = 41
   Insn 113: point = 42
   Insn 112: point = 43
   Insn 111: point = 45
   Insn 110: point = 47
   Insn 109: point = 49
   Insn 108: point = 51
   Insn 107: point = 52
   Insn 106: point = 54
   Insn 105: point = 55
   Insn 104: point = 57
   Insn 103: point = 59
   Insn 102: point = 61
  BB 9
   Insn 99: point = 62
   Insn 98: point = 63
   Insn 97: point = 65
   Insn 96: point = 67
   Insn 95: point = 68
   Insn 94: point = 70
   Insn 93: point = 72
   Insn 92: point = 74
   Insn 91: point = 75
   Insn 90: point = 77
   Insn 89: point = 78
   Insn 88: point = 79
   Insn 87: point = 80
   Insn 86: point = 82
   Insn 85: point = 84
   Insn 84: point = 86
   Insn 83: point = 87
   Insn 82: point = 89
  BB 7
   Insn 64: point = 90
   Insn 63: point = 90
   Insn 62: point = 90
   Insn 61: point = 91
   Insn 60: point = 92
   Insn 59: point = 93
   Insn 58: point = 94
   Insn 57: point = 95
   Insn 56: point = 97
   Insn 55: point = 99
   Insn 54: point = 101
   Insn 53: point = 103
   Insn 52: point = 104
   Insn 51: point = 106
   Insn 50: point = 107
   Insn 49: point = 109
   Insn 48: point = 111
   Insn 47: point = 113
   Insn 46: point = 114
   Insn 45: point = 116
   Insn 44: point = 118
  BB 6
   Insn 42: point = 119
   Insn 41: point = 119
   Insn 40: point = 120
   Insn 39: point = 122
   Insn 38: point = 124
   Insn 37: point = 125
   Insn 36: point = 127
   Insn 35: point = 129
   Insn 34: point = 131
   Insn 33: point = 133
   Insn 32: point = 134
   Insn 31: point = 136
  BB 5
   Insn 29: point = 137
   Insn 28: point = 137
   Insn 27: point = 138
   Insn 26: point = 140
  BB 3
   Insn 20: point = 141
   Insn 19: point = 141
   Insn 18: point = 141
   Insn 17: point = 142
   Insn 16: point = 143
   Insn 15: point = 143
   Insn 14: point = 144
   Insn 13: point = 146
  BB 2
   Insn 11: point = 147
   Insn 10: point = 147
   Insn 9: point = 148
   Insn 8: point = 150
   Insn 7: point = 151
   Insn 6: point = 152
   Insn 2: point = 153
  BB 17
   Insn 182: point = 153
   Insn 181: point = 153
   Insn 180: point = 154
   Insn 179: point = 156
   Insn 178: point = 158
   Insn 177: point = 160
   Insn 176: point = 161
   Insn 175: point = 163
   Insn 174: point = 164
   Insn 173: point = 165
   Insn 172: point = 167
   Insn 171: point = 169
   Insn 170: point = 171
   Insn 169: point = 172
   Insn 168: point = 174
   Insn 167: point = 175
   Insn 166: point = 176
   Insn 165: point = 177
   Insn 164: point = 179
   Insn 163: point = 181
   Insn 162: point = 183
   Insn 161: point = 185
   Insn 160: point = 186
   Insn 159: point = 188
   Insn 158: point = 189
   Insn 157: point = 191
   Insn 156: point = 193
 r59: [143..144]
 r60: [137..138]
 r61: [128..134]
 r62: [130..131]
 r63: [128..129]
 r64: [126..127]
 r65: [119..125]
 r66: [121..122]
 r67: [119..120]
 r68: [115..116]
 r69: [92..114]
 r70: [110..111]
 r71: [108..109]
 r72: [94..107]
 r73: [98..104]
 r74: [100..101]
 r75: [98..99]
 r76: [96..97]
 r77: [93..95]
 r78: [31..32]
 r79: [26..28]
 r80: [81..87]
 r81: [83..84]
 r82: [81..82]
 r83: [78..80]
 r84: [69..75]
 r85: [71..72]
 r86: [69..70]
 r87: [62..68]
 r88: [64..65]
 r89: [62..63]
 r90: [58..59]
 r91: [56..57]
 r92: [41..55]
 r93: [46..52]
 r94: [48..49]
 r95: [46..47]
 r96: [44..45]
 r97: [39..43]
 r98: [35..36]
 r99: [21..22]
 r100: [17..18]
 r101: [13..14]
 r102: [10..12]
 r103: [6..7]
 r104: [190..191]
 r105: [175..189]
 r106: [180..186]
 r107: [182..183]
 r108: [180..181]
 r109: [178..179]
 r110: [176..177]
 r111: [166..172]
 r112: [168..169]
 r113: [166..167]
 r114: [164..165]
 r115: [155..161]
 r116: [157..158]
 r117: [155..156]
 r118: [153..154]
 r119: [2..3]
 r120: [0..1]
 r121: [151..152]
 r122: [149..150]
 r123: [147..148]
 r124: [145..146]
 r125: [141..142]
 r126: [139..140]
 r127: [135..136]
 r128: [132..133]
 r129: [123..124]
 r130: [117..118]
 r131: [112..113]
 r132: [105..106]
 r133: [102..103]
 r134: [90..91]
 r135: [33..34]
 r136: [29..30]
 r137: [25..27]
 r138: [88..89]
 r139: [85..86]
 r140: [78..79]
 r141: [76..77]
 r142: [73..74]
 r143: [66..67]
 r144: [60..61]
 r145: [53..54]
 r146: [50..51]
 r147: [40..42]
 r148: [37..38]
 r149: [23..24]
 r150: [19..20]
 r151: [4..5]
 r152: [15..16]
 r153: [10..11]
 r154: [192..193]
 r155: [187..188]
 r156: [184..185]
 r157: [173..174]
 r158: [170..171]
 r159: [162..163]
 r160: [159..160]
 r161: [8..9]
Compressing live ranges: from 194 to 170 - 87%
Ranges after the compression:
 r59: [124..125]
 r60: [118..119]
 r61: [110..115]
 r62: [112..113]
 r63: [110..111]
 r64: [108..109]
 r65: [102..107]
 r66: [104..105]
 r67: [102..103]
 r68: [98..99]
 r69: [80..97]
 r70: [94..95]
 r71: [92..93]
 r72: [80..91]
 r73: [84..89]
 r74: [86..87]
 r75: [84..85]
 r76: [82..83]
 r77: [80..81]
 r78: [28..29]
 r79: [24..25]
 r80: [70..75]
 r81: [72..73]
 r82: [70..71]
 r83: [68..69]
 r84: [60..65]
 r85: [62..63]
 r86: [60..61]
 r87: [54..59]
 r88: [56..57]
 r89: [54..55]
 r90: [50..51]
 r91: [48..49]
 r92: [36..47]
 r93: [40..45]
 r94: [42..43]
 r95: [40..41]
 r96: [38..39]
 r97: [36..37]
 r98: [32..33]
 r99: [20..21]
 r100: [16..17]
 r101: [12..13]
 r102: [10..11]
 r103: [6..7]
 r104: [166..167]
 r105: [154..165]
 r106: [158..163]
 r107: [160..161]
 r108: [158..159]
 r109: [156..157]
 r110: [154..155]
 r111: [146..151]
 r112: [148..149]
 r113: [146..147]
 r114: [144..145]
 r115: [136..141]
 r116: [138..139]
 r117: [136..137]
 r118: [134..135]
 r119: [2..3]
 r120: [0..1]
 r121: [132..133]
 r122: [130..131]
 r123: [128..129]
 r124: [126..127]
 r125: [122..123]
 r126: [120..121]
 r127: [116..117]
 r128: [114..115]
 r129: [106..107]
 r130: [100..101]
 r131: [96..97]
 r132: [90..91]
 r133: [88..89]
 r134: [78..79]
 r135: [30..31]
 r136: [26..27]
 r137: [24..25]
 r138: [76..77]
 r139: [74..75]
 r140: [68..69]
 r141: [66..67]
 r142: [64..65]
 r143: [58..59]
 r144: [52..53]
 r145: [46..47]
 r146: [44..45]
 r147: [36..37]
 r148: [34..35]
 r149: [22..23]
 r150: [18..19]
 r151: [4..5]
 r152: [14..15]
 r153: [10..11]
 r154: [168..169]
 r155: [164..165]
 r156: [162..163]
 r157: [152..153]
 r158: [150..151]
 r159: [142..143]
 r160: [140..141]
 r161: [8..9]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=64, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 15
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 36
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 41
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 60
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 58
changing reg in insn 52
changing reg in insn 56
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 59
changing reg in insn 67
changing reg in insn 69
changing reg in insn 73
changing reg in insn 75
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 89
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 99
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 99
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 114
changing reg in insn 107
changing reg in insn 111
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 116
changing reg in insn 122
changing reg in insn 124
changing reg in insn 132
changing reg in insn 133
changing reg in insn 137
changing reg in insn 138
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 152
changing reg in insn 186
changing reg in insn 188
changing reg in insn 157
changing reg in insn 158
changing reg in insn 158
changing reg in insn 167
changing reg in insn 160
changing reg in insn 164
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 169
changing reg in insn 173
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 174
changing reg in insn 176
changing reg in insn 180
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 181
changing reg in insn 192
changing reg in insn 195
changing reg in insn 195
changing reg in insn 199
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 26
changing reg in insn 27
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 76
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 96
changing reg in insn 97
changing reg in insn 102
changing reg in insn 103
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 113
changing reg in insn 115
changing reg in insn 121
changing reg in insn 122
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 137
changing reg in insn 142
changing reg in insn 143
changing reg in insn 148
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 185
changing reg in insn 186
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
rescanning insn with uid = 60.
deleting insn with uid = 60.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 117.
rescanning insn with uid = 167.
deleting insn with uid = 167.


csvtabNext

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={69d,65u} r1={40d,33u} r2={15d,8u} r4={14d,7u} r5={13d,7u} r6={1d,71u} r7={1d,25u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={41d,9u} r18={6d} r19={6d} r20={1d,1u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 662{433d,226u,3e} in 159{153 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 121 122 123
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:728 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:729 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [121])) ./ext/misc/csv.c:729 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [121])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [123])
        (mem/f/j:DI (reg/f:DI 0 ax [122]) [0 cur_5(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [122])
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])
        (reg/f:DI 0 ax [123])) ./ext/misc/csv.c:730 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [123])
        (nil)))
(insn 11 10 123 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:731 89 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              11 (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 124 125
(code_label 123 11 12 3 160 "" [1 uses])
(note 12 123 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:DI 0 ax [orig:59 D.6675 ] [59])
                (plus:DI (reg/f:DI 0 ax [124])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:734 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [124])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.6675 ] [59])) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6675 ] [59])
        (nil)))
(call_insn 16 15 17 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csv_read_one_field") [flags 0x3]  <function_decl 0x7fbdb47df000 csv_read_one_field>) [0 csv_read_one_field S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:734 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg:DI 0 ax [125])
        (reg:DI 0 ax)) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
        (reg:DI 0 ax [125])) ./ext/misc/csv.c:734 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [125])
        (nil)))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:735 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) ./ext/misc/csv.c:735 612 {*jcc_1}
     (nil)
 -> 24)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 21 20 205 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 205 21 206 4 (set (pc)
        (label_ref 126)) ./ext/misc/csv.c:736 650 {jump}
     (nil)
 -> 126)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 206 205 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 126
(code_label 24 206 25 5 155 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:738 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (reg:SI 0 ax [orig:60 D.6676 ] [60])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:738 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [126])
        (nil)))
(insn 28 27 29 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:60 D.6676 ] [60])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:738 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6676 ] [60])
        (nil)))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ./ext/misc/csv.c:738 612 {*jcc_1}
     (nil)
 -> 119)
;;  succ:       6 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 61 62 63 64 65 66 67 127 128 129
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 0 ax [orig:61 D.6677 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [127])
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [127])
        (nil)))
(insn 33 32 34 6 (set (reg:SI 1 dx [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx [orig:62 D.6678 ] [62])
        (sign_extend:DI (reg:SI 1 dx [128]))) ./ext/misc/csv.c:739 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [128])
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 1 dx [orig:63 D.6678 ] [63])
                (ashift:DI (reg:DI 1 dx [orig:62 D.6678 ] [62])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.6678 ] [62])
        (nil)))
(insn 36 35 37 6 (parallel [
            (set (reg/f:DI 0 ax [orig:64 D.6677 ] [64])
                (plus:DI (reg/f:DI 0 ax [orig:61 D.6677 ] [61])
                    (reg:DI 1 dx [orig:63 D.6678 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.6678 ] [63])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6677 ] [61])
            (nil))))
(insn 37 36 38 6 (set (reg:SI 1 dx [orig:65 D.6676 ] [65])
        (mem:SI (reg/f:DI 0 ax [orig:64 D.6677 ] [64]) [0 *_15+0 S4 A32])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6677 ] [64])
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:739 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 6 (set (reg:SI 0 ax [orig:66 D.6676 ] [66])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [129])
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:739 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [129])
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg:SI 0 ax [orig:67 D.6676 ] [67])
                (plus:SI (reg:SI 0 ax [orig:66 D.6676 ] [66])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:739 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.6676 ] [66])
        (nil)))
(insn 41 40 42 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:65 D.6676 ] [65])
            (reg:SI 0 ax [orig:67 D.6676 ] [67]))) ./ext/misc/csv.c:739 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:67 D.6676 ] [67])
        (expr_list:REG_DEAD (reg:SI 1 dx [orig:65 D.6676 ] [65])
            (nil))))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) ./ext/misc/csv.c:739 612 {*jcc_1}
     (nil)
 -> 100)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 70 71 72 73 74 75 76 77 130 131 132 133 134
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg/f:DI 0 ax [130])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 0 ax [orig:68 sqlite3_api.41 ] [68])
        (mem/f/c:DI (reg/f:DI 0 ax [130]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [130])
        (nil)))
(insn 46 45 47 7 (set (reg/f:DI 0 ax [orig:69 D.6679 ] [69])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:68 sqlite3_api.41 ] [68])
                (const_int 1592 [0x638])) [0 sqlite3_api.41_19->realloc64+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 sqlite3_api.41 ] [68])
        (nil)))
(insn 47 46 48 7 (set (reg/f:DI 1 dx [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 48 47 49 7 (set (reg:SI 1 dx [orig:70 D.6676 ] [70])
        (mem/j:SI (plus:DI (reg/f:DI 1 dx [131])
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:740 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [131])
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 1 dx [orig:71 D.6676 ] [71])
                (plus:SI (reg:SI 1 dx [orig:70 D.6676 ] [70])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:70 D.6676 ] [70])
        (nil)))
(insn 50 49 51 7 (set (reg:DI 2 cx [orig:72 D.6680 ] [72])
        (sign_extend:DI (reg:SI 1 dx [orig:71 D.6676 ] [71]))) ./ext/misc/csv.c:740 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:71 D.6676 ] [71])
        (nil)))
(insn 51 50 52 7 (set (reg/f:DI 1 dx [132])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 1 dx [orig:73 D.6681 ] [73])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [132])
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [132])
        (nil)))
(insn 53 52 54 7 (set (reg:SI 4 si [133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:740 89 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:DI 4 si [orig:74 D.6678 ] [74])
        (sign_extend:DI (reg:SI 4 si [133]))) ./ext/misc/csv.c:740 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 4 si [133])
        (nil)))
(insn 55 54 56 7 (parallel [
            (set (reg:DI 4 si [orig:75 D.6678 ] [75])
                (ashift:DI (reg:DI 4 si [orig:74 D.6678 ] [74])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:74 D.6678 ] [74])
        (nil)))
(insn 56 55 57 7 (parallel [
            (set (reg/f:DI 1 dx [orig:76 D.6681 ] [76])
                (plus:DI (reg/f:DI 1 dx [orig:73 D.6681 ] [73])
                    (reg:DI 4 si [orig:75 D.6678 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:740 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:75 D.6678 ] [75])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:73 D.6681 ] [73])
            (nil))))
(insn 57 56 58 7 (set (reg/f:DI 1 dx [orig:77 D.6682 ] [77])
        (mem/f:DI (reg/f:DI 1 dx [orig:76 D.6681 ] [76]) [0 *_27+0 S8 A64])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:76 D.6681 ] [76])
        (nil)))
(insn 58 57 59 7 (set (reg:DI 4 si)
        (reg:DI 2 cx [orig:72 D.6680 ] [72])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:72 D.6680 ] [72])
        (nil)))
(insn 59 58 60 7 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:77 D.6682 ] [77])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:77 D.6682 ] [77])
        (nil)))
(call_insn 60 59 61 7 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:69 D.6679 ] [69]) [0 *_20 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:740 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.6679 ] [69])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 7 (set (reg:DI 0 ax [134])
        (reg:DI 0 ax)) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 62 61 63 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
        (reg:DI 0 ax [134])) ./ext/misc/csv.c:740 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [134])
        (nil)))
(insn 63 62 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:741 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) ./ext/misc/csv.c:741 612 {*jcc_1}
     (nil)
 -> 80)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 78 79 135 136 137
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:DI 0 ax [orig:78 D.6675 ] [78])
                (plus:DI (reg/f:DI 0 ax [135])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:742 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [135])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 68 67 69 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fbdb44bf5f0 *.LC0>)) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (nil))
(insn 69 68 70 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:78 D.6675 ] [78])) ./ext/misc/csv.c:742 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 D.6675 ] [78])
        (nil)))
(insn 70 69 71 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) ./ext/misc/csv.c:742 91 {*movqi_internal}
     (nil))
(call_insn 71 70 72 8 (call (mem:QI (symbol_ref:DI ("csv_errmsg") [flags 0x3]  <function_decl 0x7fbdb47d2300 csv_errmsg>) [0 csv_errmsg S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:742 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:QI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 72 71 73 8 (set (reg/f:DI 0 ax [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg/f:DI 1 dx [orig:79 D.6675 ] [79])
                (plus:DI (reg/f:DI 0 ax [136])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:743 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [136])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 74 73 75 8 (set (reg:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 8 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:79 D.6675 ] [79])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:79 D.6675 ] [79])
        (nil)))
(insn 76 75 77 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [137])) ./ext/misc/csv.c:743 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [137])
        (nil)))
(call_insn 77 76 207 8 (call (mem:QI (symbol_ref:DI ("csv_xfer_error") [flags 0x3]  <function_decl 0x7fbdb47dfe00 csv_xfer_error>) [0 csv_xfer_error S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:743 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(jump_insn 207 77 208 8 (set (pc)
        (label_ref 126)) ./ext/misc/csv.c:744 650 {jump}
     (nil)
 -> 126)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 208 207 80)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 80 81 82 83 84 85 86 87 88 89 138 139 140 141 142 143
(code_label 80 208 81 9 159 "" [1 uses])
(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg/f:DI 0 ax [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (nil))
(insn 83 82 84 9 (set (reg/f:DI 0 ax [orig:80 D.6681 ] [80])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [138])
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [138])
        (nil)))
(insn 84 83 85 9 (set (reg:SI 1 dx [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:746 89 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:DI 1 dx [orig:81 D.6678 ] [81])
        (sign_extend:DI (reg:SI 1 dx [139]))) ./ext/misc/csv.c:746 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [139])
        (nil)))
(insn 86 85 87 9 (parallel [
            (set (reg:DI 1 dx [orig:82 D.6678 ] [82])
                (ashift:DI (reg:DI 1 dx [orig:81 D.6678 ] [81])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:746 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:81 D.6678 ] [81])
        (nil)))
(insn 87 86 88 9 (parallel [
            (set (reg/f:DI 1 dx [orig:83 D.6681 ] [83])
                (plus:DI (reg:DI 1 dx [orig:82 D.6678 ] [82])
                    (reg/f:DI 0 ax [orig:80 D.6681 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:746 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:82 D.6678 ] [82])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.6681 ] [80])
            (nil))))
(insn 88 87 89 9 (set (reg/f:DI 0 ax [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 zNew+0 S8 A64])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 9 (set (mem/f:DI (reg/f:DI 1 dx [orig:83 D.6681 ] [83]) [0 *_35+0 S8 A64])
        (reg/f:DI 0 ax [140])) ./ext/misc/csv.c:746 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [140])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:83 D.6681 ] [83])
            (nil))))
(insn 90 89 91 9 (set (reg/f:DI 0 ax [141])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 0 ax [orig:84 D.6677 ] [84])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [141])
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [141])
        (nil)))
(insn 92 91 93 9 (set (reg:SI 1 dx [142])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (nil))
(insn 93 92 94 9 (set (reg:DI 1 dx [orig:85 D.6678 ] [85])
        (sign_extend:DI (reg:SI 1 dx [142]))) ./ext/misc/csv.c:747 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [142])
        (nil)))
(insn 94 93 95 9 (parallel [
            (set (reg:DI 1 dx [orig:86 D.6678 ] [86])
                (ashift:DI (reg:DI 1 dx [orig:85 D.6678 ] [85])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:85 D.6678 ] [85])
        (nil)))
(insn 95 94 96 9 (parallel [
            (set (reg/f:DI 1 dx [orig:87 D.6677 ] [87])
                (plus:DI (reg:DI 1 dx [orig:86 D.6678 ] [86])
                    (reg/f:DI 0 ax [orig:84 D.6677 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:86 D.6678 ] [86])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 D.6677 ] [84])
            (nil))))
(insn 96 95 97 9 (set (reg/f:DI 0 ax [143])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:747 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 9 (set (reg:SI 0 ax [orig:88 D.6676 ] [88])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [143])
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [143])
        (nil)))
(insn 98 97 99 9 (parallel [
            (set (reg:SI 0 ax [orig:89 D.6676 ] [89])
                (plus:SI (reg:SI 0 ax [orig:88 D.6676 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:747 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:88 D.6676 ] [88])
        (nil)))
(insn 99 98 100 9 (set (mem:SI (reg/f:DI 1 dx [orig:87 D.6677 ] [87]) [0 *_39+0 S4 A32])
        (reg:SI 0 ax [orig:89 D.6676 ] [89])) ./ext/misc/csv.c:747 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 D.6676 ] [89])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:87 D.6677 ] [87])
            (nil))))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 90 91 92 93 94 95 96 97 144 145 146 147
(code_label 100 99 101 10 158 "" [1 uses])
(note 101 100 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 10 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 103 102 104 10 (set (reg:SI 0 ax [orig:90 D.6676 ] [90])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [144])
                (const_int 24 [0x18])) [0 pCur_6->rdr.n+0 S4 A64])) ./ext/misc/csv.c:749 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [144])
        (nil)))
(insn 104 103 105 10 (parallel [
            (set (reg:SI 0 ax [orig:91 D.6676 ] [91])
                (plus:SI (reg:SI 0 ax [orig:90 D.6676 ] [90])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:90 D.6676 ] [90])
        (nil)))
(insn 105 104 106 10 (set (reg:DI 1 dx [orig:92 D.6678 ] [92])
        (sign_extend:DI (reg:SI 0 ax [orig:91 D.6676 ] [91]))) ./ext/misc/csv.c:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:91 D.6676 ] [91])
        (nil)))
(insn 106 105 107 10 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 10 (set (reg/f:DI 0 ax [orig:93 D.6681 ] [93])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [145])
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [145])
        (nil)))
(insn 108 107 109 10 (set (reg:SI 2 cx [146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:749 89 {*movsi_internal}
     (nil))
(insn 109 108 110 10 (set (reg:DI 2 cx [orig:94 D.6678 ] [94])
        (sign_extend:DI (reg:SI 2 cx [146]))) ./ext/misc/csv.c:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [146])
        (nil)))
(insn 110 109 111 10 (parallel [
            (set (reg:DI 2 cx [orig:95 D.6678 ] [95])
                (ashift:DI (reg:DI 2 cx [orig:94 D.6678 ] [94])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:94 D.6678 ] [94])
        (nil)))
(insn 111 110 112 10 (parallel [
            (set (reg/f:DI 0 ax [orig:96 D.6681 ] [96])
                (plus:DI (reg/f:DI 0 ax [orig:93 D.6681 ] [93])
                    (reg:DI 2 cx [orig:95 D.6678 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:749 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:95 D.6678 ] [95])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.6681 ] [93])
            (nil))))
(insn 112 111 113 10 (set (reg/f:DI 0 ax [orig:97 D.6682 ] [97])
        (mem/f:DI (reg/f:DI 0 ax [orig:96 D.6681 ] [96]) [0 *_48+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.6681 ] [96])
        (nil)))
(insn 113 112 114 10 (set (reg:DI 2 cx [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (nil))
(insn 114 113 115 10 (set (reg:DI 1 dx)
        (reg:DI 1 dx [orig:92 D.6678 ] [92])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:92 D.6678 ] [92])
        (nil)))
(insn 115 114 116 10 (set (reg:DI 4 si)
        (reg:DI 2 cx [147])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [147])
        (nil)))
(insn 116 115 117 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:97 D.6682 ] [97])) ./ext/misc/csv.c:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.6682 ] [97])
        (nil)))
(call_insn 117 116 118 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fbdb4900a00 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:749 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (nil))))))
(insn 118 117 119 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:750 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 148
(code_label 119 118 120 11 157 "" [1 uses])
(note 120 119 121 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 11 (set (reg/f:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:752 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 124 11 (set (reg:SI 0 ax [orig:98 D.6676 ] [98])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [148])
                (const_int 40 [0x28])) [0 pCur_6->rdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:752 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [148])
        (nil)))
(insn 124 122 125 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 D.6676 ] [98])
            (const_int 44 [0x2c]))) ./ext/misc/csv.c:752 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:98 D.6676 ] [98])
        (nil)))
(jump_insn 125 124 126 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) ./ext/misc/csv.c:752 612 {*jcc_1}
     (nil)
 -> 123)
;;  succ:       3 (DFS_BACK)
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              4 [100.0%] 
;;              8 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 126 125 127 12 156 "" [2 uses])
(note 127 126 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 z+0 S8 A64])
            (const_int 0 [0]))) ./ext/misc/csv.c:753 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 129 128 130 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (nil)
 -> 140)
;;  succ:       15
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 149
(note 130 129 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 13 (set (reg/f:DI 0 ax [149])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:753 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 13 (set (reg:SI 0 ax [orig:99 D.6676 ] [99])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [149])
                (const_int 40 [0x28])) [0 pCur_6->rdr.cTerm+0 S4 A64])) ./ext/misc/csv.c:753 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [149])
        (nil)))
(insn 133 132 134 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:99 D.6676 ] [99])
            (const_int -1 [0xffffffffffffffff]))) ./ext/misc/csv.c:753 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:99 D.6676 ] [99])
        (nil)))
(jump_insn 134 133 135 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (nil)
 -> 146)
;;  succ:       14 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 150
(note 135 134 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 14 (set (reg/f:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:753 87 {*movdi_internal_rex64}
     (nil))
(insn 137 136 138 14 (set (reg:SI 0 ax [orig:100 D.6676 ] [100])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [150])
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:753 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [150])
        (nil)))
(insn 138 137 139 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:100 D.6676 ] [100])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:753 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:100 D.6676 ] [100])
        (nil)))
(jump_insn 139 138 140 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) ./ext/misc/csv.c:753 612 {*jcc_1}
     (nil)
 -> 146)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 151
(code_label 140 139 141 15 161 "" [1 uses])
(note 141 140 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 15 (set (reg/f:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:754 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 209 15 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [151])
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:754 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [151])
        (nil)))
(jump_insn 209 143 210 15 (set (pc)
        (label_ref 190)) ./ext/misc/csv.c:754 650 {jump}
     (nil)
 -> 190)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 210 209 146)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 152 153
(code_label 146 210 147 16 162 "" [2 uses])
(note 147 146 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 16 (set (reg/f:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 16 (set (reg:DI 0 ax [orig:101 D.6683 ] [101])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [152])
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [152])
        (nil)))
(insn 150 149 151 16 (parallel [
            (set (reg:DI 1 dx [orig:102 D.6683 ] [102])
                (plus:DI (reg:DI 0 ax [orig:101 D.6683 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:756 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:101 D.6683 ] [101])
        (nil)))
(insn 151 150 152 16 (set (reg/f:DI 0 ax [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (nil))
(insn 152 151 211 16 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [153])
                (const_int 288 [0x120])) [0 pCur_6->iRowid+0 S8 A64])
        (reg:DI 1 dx [orig:102 D.6683 ] [102])) ./ext/misc/csv.c:756 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [153])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:102 D.6683 ] [102])
            (nil))))
(jump_insn 211 152 212 16 (set (pc)
        (label_ref 183)) ./ext/misc/csv.c:757 650 {jump}
     (nil)
 -> 183)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 212 211 187)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 154 155 156 157 158 159 160
(code_label 187 212 155 17 165 "" [1 uses])
(note 155 187 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg/f:DI 0 ax [154])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 17 (set (reg/f:DI 0 ax [orig:104 sqlite3_api.42 ] [104])
        (mem/f/c:DI (reg/f:DI 0 ax [154]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [154])
        (nil)))
(insn 158 157 159 17 (set (reg/f:DI 0 ax [orig:105 D.6684 ] [105])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:104 sqlite3_api.42 ] [104])
                (const_int 464 [0x1d0])) [0 sqlite3_api.42_57->free+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:104 sqlite3_api.42 ] [104])
        (nil)))
(insn 159 158 160 17 (set (reg/f:DI 1 dx [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 17 (set (reg/f:DI 1 dx [orig:106 D.6681 ] [106])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [155])
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [155])
        (nil)))
(insn 161 160 162 17 (set (reg:SI 2 cx [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:758 89 {*movsi_internal}
     (nil))
(insn 162 161 163 17 (set (reg:DI 2 cx [orig:107 D.6678 ] [107])
        (sign_extend:DI (reg:SI 2 cx [156]))) ./ext/misc/csv.c:758 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [156])
        (nil)))
(insn 163 162 164 17 (parallel [
            (set (reg:DI 2 cx [orig:108 D.6678 ] [108])
                (ashift:DI (reg:DI 2 cx [orig:107 D.6678 ] [107])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:758 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:107 D.6678 ] [107])
        (nil)))
(insn 164 163 165 17 (parallel [
            (set (reg/f:DI 1 dx [orig:109 D.6681 ] [109])
                (plus:DI (reg/f:DI 1 dx [orig:106 D.6681 ] [106])
                    (reg:DI 2 cx [orig:108 D.6678 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:758 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:108 D.6678 ] [108])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:106 D.6681 ] [106])
            (nil))))
(insn 165 164 166 17 (set (reg/f:DI 1 dx [orig:110 D.6682 ] [110])
        (mem/f:DI (reg/f:DI 1 dx [orig:109 D.6681 ] [109]) [0 *_62+0 S8 A64])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:109 D.6681 ] [109])
        (nil)))
(insn 166 165 167 17 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:110 D.6682 ] [110])) ./ext/misc/csv.c:758 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:110 D.6682 ] [110])
        (nil)))
(call_insn 167 166 168 17 (call (mem:QI (reg/f:DI 0 ax [orig:105 D.6684 ] [105]) [0 *_58 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:758 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:105 D.6684 ] [105])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 17 (set (reg/f:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 17 (set (reg/f:DI 0 ax [orig:111 D.6681 ] [111])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [157])
                (const_int 272 [0x110])) [0 pCur_6->azVal+0 S8 A64])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [157])
        (nil)))
(insn 170 169 171 17 (set (reg:SI 1 dx [158])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:759 89 {*movsi_internal}
     (nil))
(insn 171 170 172 17 (set (reg:DI 1 dx [orig:112 D.6678 ] [112])
        (sign_extend:DI (reg:SI 1 dx [158]))) ./ext/misc/csv.c:759 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [158])
        (nil)))
(insn 172 171 173 17 (parallel [
            (set (reg:DI 1 dx [orig:113 D.6678 ] [113])
                (ashift:DI (reg:DI 1 dx [orig:112 D.6678 ] [112])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:759 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:112 D.6678 ] [112])
        (nil)))
(insn 173 172 174 17 (parallel [
            (set (reg/f:DI 0 ax [orig:114 D.6681 ] [114])
                (plus:DI (reg/f:DI 0 ax [orig:111 D.6681 ] [111])
                    (reg:DI 1 dx [orig:113 D.6678 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:759 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:113 D.6678 ] [113])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:111 D.6681 ] [111])
            (nil))))
(insn 174 173 175 17 (set (mem/f:DI (reg/f:DI 0 ax [orig:114 D.6681 ] [114]) [0 *_67+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:759 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:114 D.6681 ] [114])
        (nil)))
(insn 175 174 176 17 (set (reg/f:DI 0 ax [159])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:760 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 17 (set (reg/f:DI 0 ax [orig:115 D.6677 ] [115])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [159])
                (const_int 280 [0x118])) [0 pCur_6->aLen+0 S8 A64])) ./ext/misc/csv.c:760 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [159])
        (nil)))
(insn 177 176 178 17 (set (reg:SI 1 dx [160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:760 89 {*movsi_internal}
     (nil))
(insn 178 177 179 17 (set (reg:DI 1 dx [orig:116 D.6678 ] [116])
        (sign_extend:DI (reg:SI 1 dx [160]))) ./ext/misc/csv.c:760 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [160])
        (nil)))
(insn 179 178 180 17 (parallel [
            (set (reg:DI 1 dx [orig:117 D.6678 ] [117])
                (ashift:DI (reg:DI 1 dx [orig:116 D.6678 ] [116])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:760 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:116 D.6678 ] [116])
        (nil)))
(insn 180 179 181 17 (parallel [
            (set (reg/f:DI 0 ax [orig:118 D.6677 ] [118])
                (plus:DI (reg/f:DI 0 ax [orig:115 D.6677 ] [115])
                    (reg:DI 1 dx [orig:117 D.6678 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:760 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:117 D.6678 ] [117])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 D.6677 ] [115])
            (nil))))
(insn 181 180 182 17 (set (mem:SI (reg/f:DI 0 ax [orig:118 D.6677 ] [118]) [0 *_71+0 S4 A32])
        (const_int 0 [0])) ./ext/misc/csv.c:760 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:118 D.6677 ] [118])
        (nil)))
(insn 182 181 183 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:761 273 {*addsi_1}
     (nil))
;;  succ:       18 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU,DFS_BACK)
;;              16 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 161
(code_label 183 182 184 18 164 "" [1 uses])
(note 184 183 185 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 18 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:757 87 {*movdi_internal_rex64}
     (nil))
(insn 186 185 188 18 (set (reg:SI 0 ax [orig:103 D.6676 ] [103])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [161])
                (const_int 48 [0x30])) [0 pTab_7->nCol+0 S4 A64])) ./ext/misc/csv.c:757 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [161])
        (nil)))
(insn 188 186 189 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:103 D.6676 ] [103])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:757 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:103 D.6676 ] [103])
        (nil)))
(jump_insn 189 188 190 18 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) ./ext/misc/csv.c:757 612 {*jcc_1}
     (nil)
 -> 187)
;;  succ:       17
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              15 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 119 120
(code_label 190 189 191 19 163 "" [1 uses])
(note 191 190 192 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 195 19 (set (reg:SI 0 ax [orig:119 D.6676 ] [119])
        (const_int 0 [0])) ./ext/misc/csv.c:764 89 {*movsi_internal}
     (nil))
(insn 195 192 199 19 (set (reg:SI 0 ax [orig:120 <retval> ] [120])
        (reg:SI 0 ax [orig:119 D.6676 ] [119])) ./ext/misc/csv.c:764 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:119 D.6676 ] [119])
        (nil)))
(insn 199 195 202 19 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:120 <retval> ] [120])) ./ext/misc/csv.c:765 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:120 <retval> ] [120])
        (nil)))
(insn 202 199 0 19 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:765 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabColumn (csvtabColumn, funcdef_no=26, decl_uid=5609, cgraph_uid=26)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 46
changing reg in insn 35
changing reg in insn 39
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 44
changing reg in insn 49
changing reg in insn 52
changing reg in insn 52
changing reg in insn 56
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 45
starting the processing of deferred insns
ending the processing of deferred insns


csvtabColumn

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,16u} r1={9d,8u} r2={6d,4u} r4={4d,3u} r5={4d,3u} r6={1d,21u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={8d,3u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 165{99d,66u,0e} in 43{42 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 75 76
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:775 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 ctx+0 S8 A64])
        (reg:DI 4 si [ ctx ])) ./ext/misc/csv.c:775 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ ctx ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
        (reg:SI 1 dx [ i ])) ./ext/misc/csv.c:775 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ i ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:776 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [74])) ./ext/misc/csv.c:776 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [76])
        (mem/f/j:DI (reg/f:DI 0 ax [75]) [0 cur_1(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 0 ax [76])) ./ext/misc/csv.c:777 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 13 12 14 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])
            (const_int 0 [0]))) ./ext/misc/csv.c:778 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 47)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 77
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:SI 0 ax [orig:59 D.6685 ] [59])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [77])
                (const_int 48 [0x30])) [0 pTab_3->nCol+0 S4 A64])) ./ext/misc/csv.c:778 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 18 17 19 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.6685 ] [59])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32]))) ./ext/misc/csv.c:778 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6685 ] [59])
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 47)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 78 79
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 0 ax [orig:60 D.6686 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [78])
                (const_int 272 [0x110])) [0 pCur_2->azVal+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 23 22 24 4 (set (reg:SI 1 dx [79])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:778 89 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 1 dx [orig:61 D.6687 ] [61])
        (sign_extend:DI (reg:SI 1 dx [79]))) ./ext/misc/csv.c:778 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [79])
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 1 dx [orig:62 D.6687 ] [62])
                (ashift:DI (reg:DI 1 dx [orig:61 D.6687 ] [61])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:778 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:61 D.6687 ] [61])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.6686 ] [63])
                (plus:DI (reg/f:DI 0 ax [orig:60 D.6686 ] [60])
                    (reg:DI 1 dx [orig:62 D.6687 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:778 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.6687 ] [62])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6686 ] [60])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (reg/f:DI 0 ax [orig:64 D.6688 ] [64])
        (mem/f:DI (reg/f:DI 0 ax [orig:63 D.6686 ] [63]) [0 *_9+0 S8 A64])) ./ext/misc/csv.c:778 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.6686 ] [63])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:64 D.6688 ] [64])
            (const_int 0 [0]))) ./ext/misc/csv.c:778 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6688 ] [64])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) ./ext/misc/csv.c:778 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 65 66 67 68 69 70 71 80 81 82 83
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:DI 0 ax [80])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 0 ax [orig:65 sqlite3_api.43 ] [65])
        (mem/f/c:DI (reg/f:DI 0 ax [80]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (nil)))
(insn 33 32 34 5 (set (reg/f:DI 0 ax [orig:66 D.6689 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:65 sqlite3_api.43 ] [65])
                (const_int 680 [0x2a8])) [0 sqlite3_api.43_11->result_text+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 sqlite3_api.43 ] [65])
        (nil)))
(insn 34 33 35 5 (set (reg/f:DI 1 dx [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 1 dx [orig:67 D.6686 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [81])
                (const_int 272 [0x110])) [0 pCur_2->azVal+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [81])
        (nil)))
(insn 36 35 37 5 (set (reg:SI 2 cx [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 i+0 S4 A32])) ./ext/misc/csv.c:779 89 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 2 cx [orig:68 D.6687 ] [68])
        (sign_extend:DI (reg:SI 2 cx [82]))) ./ext/misc/csv.c:779 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [82])
        (nil)))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 2 cx [orig:69 D.6687 ] [69])
                (ashift:DI (reg:DI 2 cx [orig:68 D.6687 ] [68])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:779 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:68 D.6687 ] [68])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 5 (parallel [
            (set (reg/f:DI 1 dx [orig:70 D.6686 ] [70])
                (plus:DI (reg/f:DI 1 dx [orig:67 D.6686 ] [67])
                    (reg:DI 2 cx [orig:69 D.6687 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:779 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:69 D.6687 ] [69])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:67 D.6686 ] [67])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 40 39 41 5 (set (reg/f:DI 4 si [orig:71 D.6688 ] [71])
        (mem/f:DI (reg/f:DI 1 dx [orig:70 D.6686 ] [70]) [0 *_16+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:70 D.6686 ] [70])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 5 di [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 ctx+0 S8 A64])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 5 (set (reg:DI 2 cx)
        (const_int 0 [0])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 5 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) ./ext/misc/csv.c:779 89 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 4 si)
        (reg/f:DI 4 si [orig:71 D.6688 ] [71])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:71 D.6688 ] [71])
        (nil)))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 5 di [83])) ./ext/misc/csv.c:779 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [83])
        (nil)))
(call_insn 46 45 47 5 (call (mem:QI (reg/f:DI 0 ax [orig:66 D.6689 ] [66]) [0 *_12 S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:779 656 {*call}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6689 ] [66])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 72 73
(code_label 47 46 48 6 168 "" [3 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 52 6 (set (reg:SI 0 ax [orig:72 D.6685 ] [72])
        (const_int 0 [0])) ./ext/misc/csv.c:781 89 {*movsi_internal}
     (nil))
(insn 52 49 56 6 (set (reg:SI 0 ax [orig:73 <retval> ] [73])
        (reg:SI 0 ax [orig:72 D.6685 ] [72])) ./ext/misc/csv.c:781 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 D.6685 ] [72])
        (nil)))
(insn 56 52 59 6 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:73 <retval> ] [73])) ./ext/misc/csv.c:782 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 <retval> ] [73])
        (nil)))
(insn 59 56 0 6 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:782 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabRowid (csvtabRowid, funcdef_no=27, decl_uid=5612, cgraph_uid=27)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
starting the processing of deferred insns
ending the processing of deferred insns


csvtabRowid

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={7d,7u} r1={2d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,8u} r7={1d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 46{25d,21u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60 61 62 63 64
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:787 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pRowid+0 S8 A64])
        (reg:DI 4 si [ pRowid ])) ./ext/misc/csv.c:787 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pRowid ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [62])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:788 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [62])) ./ext/misc/csv.c:788 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [62])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx [orig:59 D.6690 ] [59])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [63])
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pRowid+0 S8 A64])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (mem:DI (reg/f:DI 0 ax [64]) [0 *pRowid_4(D)+0 S8 A64])
        (reg:DI 1 dx [orig:59 D.6690 ] [59])) ./ext/misc/csv.c:789 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.6690 ] [59])
            (nil))))
(insn 13 12 16 2 (set (reg:SI 0 ax [orig:60 D.6691 ] [60])
        (const_int 0 [0])) ./ext/misc/csv.c:790 89 {*movsi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:SI 0 ax [orig:61 <retval> ] [61])
        (reg:SI 0 ax [orig:60 D.6691 ] [60])) ./ext/misc/csv.c:790 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6691 ] [60])
        (nil)))
(insn 20 16 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:61 <retval> ] [61])) ./ext/misc/csv.c:791 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 <retval> ] [61])
        (nil)))
(insn 23 20 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:791 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabEof (csvtabEof, funcdef_no=28, decl_uid=5605, cgraph_uid=28)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) qm {*zero_extendqisi2}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 15
changing reg in insn 15
changing reg in insn 19
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
starting the processing of deferred insns
ending the processing of deferred insns


csvtabEof

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={9d,9u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,6u} r7={1d,2u} r17={1d} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 46{27d,19u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 59 60 61 62 63 64 65
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])
        (reg:DI 5 di [ cur ])) ./ext/misc/csv.c:797 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ cur ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 cur+0 S8 A64])) ./ext/misc/csv.c:798 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [63])) ./ext/misc/csv.c:798 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:799 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [orig:59 D.6692 ] [59])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [64])
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])) ./ext/misc/csv.c:799 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 0 ax [65])
                (lshiftrt:DI (reg:DI 0 ax [orig:59 D.6692 ] [59])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ./ext/misc/csv.c:799 547 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.6692 ] [59])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (set (reg:QI 0 ax [orig:60 D.6693 ] [60])
        (reg:QI 0 ax [65])) ./ext/misc/csv.c:799 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [65])
        (nil)))
(insn 12 11 15 2 (set (reg:SI 0 ax [orig:61 D.6694 ] [61])
        (zero_extend:SI (reg:QI 0 ax [orig:60 D.6693 ] [60]))) ./ext/misc/csv.c:799 145 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 D.6693 ] [60])
        (nil)))
(insn 15 12 19 2 (set (reg:SI 0 ax [orig:62 <retval> ] [62])
        (reg:SI 0 ax [orig:61 D.6694 ] [61])) ./ext/misc/csv.c:799 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6694 ] [61])
        (nil)))
(insn 19 15 22 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:62 <retval> ] [62])) ./ext/misc/csv.c:800 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 <retval> ] [62])
        (nil)))
(insn 22 19 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:800 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabFilter (csvtabFilter, funcdef_no=29, decl_uid=5601, cgraph_uid=29)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 32:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) r {*cmpdi_ccno_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 42:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 44:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 61:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 70:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 38
changing reg in insn 39
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 70
changing reg in insn 76
changing reg in insn 80
changing reg in insn 78
changing reg in insn 81
changing reg in insn 92
changing reg in insn 95
changing reg in insn 95
changing reg in insn 99
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 37
changing reg in insn 38
changing reg in insn 50
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 90
starting the processing of deferred insns
ending the processing of deferred insns


csvtabFilter

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={33d,29u} r1={13d,8u} r2={10d,5u} r4={10d,5u} r5={11d,6u} r6={1d,34u} r7={1d,16u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={9d,4u} r18={5d} r19={5d} r20={1d,1u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d,1u} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 398{289d,109u,0e} in 73{68 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 59 72 73 74 75 76
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])
        (reg:DI 5 di [ pVtabCursor ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ pVtabCursor ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 idxNum+0 S4 A32])
        (reg:SI 4 si [ idxNum ])) ./ext/misc/csv.c:810 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ idxNum ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 idxStr+0 S8 A64])
        (reg:DI 1 dx [ idxStr ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ idxStr ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 argc+0 S4 A32])
        (reg:SI 2 cx [ argc ])) ./ext/misc/csv.c:810 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ argc ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 argv+0 S8 A64])
        (reg:DI 37 r8 [ argv ])) ./ext/misc/csv.c:810 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ argv ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:811 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])
        (reg/f:DI 0 ax [72])) ./ext/misc/csv.c:811 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [73])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 0 ax [74])
        (mem/f/j:DI (reg/f:DI 0 ax [73]) [0 pVtabCursor_1(D)->pVtab+0 S8 A64])) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [73])
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])
        (reg/f:DI 0 ax [74])) ./ext/misc/csv.c:812 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [75])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:813 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [75])
                (const_int 288 [0x120])) [0 pCur_2->iRowid+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:813 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [76])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:814 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [orig:59 D.6695 ] [59])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [76])
                (const_int 8 [0x8])) [0 pCur_2->rdr.in+0 S8 A64])) ./ext/misc/csv.c:814 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [76])
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:59 D.6695 ] [59])
            (const_int 0 [0]))) ./ext/misc/csv.c:814 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6695 ] [59])
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ./ext/misc/csv.c:814 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
;;  succ:       3 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 77 78
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 1 dx [orig:60 D.6696 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [77])
                (const_int 64 [0x40])) [0 pCur_2->rdr.zIn+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 3 (set (reg/f:DI 0 ax [orig:61 D.6696 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [78])
                (const_int 32 [0x20])) [0 pTab_3->zData+0 S8 A64])) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (nil)))
(insn 26 25 27 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:60 D.6696 ] [60])
            (reg/f:DI 0 ax [orig:61 D.6696 ] [61]))) ./ext/misc/csv.c:815 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6696 ] [61])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:60 D.6696 ] [60])
            (nil))))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) ./ext/misc/csv.c:815 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 4 (set (reg:SI 1 dx)
        (const_int 815 [0x32f])) ./ext/misc/csv.c:815 89 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7fbdb4598b48 *.LC31>)) ./ext/misc/csv.c:815 87 {*movdi_internal_rex64}
     (nil))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:815 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 35)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62 79
(code_label 35 34 36 5 176 "" [1 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:DI 0 ax [79])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 39 5 (set (reg:DI 0 ax [orig:62 D.6697 ] [62])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [79])
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (nil)))
(insn 39 38 40 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:62 D.6697 ] [62])
            (const_int 0 [0]))) ./ext/misc/csv.c:816 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.6697 ] [62])
        (nil)))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) ./ext/misc/csv.c:816 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 48)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 6 (set (reg:SI 1 dx)
        (const_int 816 [0x330])) ./ext/misc/csv.c:816 89 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7fbdb4598be0 *.LC32>)) ./ext/misc/csv.c:816 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 47 6 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:816 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 48)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64 65 80 81
(code_label 48 47 49 7 177 "" [1 uses])
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 0 ax [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 7 (set (reg:DI 0 ax [orig:63 D.6697 ] [63])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [80])
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (nil)))
(insn 52 51 53 7 (set (reg:DI 1 dx [orig:64 D.6698 ] [64])
        (reg:DI 0 ax [orig:63 D.6697 ] [63])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6697 ] [63])
        (nil)))
(insn 53 52 54 7 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 7 (set (reg:DI 0 ax [orig:65 D.6698 ] [65])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [81])
                (const_int 56 [0x38])) [0 pCur_2->rdr.nIn+0 S8 A64])) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (nil)))
(insn 55 54 56 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 1 dx [orig:64 D.6698 ] [64])
            (reg:DI 0 ax [orig:65 D.6698 ] [65]))) ./ext/misc/csv.c:817 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.6698 ] [65])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.6698 ] [64])
            (nil))))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) ./ext/misc/csv.c:817 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 64)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.5797") [flags 0x2]  <var_decl 0x7fbdb44151c8 __PRETTY_FUNCTION__>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 8 (set (reg:SI 1 dx)
        (const_int 817 [0x331])) ./ext/misc/csv.c:817 89 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fbdb44bf7b8 *.LC3>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7fbdb4598c78 *.LC33>)) ./ext/misc/csv.c:817 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7fbdb4772400 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ./ext/misc/csv.c:817 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 63 62 64)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66 67 82 83
(code_label 64 63 65 9 178 "" [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (nil))
(insn 67 66 68 9 (set (reg:DI 0 ax [orig:66 D.6697 ] [66])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [82])
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (nil)))
(insn 68 67 69 9 (set (reg:DI 1 dx [orig:67 D.6698 ] [67])
        (reg:DI 0 ax [orig:66 D.6697 ] [66])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.6697 ] [66])
        (nil)))
(insn 69 68 70 9 (set (reg/f:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (nil))
(insn 70 69 105 9 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [83])
                (const_int 48 [0x30])) [0 pCur_2->rdr.iIn+0 S8 A64])
        (reg:DI 1 dx [orig:67 D.6698 ] [67])) ./ext/misc/csv.c:818 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:67 D.6698 ] [67])
            (nil))))
(jump_insn 105 70 106 9 (set (pc)
        (label_ref 87)) 650 {jump}
     (nil)
 -> 87)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 106 105 73)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 68 69 84 85 86 87
(code_label 73 106 74 10 175 "" [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 pTab+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 10 (set (reg:DI 2 cx [orig:68 D.6697 ] [68])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [84])
                (const_int 40 [0x28])) [0 pTab_3->iStart+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 77 76 78 10 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 10 (set (reg/f:DI 0 ax [orig:69 D.6695 ] [69])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 8 [0x8])) [0 pCur_2->rdr.in+0 S8 A64])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (nil)))
(insn 79 78 80 10 (set (reg:SI 1 dx)
        (const_int 0 [0])) ./ext/misc/csv.c:820 89 {*movsi_internal}
     (nil))
(insn 80 79 81 10 (set (reg:DI 4 si)
        (reg:DI 2 cx [orig:68 D.6697 ] [68])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:68 D.6697 ] [68])
        (nil)))
(insn 81 80 82 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:69 D.6695 ] [69])) ./ext/misc/csv.c:820 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.6695 ] [69])
        (nil)))
(call_insn 82 81 83 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7fbdb47c5900 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:820 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 83 82 84 10 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:821 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 10 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [86])
                (const_int 48 [0x30])) [0 pCur_2->rdr.iIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:821 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [86])
        (nil)))
(insn 85 84 86 10 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pCur+0 S8 A64])) ./ext/misc/csv.c:822 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 10 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 56 [0x38])) [0 pCur_2->rdr.nIn+0 S8 A64])
        (const_int 0 [0])) ./ext/misc/csv.c:822 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [87])
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 70 71 88
(code_label 87 86 88 11 179 "" [1 uses])
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 pVtabCursor+0 S8 A64])) ./ext/misc/csv.c:824 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) ./ext/misc/csv.c:824 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [88])
        (nil)))
(call_insn 91 90 92 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("csvtabNext") [flags 0x3]  <function_decl 0x7fbdb47dfa00 csvtabNext>) [0 csvtabNext S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:824 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 92 91 95 11 (set (reg:SI 0 ax [orig:70 D.6699 ] [70])
        (reg:SI 0 ax)) ./ext/misc/csv.c:824 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 95 92 99 11 (set (reg:SI 0 ax [orig:71 <retval> ] [71])
        (reg:SI 0 ax [orig:70 D.6699 ] [70])) ./ext/misc/csv.c:824 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:70 D.6699 ] [70])
        (nil)))
(insn 99 95 102 11 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:71 <retval> ] [71])) ./ext/misc/csv.c:825 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 <retval> ] [71])
        (nil)))
(insn 102 99 0 11 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:825 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function csvtabBestIndex (csvtabBestIndex, funcdef_no=30, decl_uid=5588, cgraph_uid=30)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 10
changing reg in insn 13
changing reg in insn 13
changing reg in insn 17
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns


csvtabBestIndex

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp]
;;  ref usage 	r0={5d,5u} r1={2d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 39{23d,16u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60 61 62
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 tab+0 S8 A64])
        (reg:DI 5 di [ tab ])) ./ext/misc/csv.c:836 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ tab ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pIdxInfo+0 S8 A64])
        (reg:DI 4 si [ pIdxInfo ])) ./ext/misc/csv.c:836 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pIdxInfo ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 1 dx [61])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 pIdxInfo+0 S8 A64])) ./ext/misc/csv.c:837 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg:DF 0 ax [62])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [0  S8 A64])) ./ext/misc/csv.c:837 133 {*movdf_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [61])
                (const_int 64 [0x40])) [0 pIdxInfo_1(D)->estimatedCost+0 S8 A64])
        (reg:DF 0 ax [62])) ./ext/misc/csv.c:837 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [62])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [61])
            (nil))))
(insn 10 9 13 2 (set (reg:SI 0 ax [orig:59 D.6703 ] [59])
        (const_int 0 [0])) ./ext/misc/csv.c:868 89 {*movsi_internal}
     (nil))
(insn 13 10 17 2 (set (reg:SI 0 ax [orig:60 <retval> ] [60])
        (reg:SI 0 ax [orig:59 D.6703 ] [59])) ./ext/misc/csv.c:868 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6703 ] [59])
        (nil)))
(insn 17 13 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:60 <retval> ] [60])) ./ext/misc/csv.c:869 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 <retval> ] [60])
        (nil)))
(insn 20 17 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:869 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sqlite3_csv_init (sqlite3_csv_init, funcdef_no=31, decl_uid=5806, cgraph_uid=31)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) i {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) i {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 19
changing reg in insn 22
changing reg in insn 25
changing reg in insn 25
changing reg in insn 29
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
starting the processing of deferred insns
ending the processing of deferred insns


sqlite3_csv_init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={10d,10u} r1={4d,3u} r2={3d,1u} r4={3d,2u} r5={4d,3u} r6={1d,9u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 108{76d,32u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 db+0 S8 A64])
        (reg:DI 5 di [ db ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 pzErrMsg+0 S8 A64])
        (reg:DI 4 si [ pzErrMsg ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ pzErrMsg ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 pApi+0 S8 A64])
        (reg:DI 1 dx [ pApi ])) ./ext/misc/csv.c:943 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ pApi ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [63])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 1 dx [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 pApi+0 S8 A64])) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (reg/f:DI 0 ax [63]) [0 sqlite3_api+0 S8 A64])
        (reg/f:DI 1 dx [64])) ./ext/misc/csv.c:946 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [64])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [65])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("sqlite3_api")  <var_decl 0x7fbdb466d8e8 sqlite3_api>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [orig:59 sqlite3_api.44 ] [59])
        (mem/f/c:DI (reg/f:DI 0 ax [65]) [0 sqlite3_api+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 0 ax [orig:60 D.6704 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [orig:59 sqlite3_api.44 ] [59])
                (const_int 376 [0x178])) [0 sqlite3_api.44_2->create_module+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 sqlite3_api.44 ] [59])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 db+0 S8 A64])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("CsvModule") [flags 0x2]  <var_decl 0x7fbdb4415260 CsvModule>)) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fbdb45a8b48 *.LC35>)) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 5 di [66])) ./ext/misc/csv.c:947 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [66])
        (nil)))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 0 ax [orig:60 D.6704 ] [60]) [0 *_3 S1 A8])
            (const_int 0 [0]))) ./ext/misc/csv.c:947 663 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6704 ] [60])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 20 19 21 2 (set (reg:SI 0 ax [67])
        (reg:SI 0 ax)) ./ext/misc/csv.c:947 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])
        (reg:SI 0 ax [67])) ./ext/misc/csv.c:947 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [67])
        (nil)))
(insn 22 21 25 2 (set (reg:SI 0 ax [orig:61 D.6705 ] [61])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 rc+0 S4 A32])) ./ext/misc/csv.c:953 89 {*movsi_internal}
     (nil))
(insn 25 22 29 2 (set (reg:SI 0 ax [orig:62 <retval> ] [62])
        (reg:SI 0 ax [orig:61 D.6705 ] [61])) ./ext/misc/csv.c:953 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6705 ] [61])
        (nil)))
(insn 29 25 32 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:62 <retval> ] [62])) ./ext/misc/csv.c:957 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 <retval> ] [62])
        (nil)))
(insn 32 29 0 2 (use (reg/i:SI 0 ax)) ./ext/misc/csv.c:957 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

